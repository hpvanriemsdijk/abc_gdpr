#
# ENUMS
#
enum PERMISSION {
  ADMIN, 
  AUDIT
}

enum RACI {
  RESPONDSABLE
  ACCOUNTABLE
  CONSULTED
  INFORMED
}

#
# Models
#
type User @model {
  id: ID! @isUnique
  email: String! @isUnique
  password: String!
  active: Boolean
  specialPermissions: [PERMISSION!]!
  createdAt: DateTime! 
  updatedAt: DateTime! 

  # Relations
  person: Person @relation(name: "UserPerson")
}

type Person @model {
  id: ID! @isUnique
  name: String!
  surname: String
  
  # Relations
  user: User @relation(name: "UserPerson")
  roles: [BusinessRole!]! @relation(name: "RolesPerson")
}

type BusinessRole @model {
  id: ID! @isUnique
  name: String!
  description: String
  raciPrivacy: RACI
  raciSecurity: RACI
  raciFinancial: RACI
  raciExecutive: RACI
  
  # Relations
  person: Person @relation(name: "RolesPerson")
  organizationalUnit: [OrganizationalUnit!]! @relation(name: "BusinessRoleOU")
  process: [Process!]! @relation(name: "BusinessRoleProcess")
}

type OrganizationalUnit @model {
  id: ID! @isUnique
  name: String!
  description: String
  createdAt: DateTime! 
  updatedAt: DateTime! 
  
  # Relations
  children: [OrganizationalUnit!]! @relation(name: "OuToOu")
  parent: OrganizationalUnit @relation(name: "OuToOu")
  processes: [Process!]! @relation(name: "OUProces")
  businessRoles: [BusinessRole!]! @relation(name: "BusinessRoleOU")
  organizationalUnitType: OrganizationalUnitType! @relation(name: "OuOuType")
}

type OrganizationalUnitType @model {
  id: ID! @isUnique
  name: String!
  description: String
  reportingUnit: Boolean
  
  # Relations
  organizationalUnit: [OrganizationalUnit!]! @relation(name: "OuOuType")
}

##
 # Update AllProcessesByOu resolver when update this type
 # 
type Process @model {
  id: ID! @isUnique
  name: String!
  description: String
  createdAt: DateTime! 
  updatedAt: DateTime! 
  
  # Relations
  children: [Process!]! @relation(name: "ProcessToProcess")
  parent: Process @relation(name: "ProcessToProcess")
  organizationalUnit: OrganizationalUnit @relation(name: "OUProces")
  processingActivities: [ProcessingActivity!]! @relation(name: "ProcessProcessingActivities")
  processOwner: BusinessRole @relation(name: "BusinessRoleProcess")
}

type ProcessingActivity @model {
  id: ID! @isUnique
  name: String!
  description: String
  purpose: String
  #controller_id
  #processor_id
  #data_subject_id
  #information_id
  #date_recipient_id
  #erasure_period
  #shared_controller_id
  #processing_categories
  
  # Relations
  process: Process @relation(name: "ProcessProcessingActivities")
  applications: [Application!]! @relation(name: "ProcessProcessingActivitiesApplications")
}

type Application @model {
  id: ID! @isUnique
  name: String!
  alias: [String!]
  description: String
  
  # Relations
  processingActivities: [ProcessingActivity!]! @relation(name: "ProcessProcessingActivitiesApplications")
  dataType: [DataType!]! @relation(name: "ApplicatonData")
}

type DataType @model {
  id: ID! @isUnique
  name: String!
  description: String
  pii: Boolean
  spii: Boolean
  
  # Relations
  application: [Application!]! @relation(name: "ApplicatonData")
}
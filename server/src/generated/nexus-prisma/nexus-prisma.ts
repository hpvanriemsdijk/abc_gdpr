/**
 * This file was automatically generated by nexus-prisma@0.3.7
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../prisma-client'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      User: UserObject
      Person: PersonObject
      BusinessRole: BusinessRoleObject
      OrganizationalUnit: OrganizationalUnitObject
      Process: ProcessObject
      ProcessingActivity: ProcessingActivityObject
      Application: ApplicationObject
      DataType: DataTypeObject
      ClassificationLabel: ClassificationLabelObject
      QualityAttribute: QualityAttributeObject
      OrganizationalUnitType: OrganizationalUnitTypeObject
      UserConnection: UserConnectionObject
      PageInfo: PageInfoObject
      UserEdge: UserEdgeObject
      AggregateUser: AggregateUserObject
      PersonConnection: PersonConnectionObject
      PersonEdge: PersonEdgeObject
      AggregatePerson: AggregatePersonObject
      BusinessRoleConnection: BusinessRoleConnectionObject
      BusinessRoleEdge: BusinessRoleEdgeObject
      AggregateBusinessRole: AggregateBusinessRoleObject
      OrganizationalUnitConnection: OrganizationalUnitConnectionObject
      OrganizationalUnitEdge: OrganizationalUnitEdgeObject
      AggregateOrganizationalUnit: AggregateOrganizationalUnitObject
      OrganizationalUnitTypeConnection: OrganizationalUnitTypeConnectionObject
      OrganizationalUnitTypeEdge: OrganizationalUnitTypeEdgeObject
      AggregateOrganizationalUnitType: AggregateOrganizationalUnitTypeObject
      ProcessConnection: ProcessConnectionObject
      ProcessEdge: ProcessEdgeObject
      AggregateProcess: AggregateProcessObject
      ProcessingActivityConnection: ProcessingActivityConnectionObject
      ProcessingActivityEdge: ProcessingActivityEdgeObject
      AggregateProcessingActivity: AggregateProcessingActivityObject
      ApplicationConnection: ApplicationConnectionObject
      ApplicationEdge: ApplicationEdgeObject
      AggregateApplication: AggregateApplicationObject
      DataTypeConnection: DataTypeConnectionObject
      DataTypeEdge: DataTypeEdgeObject
      AggregateDataType: AggregateDataTypeObject
      QualityAttributeConnection: QualityAttributeConnectionObject
      QualityAttributeEdge: QualityAttributeEdgeObject
      AggregateQualityAttribute: AggregateQualityAttributeObject
      ClassificationLabelConnection: ClassificationLabelConnectionObject
      ClassificationLabelEdge: ClassificationLabelEdgeObject
      AggregateClassificationLabel: AggregateClassificationLabelObject
      Organization: OrganizationObject
      Location: LocationObject
      OrganizationConnection: OrganizationConnectionObject
      OrganizationEdge: OrganizationEdgeObject
      AggregateOrganization: AggregateOrganizationObject
      LocationConnection: LocationConnectionObject
      LocationEdge: LocationEdgeObject
      AggregateLocation: AggregateLocationObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      UserSubscriptionPayload: UserSubscriptionPayloadObject
      UserPreviousValues: UserPreviousValuesObject
      PersonSubscriptionPayload: PersonSubscriptionPayloadObject
      PersonPreviousValues: PersonPreviousValuesObject
      BusinessRoleSubscriptionPayload: BusinessRoleSubscriptionPayloadObject
      BusinessRolePreviousValues: BusinessRolePreviousValuesObject
      OrganizationalUnitSubscriptionPayload: OrganizationalUnitSubscriptionPayloadObject
      OrganizationalUnitPreviousValues: OrganizationalUnitPreviousValuesObject
      OrganizationalUnitTypeSubscriptionPayload: OrganizationalUnitTypeSubscriptionPayloadObject
      OrganizationalUnitTypePreviousValues: OrganizationalUnitTypePreviousValuesObject
      ProcessSubscriptionPayload: ProcessSubscriptionPayloadObject
      ProcessPreviousValues: ProcessPreviousValuesObject
      ProcessingActivitySubscriptionPayload: ProcessingActivitySubscriptionPayloadObject
      ProcessingActivityPreviousValues: ProcessingActivityPreviousValuesObject
      ApplicationSubscriptionPayload: ApplicationSubscriptionPayloadObject
      ApplicationPreviousValues: ApplicationPreviousValuesObject
      DataTypeSubscriptionPayload: DataTypeSubscriptionPayloadObject
      DataTypePreviousValues: DataTypePreviousValuesObject
      QualityAttributeSubscriptionPayload: QualityAttributeSubscriptionPayloadObject
      QualityAttributePreviousValues: QualityAttributePreviousValuesObject
      ClassificationLabelSubscriptionPayload: ClassificationLabelSubscriptionPayloadObject
      ClassificationLabelPreviousValues: ClassificationLabelPreviousValuesObject
      OrganizationSubscriptionPayload: OrganizationSubscriptionPayloadObject
      OrganizationPreviousValues: OrganizationPreviousValuesObject
      LocationSubscriptionPayload: LocationSubscriptionPayloadObject
      LocationPreviousValues: LocationPreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      User: UserFieldDetails
      Person: PersonFieldDetails
      BusinessRole: BusinessRoleFieldDetails
      OrganizationalUnit: OrganizationalUnitFieldDetails
      Process: ProcessFieldDetails
      ProcessingActivity: ProcessingActivityFieldDetails
      Application: ApplicationFieldDetails
      DataType: DataTypeFieldDetails
      ClassificationLabel: ClassificationLabelFieldDetails
      QualityAttribute: QualityAttributeFieldDetails
      OrganizationalUnitType: OrganizationalUnitTypeFieldDetails
      UserConnection: UserConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      UserEdge: UserEdgeFieldDetails
      AggregateUser: AggregateUserFieldDetails
      PersonConnection: PersonConnectionFieldDetails
      PersonEdge: PersonEdgeFieldDetails
      AggregatePerson: AggregatePersonFieldDetails
      BusinessRoleConnection: BusinessRoleConnectionFieldDetails
      BusinessRoleEdge: BusinessRoleEdgeFieldDetails
      AggregateBusinessRole: AggregateBusinessRoleFieldDetails
      OrganizationalUnitConnection: OrganizationalUnitConnectionFieldDetails
      OrganizationalUnitEdge: OrganizationalUnitEdgeFieldDetails
      AggregateOrganizationalUnit: AggregateOrganizationalUnitFieldDetails
      OrganizationalUnitTypeConnection: OrganizationalUnitTypeConnectionFieldDetails
      OrganizationalUnitTypeEdge: OrganizationalUnitTypeEdgeFieldDetails
      AggregateOrganizationalUnitType: AggregateOrganizationalUnitTypeFieldDetails
      ProcessConnection: ProcessConnectionFieldDetails
      ProcessEdge: ProcessEdgeFieldDetails
      AggregateProcess: AggregateProcessFieldDetails
      ProcessingActivityConnection: ProcessingActivityConnectionFieldDetails
      ProcessingActivityEdge: ProcessingActivityEdgeFieldDetails
      AggregateProcessingActivity: AggregateProcessingActivityFieldDetails
      ApplicationConnection: ApplicationConnectionFieldDetails
      ApplicationEdge: ApplicationEdgeFieldDetails
      AggregateApplication: AggregateApplicationFieldDetails
      DataTypeConnection: DataTypeConnectionFieldDetails
      DataTypeEdge: DataTypeEdgeFieldDetails
      AggregateDataType: AggregateDataTypeFieldDetails
      QualityAttributeConnection: QualityAttributeConnectionFieldDetails
      QualityAttributeEdge: QualityAttributeEdgeFieldDetails
      AggregateQualityAttribute: AggregateQualityAttributeFieldDetails
      ClassificationLabelConnection: ClassificationLabelConnectionFieldDetails
      ClassificationLabelEdge: ClassificationLabelEdgeFieldDetails
      AggregateClassificationLabel: AggregateClassificationLabelFieldDetails
      Organization: OrganizationFieldDetails
      Location: LocationFieldDetails
      OrganizationConnection: OrganizationConnectionFieldDetails
      OrganizationEdge: OrganizationEdgeFieldDetails
      AggregateOrganization: AggregateOrganizationFieldDetails
      LocationConnection: LocationConnectionFieldDetails
      LocationEdge: LocationEdgeFieldDetails
      AggregateLocation: AggregateLocationFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      UserSubscriptionPayload: UserSubscriptionPayloadFieldDetails
      UserPreviousValues: UserPreviousValuesFieldDetails
      PersonSubscriptionPayload: PersonSubscriptionPayloadFieldDetails
      PersonPreviousValues: PersonPreviousValuesFieldDetails
      BusinessRoleSubscriptionPayload: BusinessRoleSubscriptionPayloadFieldDetails
      BusinessRolePreviousValues: BusinessRolePreviousValuesFieldDetails
      OrganizationalUnitSubscriptionPayload: OrganizationalUnitSubscriptionPayloadFieldDetails
      OrganizationalUnitPreviousValues: OrganizationalUnitPreviousValuesFieldDetails
      OrganizationalUnitTypeSubscriptionPayload: OrganizationalUnitTypeSubscriptionPayloadFieldDetails
      OrganizationalUnitTypePreviousValues: OrganizationalUnitTypePreviousValuesFieldDetails
      ProcessSubscriptionPayload: ProcessSubscriptionPayloadFieldDetails
      ProcessPreviousValues: ProcessPreviousValuesFieldDetails
      ProcessingActivitySubscriptionPayload: ProcessingActivitySubscriptionPayloadFieldDetails
      ProcessingActivityPreviousValues: ProcessingActivityPreviousValuesFieldDetails
      ApplicationSubscriptionPayload: ApplicationSubscriptionPayloadFieldDetails
      ApplicationPreviousValues: ApplicationPreviousValuesFieldDetails
      DataTypeSubscriptionPayload: DataTypeSubscriptionPayloadFieldDetails
      DataTypePreviousValues: DataTypePreviousValuesFieldDetails
      QualityAttributeSubscriptionPayload: QualityAttributeSubscriptionPayloadFieldDetails
      QualityAttributePreviousValues: QualityAttributePreviousValuesFieldDetails
      ClassificationLabelSubscriptionPayload: ClassificationLabelSubscriptionPayloadFieldDetails
      ClassificationLabelPreviousValues: ClassificationLabelPreviousValuesFieldDetails
      OrganizationSubscriptionPayload: OrganizationSubscriptionPayloadFieldDetails
      OrganizationPreviousValues: OrganizationPreviousValuesFieldDetails
      LocationSubscriptionPayload: LocationSubscriptionPayloadFieldDetails
      LocationPreviousValues: LocationPreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      UserWhereUniqueInput: UserWhereUniqueInputInputObject
      BusinessRoleWhereInput: BusinessRoleWhereInputInputObject
      PersonWhereInput: PersonWhereInputInputObject
      UserWhereInput: UserWhereInputInputObject
      OrganizationalUnitWhereInput: OrganizationalUnitWhereInputInputObject
      ProcessWhereInput: ProcessWhereInputInputObject
      ProcessingActivityWhereInput: ProcessingActivityWhereInputInputObject
      ApplicationWhereInput: ApplicationWhereInputInputObject
      DataTypeWhereInput: DataTypeWhereInputInputObject
      ClassificationLabelWhereInput: ClassificationLabelWhereInputInputObject
      QualityAttributeWhereInput: QualityAttributeWhereInputInputObject
      OrganizationalUnitTypeWhereInput: OrganizationalUnitTypeWhereInputInputObject
      PersonWhereUniqueInput: PersonWhereUniqueInputInputObject
      BusinessRoleWhereUniqueInput: BusinessRoleWhereUniqueInputInputObject
      OrganizationalUnitWhereUniqueInput: OrganizationalUnitWhereUniqueInputInputObject
      OrganizationalUnitTypeWhereUniqueInput: OrganizationalUnitTypeWhereUniqueInputInputObject
      ProcessWhereUniqueInput: ProcessWhereUniqueInputInputObject
      ProcessingActivityWhereUniqueInput: ProcessingActivityWhereUniqueInputInputObject
      ApplicationWhereUniqueInput: ApplicationWhereUniqueInputInputObject
      DataTypeWhereUniqueInput: DataTypeWhereUniqueInputInputObject
      QualityAttributeWhereUniqueInput: QualityAttributeWhereUniqueInputInputObject
      ClassificationLabelWhereUniqueInput: ClassificationLabelWhereUniqueInputInputObject
      OrganizationWhereUniqueInput: OrganizationWhereUniqueInputInputObject
      OrganizationWhereInput: OrganizationWhereInputInputObject
      LocationWhereInput: LocationWhereInputInputObject
      LocationWhereUniqueInput: LocationWhereUniqueInputInputObject
      UserCreateInput: UserCreateInputInputObject
      UserCreatespecialPermissionsInput: UserCreatespecialPermissionsInputInputObject
      PersonCreateOneWithoutUserInput: PersonCreateOneWithoutUserInputInputObject
      PersonCreateWithoutUserInput: PersonCreateWithoutUserInputInputObject
      BusinessRoleCreateManyWithoutPersonInput: BusinessRoleCreateManyWithoutPersonInputInputObject
      BusinessRoleCreateWithoutPersonInput: BusinessRoleCreateWithoutPersonInputInputObject
      OrganizationalUnitCreateOneWithoutBusinessRolesInput: OrganizationalUnitCreateOneWithoutBusinessRolesInputInputObject
      OrganizationalUnitCreateWithoutBusinessRolesInput: OrganizationalUnitCreateWithoutBusinessRolesInputInputObject
      OrganizationalUnitCreateManyWithoutParentInput: OrganizationalUnitCreateManyWithoutParentInputInputObject
      OrganizationalUnitCreateWithoutParentInput: OrganizationalUnitCreateWithoutParentInputInputObject
      ProcessCreateManyWithoutOrganizationalUnitInput: ProcessCreateManyWithoutOrganizationalUnitInputInputObject
      ProcessCreateWithoutOrganizationalUnitInput: ProcessCreateWithoutOrganizationalUnitInputInputObject
      ProcessingActivityCreateManyWithoutProcessInput: ProcessingActivityCreateManyWithoutProcessInputInputObject
      ProcessingActivityCreateWithoutProcessInput: ProcessingActivityCreateWithoutProcessInputInputObject
      ApplicationCreateManyWithoutProcessingActivitiesInput: ApplicationCreateManyWithoutProcessingActivitiesInputInputObject
      ApplicationCreateWithoutProcessingActivitiesInput: ApplicationCreateWithoutProcessingActivitiesInputInputObject
      DataTypeCreateManyWithoutApplicationInput: DataTypeCreateManyWithoutApplicationInputInputObject
      DataTypeCreateWithoutApplicationInput: DataTypeCreateWithoutApplicationInputInputObject
      ClassificationLabelCreateManyWithoutDataTypeInput: ClassificationLabelCreateManyWithoutDataTypeInputInputObject
      ClassificationLabelCreateWithoutDataTypeInput: ClassificationLabelCreateWithoutDataTypeInputInputObject
      QualityAttributeCreateOneWithoutClassificationLabelsInput: QualityAttributeCreateOneWithoutClassificationLabelsInputInputObject
      QualityAttributeCreateWithoutClassificationLabelsInput: QualityAttributeCreateWithoutClassificationLabelsInputInputObject
      BusinessRoleCreateOneWithoutAppBusinessOwnerInput: BusinessRoleCreateOneWithoutAppBusinessOwnerInputInputObject
      BusinessRoleCreateWithoutAppBusinessOwnerInput: BusinessRoleCreateWithoutAppBusinessOwnerInputInputObject
      PersonCreateOneWithoutRolesInput: PersonCreateOneWithoutRolesInputInputObject
      PersonCreateWithoutRolesInput: PersonCreateWithoutRolesInputInputObject
      UserCreateOneWithoutPersonInput: UserCreateOneWithoutPersonInputInputObject
      UserCreateWithoutPersonInput: UserCreateWithoutPersonInputInputObject
      ProcessCreateManyWithoutProcessOwnerInput: ProcessCreateManyWithoutProcessOwnerInputInputObject
      ProcessCreateWithoutProcessOwnerInput: ProcessCreateWithoutProcessOwnerInputInputObject
      OrganizationalUnitCreateOneWithoutProcessesInput: OrganizationalUnitCreateOneWithoutProcessesInputInputObject
      OrganizationalUnitCreateWithoutProcessesInput: OrganizationalUnitCreateWithoutProcessesInputInputObject
      OrganizationalUnitCreateOneWithoutChildrenInput: OrganizationalUnitCreateOneWithoutChildrenInputInputObject
      OrganizationalUnitCreateWithoutChildrenInput: OrganizationalUnitCreateWithoutChildrenInputInputObject
      BusinessRoleCreateManyWithoutOrganizationalUnitInput: BusinessRoleCreateManyWithoutOrganizationalUnitInputInputObject
      BusinessRoleCreateWithoutOrganizationalUnitInput: BusinessRoleCreateWithoutOrganizationalUnitInputInputObject
      ApplicationCreateManyWithoutBusinessOwnerInput: ApplicationCreateManyWithoutBusinessOwnerInputInputObject
      ApplicationCreateWithoutBusinessOwnerInput: ApplicationCreateWithoutBusinessOwnerInputInputObject
      ProcessingActivityCreateManyWithoutApplicationsInput: ProcessingActivityCreateManyWithoutApplicationsInputInputObject
      ProcessingActivityCreateWithoutApplicationsInput: ProcessingActivityCreateWithoutApplicationsInputInputObject
      ProcessCreateOneWithoutProcessingActivitiesInput: ProcessCreateOneWithoutProcessingActivitiesInputInputObject
      ProcessCreateWithoutProcessingActivitiesInput: ProcessCreateWithoutProcessingActivitiesInputInputObject
      BusinessRoleCreateOneWithoutProcessInput: BusinessRoleCreateOneWithoutProcessInputInputObject
      BusinessRoleCreateWithoutProcessInput: BusinessRoleCreateWithoutProcessInputInputObject
      ApplicationCreateManyWithoutItOwnerInput: ApplicationCreateManyWithoutItOwnerInputInputObject
      ApplicationCreateWithoutItOwnerInput: ApplicationCreateWithoutItOwnerInputInputObject
      BusinessRoleCreateOneWithoutAppSecAdminInput: BusinessRoleCreateOneWithoutAppSecAdminInputInputObject
      BusinessRoleCreateWithoutAppSecAdminInput: BusinessRoleCreateWithoutAppSecAdminInputInputObject
      ApplicationCreateManyWithoutSecurityAdministratorInput: ApplicationCreateManyWithoutSecurityAdministratorInputInputObject
      ApplicationCreateWithoutSecurityAdministratorInput: ApplicationCreateWithoutSecurityAdministratorInputInputObject
      BusinessRoleCreateOneWithoutAppItOwnerInput: BusinessRoleCreateOneWithoutAppItOwnerInputInputObject
      BusinessRoleCreateWithoutAppItOwnerInput: BusinessRoleCreateWithoutAppItOwnerInputInputObject
      OrganizationalUnitTypeCreateOneWithoutOrganizationalUnitInput: OrganizationalUnitTypeCreateOneWithoutOrganizationalUnitInputInputObject
      OrganizationalUnitTypeCreateWithoutOrganizationalUnitInput: OrganizationalUnitTypeCreateWithoutOrganizationalUnitInputInputObject
      UserUpdateInput: UserUpdateInputInputObject
      UserUpdatespecialPermissionsInput: UserUpdatespecialPermissionsInputInputObject
      PersonUpdateOneWithoutUserInput: PersonUpdateOneWithoutUserInputInputObject
      PersonUpdateWithoutUserDataInput: PersonUpdateWithoutUserDataInputInputObject
      BusinessRoleUpdateManyWithoutPersonInput: BusinessRoleUpdateManyWithoutPersonInputInputObject
      BusinessRoleUpdateWithWhereUniqueWithoutPersonInput: BusinessRoleUpdateWithWhereUniqueWithoutPersonInputInputObject
      BusinessRoleUpdateWithoutPersonDataInput: BusinessRoleUpdateWithoutPersonDataInputInputObject
      OrganizationalUnitUpdateOneRequiredWithoutBusinessRolesInput: OrganizationalUnitUpdateOneRequiredWithoutBusinessRolesInputInputObject
      OrganizationalUnitUpdateWithoutBusinessRolesDataInput: OrganizationalUnitUpdateWithoutBusinessRolesDataInputInputObject
      OrganizationalUnitUpdateManyWithoutParentInput: OrganizationalUnitUpdateManyWithoutParentInputInputObject
      OrganizationalUnitUpdateWithWhereUniqueWithoutParentInput: OrganizationalUnitUpdateWithWhereUniqueWithoutParentInputInputObject
      OrganizationalUnitUpdateWithoutParentDataInput: OrganizationalUnitUpdateWithoutParentDataInputInputObject
      ProcessUpdateManyWithoutOrganizationalUnitInput: ProcessUpdateManyWithoutOrganizationalUnitInputInputObject
      ProcessUpdateWithWhereUniqueWithoutOrganizationalUnitInput: ProcessUpdateWithWhereUniqueWithoutOrganizationalUnitInputInputObject
      ProcessUpdateWithoutOrganizationalUnitDataInput: ProcessUpdateWithoutOrganizationalUnitDataInputInputObject
      ProcessingActivityUpdateManyWithoutProcessInput: ProcessingActivityUpdateManyWithoutProcessInputInputObject
      ProcessingActivityUpdateWithWhereUniqueWithoutProcessInput: ProcessingActivityUpdateWithWhereUniqueWithoutProcessInputInputObject
      ProcessingActivityUpdateWithoutProcessDataInput: ProcessingActivityUpdateWithoutProcessDataInputInputObject
      ApplicationUpdateManyWithoutProcessingActivitiesInput: ApplicationUpdateManyWithoutProcessingActivitiesInputInputObject
      ApplicationUpdateWithWhereUniqueWithoutProcessingActivitiesInput: ApplicationUpdateWithWhereUniqueWithoutProcessingActivitiesInputInputObject
      ApplicationUpdateWithoutProcessingActivitiesDataInput: ApplicationUpdateWithoutProcessingActivitiesDataInputInputObject
      DataTypeUpdateManyWithoutApplicationInput: DataTypeUpdateManyWithoutApplicationInputInputObject
      DataTypeUpdateWithWhereUniqueWithoutApplicationInput: DataTypeUpdateWithWhereUniqueWithoutApplicationInputInputObject
      DataTypeUpdateWithoutApplicationDataInput: DataTypeUpdateWithoutApplicationDataInputInputObject
      ClassificationLabelUpdateManyWithoutDataTypeInput: ClassificationLabelUpdateManyWithoutDataTypeInputInputObject
      ClassificationLabelUpdateWithWhereUniqueWithoutDataTypeInput: ClassificationLabelUpdateWithWhereUniqueWithoutDataTypeInputInputObject
      ClassificationLabelUpdateWithoutDataTypeDataInput: ClassificationLabelUpdateWithoutDataTypeDataInputInputObject
      QualityAttributeUpdateOneWithoutClassificationLabelsInput: QualityAttributeUpdateOneWithoutClassificationLabelsInputInputObject
      QualityAttributeUpdateWithoutClassificationLabelsDataInput: QualityAttributeUpdateWithoutClassificationLabelsDataInputInputObject
      QualityAttributeUpsertWithoutClassificationLabelsInput: QualityAttributeUpsertWithoutClassificationLabelsInputInputObject
      ClassificationLabelUpsertWithWhereUniqueWithoutDataTypeInput: ClassificationLabelUpsertWithWhereUniqueWithoutDataTypeInputInputObject
      ClassificationLabelScalarWhereInput: ClassificationLabelScalarWhereInputInputObject
      ClassificationLabelUpdateManyWithWhereNestedInput: ClassificationLabelUpdateManyWithWhereNestedInputInputObject
      ClassificationLabelUpdateManyDataInput: ClassificationLabelUpdateManyDataInputInputObject
      DataTypeUpsertWithWhereUniqueWithoutApplicationInput: DataTypeUpsertWithWhereUniqueWithoutApplicationInputInputObject
      DataTypeScalarWhereInput: DataTypeScalarWhereInputInputObject
      DataTypeUpdateManyWithWhereNestedInput: DataTypeUpdateManyWithWhereNestedInputInputObject
      DataTypeUpdateManyDataInput: DataTypeUpdateManyDataInputInputObject
      BusinessRoleUpdateOneWithoutAppBusinessOwnerInput: BusinessRoleUpdateOneWithoutAppBusinessOwnerInputInputObject
      BusinessRoleUpdateWithoutAppBusinessOwnerDataInput: BusinessRoleUpdateWithoutAppBusinessOwnerDataInputInputObject
      PersonUpdateOneWithoutRolesInput: PersonUpdateOneWithoutRolesInputInputObject
      PersonUpdateWithoutRolesDataInput: PersonUpdateWithoutRolesDataInputInputObject
      UserUpdateOneWithoutPersonInput: UserUpdateOneWithoutPersonInputInputObject
      UserUpdateWithoutPersonDataInput: UserUpdateWithoutPersonDataInputInputObject
      UserUpsertWithoutPersonInput: UserUpsertWithoutPersonInputInputObject
      PersonUpsertWithoutRolesInput: PersonUpsertWithoutRolesInputInputObject
      ProcessUpdateManyWithoutProcessOwnerInput: ProcessUpdateManyWithoutProcessOwnerInputInputObject
      ProcessUpdateWithWhereUniqueWithoutProcessOwnerInput: ProcessUpdateWithWhereUniqueWithoutProcessOwnerInputInputObject
      ProcessUpdateWithoutProcessOwnerDataInput: ProcessUpdateWithoutProcessOwnerDataInputInputObject
      OrganizationalUnitUpdateOneWithoutProcessesInput: OrganizationalUnitUpdateOneWithoutProcessesInputInputObject
      OrganizationalUnitUpdateWithoutProcessesDataInput: OrganizationalUnitUpdateWithoutProcessesDataInputInputObject
      OrganizationalUnitUpdateOneWithoutChildrenInput: OrganizationalUnitUpdateOneWithoutChildrenInputInputObject
      OrganizationalUnitUpdateWithoutChildrenDataInput: OrganizationalUnitUpdateWithoutChildrenDataInputInputObject
      BusinessRoleUpdateManyWithoutOrganizationalUnitInput: BusinessRoleUpdateManyWithoutOrganizationalUnitInputInputObject
      BusinessRoleUpdateWithWhereUniqueWithoutOrganizationalUnitInput: BusinessRoleUpdateWithWhereUniqueWithoutOrganizationalUnitInputInputObject
      BusinessRoleUpdateWithoutOrganizationalUnitDataInput: BusinessRoleUpdateWithoutOrganizationalUnitDataInputInputObject
      ApplicationUpdateManyWithoutBusinessOwnerInput: ApplicationUpdateManyWithoutBusinessOwnerInputInputObject
      ApplicationUpdateWithWhereUniqueWithoutBusinessOwnerInput: ApplicationUpdateWithWhereUniqueWithoutBusinessOwnerInputInputObject
      ApplicationUpdateWithoutBusinessOwnerDataInput: ApplicationUpdateWithoutBusinessOwnerDataInputInputObject
      ProcessingActivityUpdateManyWithoutApplicationsInput: ProcessingActivityUpdateManyWithoutApplicationsInputInputObject
      ProcessingActivityUpdateWithWhereUniqueWithoutApplicationsInput: ProcessingActivityUpdateWithWhereUniqueWithoutApplicationsInputInputObject
      ProcessingActivityUpdateWithoutApplicationsDataInput: ProcessingActivityUpdateWithoutApplicationsDataInputInputObject
      ProcessUpdateOneWithoutProcessingActivitiesInput: ProcessUpdateOneWithoutProcessingActivitiesInputInputObject
      ProcessUpdateWithoutProcessingActivitiesDataInput: ProcessUpdateWithoutProcessingActivitiesDataInputInputObject
      BusinessRoleUpdateOneWithoutProcessInput: BusinessRoleUpdateOneWithoutProcessInputInputObject
      BusinessRoleUpdateWithoutProcessDataInput: BusinessRoleUpdateWithoutProcessDataInputInputObject
      ApplicationUpdateManyWithoutItOwnerInput: ApplicationUpdateManyWithoutItOwnerInputInputObject
      ApplicationUpdateWithWhereUniqueWithoutItOwnerInput: ApplicationUpdateWithWhereUniqueWithoutItOwnerInputInputObject
      ApplicationUpdateWithoutItOwnerDataInput: ApplicationUpdateWithoutItOwnerDataInputInputObject
      BusinessRoleUpdateOneWithoutAppSecAdminInput: BusinessRoleUpdateOneWithoutAppSecAdminInputInputObject
      BusinessRoleUpdateWithoutAppSecAdminDataInput: BusinessRoleUpdateWithoutAppSecAdminDataInputInputObject
      BusinessRoleUpsertWithoutAppSecAdminInput: BusinessRoleUpsertWithoutAppSecAdminInputInputObject
      ApplicationUpsertWithWhereUniqueWithoutItOwnerInput: ApplicationUpsertWithWhereUniqueWithoutItOwnerInputInputObject
      ApplicationScalarWhereInput: ApplicationScalarWhereInputInputObject
      ApplicationUpdateManyWithWhereNestedInput: ApplicationUpdateManyWithWhereNestedInputInputObject
      ApplicationUpdateManyDataInput: ApplicationUpdateManyDataInputInputObject
      ApplicationUpdateManyWithoutSecurityAdministratorInput: ApplicationUpdateManyWithoutSecurityAdministratorInputInputObject
      ApplicationUpdateWithWhereUniqueWithoutSecurityAdministratorInput: ApplicationUpdateWithWhereUniqueWithoutSecurityAdministratorInputInputObject
      ApplicationUpdateWithoutSecurityAdministratorDataInput: ApplicationUpdateWithoutSecurityAdministratorDataInputInputObject
      BusinessRoleUpdateOneWithoutAppItOwnerInput: BusinessRoleUpdateOneWithoutAppItOwnerInputInputObject
      BusinessRoleUpdateWithoutAppItOwnerDataInput: BusinessRoleUpdateWithoutAppItOwnerDataInputInputObject
      BusinessRoleUpsertWithoutAppItOwnerInput: BusinessRoleUpsertWithoutAppItOwnerInputInputObject
      ApplicationUpsertWithWhereUniqueWithoutSecurityAdministratorInput: ApplicationUpsertWithWhereUniqueWithoutSecurityAdministratorInputInputObject
      BusinessRoleUpsertWithoutProcessInput: BusinessRoleUpsertWithoutProcessInputInputObject
      ProcessUpsertWithoutProcessingActivitiesInput: ProcessUpsertWithoutProcessingActivitiesInputInputObject
      ProcessingActivityUpsertWithWhereUniqueWithoutApplicationsInput: ProcessingActivityUpsertWithWhereUniqueWithoutApplicationsInputInputObject
      ProcessingActivityScalarWhereInput: ProcessingActivityScalarWhereInputInputObject
      ProcessingActivityUpdateManyWithWhereNestedInput: ProcessingActivityUpdateManyWithWhereNestedInputInputObject
      ProcessingActivityUpdateManyDataInput: ProcessingActivityUpdateManyDataInputInputObject
      ApplicationUpsertWithWhereUniqueWithoutBusinessOwnerInput: ApplicationUpsertWithWhereUniqueWithoutBusinessOwnerInputInputObject
      BusinessRoleUpsertWithWhereUniqueWithoutOrganizationalUnitInput: BusinessRoleUpsertWithWhereUniqueWithoutOrganizationalUnitInputInputObject
      BusinessRoleScalarWhereInput: BusinessRoleScalarWhereInputInputObject
      BusinessRoleUpdateManyWithWhereNestedInput: BusinessRoleUpdateManyWithWhereNestedInputInputObject
      BusinessRoleUpdateManyDataInput: BusinessRoleUpdateManyDataInputInputObject
      OrganizationalUnitTypeUpdateOneWithoutOrganizationalUnitInput: OrganizationalUnitTypeUpdateOneWithoutOrganizationalUnitInputInputObject
      OrganizationalUnitTypeUpdateWithoutOrganizationalUnitDataInput: OrganizationalUnitTypeUpdateWithoutOrganizationalUnitDataInputInputObject
      OrganizationalUnitTypeUpsertWithoutOrganizationalUnitInput: OrganizationalUnitTypeUpsertWithoutOrganizationalUnitInputInputObject
      OrganizationalUnitUpsertWithoutChildrenInput: OrganizationalUnitUpsertWithoutChildrenInputInputObject
      OrganizationalUnitUpsertWithoutProcessesInput: OrganizationalUnitUpsertWithoutProcessesInputInputObject
      ProcessUpsertWithWhereUniqueWithoutProcessOwnerInput: ProcessUpsertWithWhereUniqueWithoutProcessOwnerInputInputObject
      ProcessScalarWhereInput: ProcessScalarWhereInputInputObject
      ProcessUpdateManyWithWhereNestedInput: ProcessUpdateManyWithWhereNestedInputInputObject
      ProcessUpdateManyDataInput: ProcessUpdateManyDataInputInputObject
      BusinessRoleUpsertWithoutAppBusinessOwnerInput: BusinessRoleUpsertWithoutAppBusinessOwnerInputInputObject
      ApplicationUpsertWithWhereUniqueWithoutProcessingActivitiesInput: ApplicationUpsertWithWhereUniqueWithoutProcessingActivitiesInputInputObject
      ProcessingActivityUpsertWithWhereUniqueWithoutProcessInput: ProcessingActivityUpsertWithWhereUniqueWithoutProcessInputInputObject
      ProcessUpsertWithWhereUniqueWithoutOrganizationalUnitInput: ProcessUpsertWithWhereUniqueWithoutOrganizationalUnitInputInputObject
      OrganizationalUnitUpsertWithWhereUniqueWithoutParentInput: OrganizationalUnitUpsertWithWhereUniqueWithoutParentInputInputObject
      OrganizationalUnitScalarWhereInput: OrganizationalUnitScalarWhereInputInputObject
      OrganizationalUnitUpdateManyWithWhereNestedInput: OrganizationalUnitUpdateManyWithWhereNestedInputInputObject
      OrganizationalUnitUpdateManyDataInput: OrganizationalUnitUpdateManyDataInputInputObject
      OrganizationalUnitUpsertWithoutBusinessRolesInput: OrganizationalUnitUpsertWithoutBusinessRolesInputInputObject
      BusinessRoleUpsertWithWhereUniqueWithoutPersonInput: BusinessRoleUpsertWithWhereUniqueWithoutPersonInputInputObject
      PersonUpsertWithoutUserInput: PersonUpsertWithoutUserInputInputObject
      UserUpdateManyMutationInput: UserUpdateManyMutationInputInputObject
      PersonCreateInput: PersonCreateInputInputObject
      PersonUpdateInput: PersonUpdateInputInputObject
      PersonUpdateManyMutationInput: PersonUpdateManyMutationInputInputObject
      BusinessRoleCreateInput: BusinessRoleCreateInputInputObject
      BusinessRoleUpdateInput: BusinessRoleUpdateInputInputObject
      BusinessRoleUpdateManyMutationInput: BusinessRoleUpdateManyMutationInputInputObject
      OrganizationalUnitCreateInput: OrganizationalUnitCreateInputInputObject
      OrganizationalUnitUpdateInput: OrganizationalUnitUpdateInputInputObject
      OrganizationalUnitUpdateManyMutationInput: OrganizationalUnitUpdateManyMutationInputInputObject
      OrganizationalUnitTypeCreateInput: OrganizationalUnitTypeCreateInputInputObject
      OrganizationalUnitCreateManyWithoutOrganizationalUnitTypeInput: OrganizationalUnitCreateManyWithoutOrganizationalUnitTypeInputInputObject
      OrganizationalUnitCreateWithoutOrganizationalUnitTypeInput: OrganizationalUnitCreateWithoutOrganizationalUnitTypeInputInputObject
      OrganizationalUnitTypeUpdateInput: OrganizationalUnitTypeUpdateInputInputObject
      OrganizationalUnitUpdateManyWithoutOrganizationalUnitTypeInput: OrganizationalUnitUpdateManyWithoutOrganizationalUnitTypeInputInputObject
      OrganizationalUnitUpdateWithWhereUniqueWithoutOrganizationalUnitTypeInput: OrganizationalUnitUpdateWithWhereUniqueWithoutOrganizationalUnitTypeInputInputObject
      OrganizationalUnitUpdateWithoutOrganizationalUnitTypeDataInput: OrganizationalUnitUpdateWithoutOrganizationalUnitTypeDataInputInputObject
      OrganizationalUnitUpsertWithWhereUniqueWithoutOrganizationalUnitTypeInput: OrganizationalUnitUpsertWithWhereUniqueWithoutOrganizationalUnitTypeInputInputObject
      OrganizationalUnitTypeUpdateManyMutationInput: OrganizationalUnitTypeUpdateManyMutationInputInputObject
      ProcessCreateInput: ProcessCreateInputInputObject
      ProcessUpdateInput: ProcessUpdateInputInputObject
      ProcessUpdateManyMutationInput: ProcessUpdateManyMutationInputInputObject
      ProcessingActivityCreateInput: ProcessingActivityCreateInputInputObject
      ProcessingActivityUpdateInput: ProcessingActivityUpdateInputInputObject
      ProcessingActivityUpdateManyMutationInput: ProcessingActivityUpdateManyMutationInputInputObject
      ApplicationCreateInput: ApplicationCreateInputInputObject
      ApplicationUpdateInput: ApplicationUpdateInputInputObject
      ApplicationUpdateManyMutationInput: ApplicationUpdateManyMutationInputInputObject
      DataTypeCreateInput: DataTypeCreateInputInputObject
      ApplicationCreateManyWithoutDataTypesInput: ApplicationCreateManyWithoutDataTypesInputInputObject
      ApplicationCreateWithoutDataTypesInput: ApplicationCreateWithoutDataTypesInputInputObject
      DataTypeUpdateInput: DataTypeUpdateInputInputObject
      ApplicationUpdateManyWithoutDataTypesInput: ApplicationUpdateManyWithoutDataTypesInputInputObject
      ApplicationUpdateWithWhereUniqueWithoutDataTypesInput: ApplicationUpdateWithWhereUniqueWithoutDataTypesInputInputObject
      ApplicationUpdateWithoutDataTypesDataInput: ApplicationUpdateWithoutDataTypesDataInputInputObject
      ApplicationUpsertWithWhereUniqueWithoutDataTypesInput: ApplicationUpsertWithWhereUniqueWithoutDataTypesInputInputObject
      DataTypeUpdateManyMutationInput: DataTypeUpdateManyMutationInputInputObject
      QualityAttributeCreateInput: QualityAttributeCreateInputInputObject
      ClassificationLabelCreateManyWithoutQualityAttributeInput: ClassificationLabelCreateManyWithoutQualityAttributeInputInputObject
      ClassificationLabelCreateWithoutQualityAttributeInput: ClassificationLabelCreateWithoutQualityAttributeInputInputObject
      DataTypeCreateManyWithoutClassificationLabelsInput: DataTypeCreateManyWithoutClassificationLabelsInputInputObject
      DataTypeCreateWithoutClassificationLabelsInput: DataTypeCreateWithoutClassificationLabelsInputInputObject
      QualityAttributeUpdateInput: QualityAttributeUpdateInputInputObject
      ClassificationLabelUpdateManyWithoutQualityAttributeInput: ClassificationLabelUpdateManyWithoutQualityAttributeInputInputObject
      ClassificationLabelUpdateWithWhereUniqueWithoutQualityAttributeInput: ClassificationLabelUpdateWithWhereUniqueWithoutQualityAttributeInputInputObject
      ClassificationLabelUpdateWithoutQualityAttributeDataInput: ClassificationLabelUpdateWithoutQualityAttributeDataInputInputObject
      DataTypeUpdateManyWithoutClassificationLabelsInput: DataTypeUpdateManyWithoutClassificationLabelsInputInputObject
      DataTypeUpdateWithWhereUniqueWithoutClassificationLabelsInput: DataTypeUpdateWithWhereUniqueWithoutClassificationLabelsInputInputObject
      DataTypeUpdateWithoutClassificationLabelsDataInput: DataTypeUpdateWithoutClassificationLabelsDataInputInputObject
      DataTypeUpsertWithWhereUniqueWithoutClassificationLabelsInput: DataTypeUpsertWithWhereUniqueWithoutClassificationLabelsInputInputObject
      ClassificationLabelUpsertWithWhereUniqueWithoutQualityAttributeInput: ClassificationLabelUpsertWithWhereUniqueWithoutQualityAttributeInputInputObject
      QualityAttributeUpdateManyMutationInput: QualityAttributeUpdateManyMutationInputInputObject
      ClassificationLabelCreateInput: ClassificationLabelCreateInputInputObject
      ClassificationLabelUpdateInput: ClassificationLabelUpdateInputInputObject
      ClassificationLabelUpdateManyMutationInput: ClassificationLabelUpdateManyMutationInputInputObject
      OrganizationCreateInput: OrganizationCreateInputInputObject
      LocationCreateOneWithoutOrganizationInput: LocationCreateOneWithoutOrganizationInputInputObject
      LocationCreateWithoutOrganizationInput: LocationCreateWithoutOrganizationInputInputObject
      OrganizationUpdateInput: OrganizationUpdateInputInputObject
      LocationUpdateOneRequiredWithoutOrganizationInput: LocationUpdateOneRequiredWithoutOrganizationInputInputObject
      LocationUpdateWithoutOrganizationDataInput: LocationUpdateWithoutOrganizationDataInputInputObject
      LocationUpsertWithoutOrganizationInput: LocationUpsertWithoutOrganizationInputInputObject
      OrganizationUpdateManyMutationInput: OrganizationUpdateManyMutationInputInputObject
      LocationCreateInput: LocationCreateInputInputObject
      OrganizationCreateOneWithoutHeadOfficeInput: OrganizationCreateOneWithoutHeadOfficeInputInputObject
      OrganizationCreateWithoutHeadOfficeInput: OrganizationCreateWithoutHeadOfficeInputInputObject
      LocationUpdateInput: LocationUpdateInputInputObject
      OrganizationUpdateOneWithoutHeadOfficeInput: OrganizationUpdateOneWithoutHeadOfficeInputInputObject
      OrganizationUpdateWithoutHeadOfficeDataInput: OrganizationUpdateWithoutHeadOfficeDataInputInputObject
      OrganizationUpsertWithoutHeadOfficeInput: OrganizationUpsertWithoutHeadOfficeInputInputObject
      LocationUpdateManyMutationInput: LocationUpdateManyMutationInputInputObject
      UserSubscriptionWhereInput: UserSubscriptionWhereInputInputObject
      PersonSubscriptionWhereInput: PersonSubscriptionWhereInputInputObject
      BusinessRoleSubscriptionWhereInput: BusinessRoleSubscriptionWhereInputInputObject
      OrganizationalUnitSubscriptionWhereInput: OrganizationalUnitSubscriptionWhereInputInputObject
      OrganizationalUnitTypeSubscriptionWhereInput: OrganizationalUnitTypeSubscriptionWhereInputInputObject
      ProcessSubscriptionWhereInput: ProcessSubscriptionWhereInputInputObject
      ProcessingActivitySubscriptionWhereInput: ProcessingActivitySubscriptionWhereInputInputObject
      ApplicationSubscriptionWhereInput: ApplicationSubscriptionWhereInputInputObject
      DataTypeSubscriptionWhereInput: DataTypeSubscriptionWhereInputInputObject
      QualityAttributeSubscriptionWhereInput: QualityAttributeSubscriptionWhereInputInputObject
      ClassificationLabelSubscriptionWhereInput: ClassificationLabelSubscriptionWhereInputInputObject
      OrganizationSubscriptionWhereInput: OrganizationSubscriptionWhereInputInputObject
      LocationSubscriptionWhereInput: LocationSubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    PERMISSION: PERMISSIONValues,
    RACI: RACIValues,
    CLASSIFICATIONOBJECT: CLASSIFICATIONOBJECTValues,
    BusinessRoleOrderByInput: BusinessRoleOrderByInputValues,
    OrganizationalUnitOrderByInput: OrganizationalUnitOrderByInputValues,
    ProcessOrderByInput: ProcessOrderByInputValues,
    ProcessingActivityOrderByInput: ProcessingActivityOrderByInputValues,
    ApplicationOrderByInput: ApplicationOrderByInputValues,
    DataTypeOrderByInput: DataTypeOrderByInputValues,
    ClassificationLabelOrderByInput: ClassificationLabelOrderByInputValues,
    UserOrderByInput: UserOrderByInputValues,
    PersonOrderByInput: PersonOrderByInputValues,
    OrganizationalUnitTypeOrderByInput: OrganizationalUnitTypeOrderByInputValues,
    QualityAttributeOrderByInput: QualityAttributeOrderByInputValues,
    OrganizationOrderByInput: OrganizationOrderByInputValues,
    LocationOrderByInput: LocationOrderByInputValues,
    MutationType: MutationTypeValues,
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'user', args?: QueryUserArgs[] | false, alias?: string  } 
  | { name: 'users', args?: QueryUsersArgs[] | false, alias?: string  } 
  | { name: 'usersConnection', args?: QueryUsersConnectionArgs[] | false, alias?: string  } 
  | { name: 'person', args?: QueryPersonArgs[] | false, alias?: string  } 
  | { name: 'persons', args?: QueryPersonsArgs[] | false, alias?: string  } 
  | { name: 'personsConnection', args?: QueryPersonsConnectionArgs[] | false, alias?: string  } 
  | { name: 'businessRole', args?: QueryBusinessRoleArgs[] | false, alias?: string  } 
  | { name: 'businessRoles', args?: QueryBusinessRolesArgs[] | false, alias?: string  } 
  | { name: 'businessRolesConnection', args?: QueryBusinessRolesConnectionArgs[] | false, alias?: string  } 
  | { name: 'organizationalUnit', args?: QueryOrganizationalUnitArgs[] | false, alias?: string  } 
  | { name: 'organizationalUnits', args?: QueryOrganizationalUnitsArgs[] | false, alias?: string  } 
  | { name: 'organizationalUnitsConnection', args?: QueryOrganizationalUnitsConnectionArgs[] | false, alias?: string  } 
  | { name: 'organizationalUnitType', args?: QueryOrganizationalUnitTypeArgs[] | false, alias?: string  } 
  | { name: 'organizationalUnitTypes', args?: QueryOrganizationalUnitTypesArgs[] | false, alias?: string  } 
  | { name: 'organizationalUnitTypesConnection', args?: QueryOrganizationalUnitTypesConnectionArgs[] | false, alias?: string  } 
  | { name: 'process', args?: QueryProcessArgs[] | false, alias?: string  } 
  | { name: 'processes', args?: QueryProcessesArgs[] | false, alias?: string  } 
  | { name: 'processesConnection', args?: QueryProcessesConnectionArgs[] | false, alias?: string  } 
  | { name: 'processingActivity', args?: QueryProcessingActivityArgs[] | false, alias?: string  } 
  | { name: 'processingActivities', args?: QueryProcessingActivitiesArgs[] | false, alias?: string  } 
  | { name: 'processingActivitiesConnection', args?: QueryProcessingActivitiesConnectionArgs[] | false, alias?: string  } 
  | { name: 'application', args?: QueryApplicationArgs[] | false, alias?: string  } 
  | { name: 'applications', args?: QueryApplicationsArgs[] | false, alias?: string  } 
  | { name: 'applicationsConnection', args?: QueryApplicationsConnectionArgs[] | false, alias?: string  } 
  | { name: 'dataType', args?: QueryDataTypeArgs[] | false, alias?: string  } 
  | { name: 'dataTypes', args?: QueryDataTypesArgs[] | false, alias?: string  } 
  | { name: 'dataTypesConnection', args?: QueryDataTypesConnectionArgs[] | false, alias?: string  } 
  | { name: 'qualityAttribute', args?: QueryQualityAttributeArgs[] | false, alias?: string  } 
  | { name: 'qualityAttributes', args?: QueryQualityAttributesArgs[] | false, alias?: string  } 
  | { name: 'qualityAttributesConnection', args?: QueryQualityAttributesConnectionArgs[] | false, alias?: string  } 
  | { name: 'classificationLabel', args?: QueryClassificationLabelArgs[] | false, alias?: string  } 
  | { name: 'classificationLabels', args?: QueryClassificationLabelsArgs[] | false, alias?: string  } 
  | { name: 'classificationLabelsConnection', args?: QueryClassificationLabelsConnectionArgs[] | false, alias?: string  } 
  | { name: 'organization', args?: QueryOrganizationArgs[] | false, alias?: string  } 
  | { name: 'organizations', args?: QueryOrganizationsArgs[] | false, alias?: string  } 
  | { name: 'organizationsConnection', args?: QueryOrganizationsConnectionArgs[] | false, alias?: string  } 
  | { name: 'location', args?: QueryLocationArgs[] | false, alias?: string  } 
  | { name: 'locations', args?: QueryLocationsArgs[] | false, alias?: string  } 
  | { name: 'locationsConnection', args?: QueryLocationsConnectionArgs[] | false, alias?: string  } 

type QueryFields =
  | 'user'
  | 'users'
  | 'usersConnection'
  | 'person'
  | 'persons'
  | 'personsConnection'
  | 'businessRole'
  | 'businessRoles'
  | 'businessRolesConnection'
  | 'organizationalUnit'
  | 'organizationalUnits'
  | 'organizationalUnitsConnection'
  | 'organizationalUnitType'
  | 'organizationalUnitTypes'
  | 'organizationalUnitTypesConnection'
  | 'process'
  | 'processes'
  | 'processesConnection'
  | 'processingActivity'
  | 'processingActivities'
  | 'processingActivitiesConnection'
  | 'application'
  | 'applications'
  | 'applicationsConnection'
  | 'dataType'
  | 'dataTypes'
  | 'dataTypesConnection'
  | 'qualityAttribute'
  | 'qualityAttributes'
  | 'qualityAttributesConnection'
  | 'classificationLabel'
  | 'classificationLabels'
  | 'classificationLabelsConnection'
  | 'organization'
  | 'organizations'
  | 'organizationsConnection'
  | 'location'
  | 'locations'
  | 'locationsConnection'


type QueryUserArgs =
  | 'where'
type QueryUsersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUsersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPersonArgs =
  | 'where'
type QueryPersonsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPersonsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryBusinessRoleArgs =
  | 'where'
type QueryBusinessRolesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryBusinessRolesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrganizationalUnitArgs =
  | 'where'
type QueryOrganizationalUnitsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrganizationalUnitsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrganizationalUnitTypeArgs =
  | 'where'
type QueryOrganizationalUnitTypesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrganizationalUnitTypesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryProcessArgs =
  | 'where'
type QueryProcessesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryProcessesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryProcessingActivityArgs =
  | 'where'
type QueryProcessingActivitiesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryProcessingActivitiesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryApplicationArgs =
  | 'where'
type QueryApplicationsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryApplicationsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDataTypeArgs =
  | 'where'
type QueryDataTypesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDataTypesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryQualityAttributeArgs =
  | 'where'
type QueryQualityAttributesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryQualityAttributesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryClassificationLabelArgs =
  | 'where'
type QueryClassificationLabelsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryClassificationLabelsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrganizationArgs =
  | 'where'
type QueryOrganizationsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrganizationsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryLocationArgs =
  | 'where'
type QueryLocationsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryLocationsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QueryFieldDetails {
  user: {
    type: 'User'
    args: Record<QueryUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  users: {
    type: 'User'
    args: Record<QueryUsersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
  usersConnection: {
    type: 'UserConnection'
    args: Record<QueryUsersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserConnection> | prisma.UserConnection
  }
  person: {
    type: 'Person'
    args: Record<QueryPersonArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: PersonWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person | null> | prisma.Person | null
  }
  persons: {
    type: 'Person'
    args: Record<QueryPersonsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PersonWhereInput | null, orderBy?: prisma.PersonOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person[]> | prisma.Person[]
  }
  personsConnection: {
    type: 'PersonConnection'
    args: Record<QueryPersonsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PersonWhereInput | null, orderBy?: prisma.PersonOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PersonConnection> | prisma.PersonConnection
  }
  businessRole: {
    type: 'BusinessRole'
    args: Record<QueryBusinessRoleArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: BusinessRoleWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BusinessRole | null> | prisma.BusinessRole | null
  }
  businessRoles: {
    type: 'BusinessRole'
    args: Record<QueryBusinessRolesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: BusinessRoleWhereInput | null, orderBy?: prisma.BusinessRoleOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BusinessRole[]> | prisma.BusinessRole[]
  }
  businessRolesConnection: {
    type: 'BusinessRoleConnection'
    args: Record<QueryBusinessRolesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: BusinessRoleWhereInput | null, orderBy?: prisma.BusinessRoleOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BusinessRoleConnection> | prisma.BusinessRoleConnection
  }
  organizationalUnit: {
    type: 'OrganizationalUnit'
    args: Record<QueryOrganizationalUnitArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OrganizationalUnitWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnit | null> | prisma.OrganizationalUnit | null
  }
  organizationalUnits: {
    type: 'OrganizationalUnit'
    args: Record<QueryOrganizationalUnitsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrganizationalUnitWhereInput | null, orderBy?: prisma.OrganizationalUnitOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnit[]> | prisma.OrganizationalUnit[]
  }
  organizationalUnitsConnection: {
    type: 'OrganizationalUnitConnection'
    args: Record<QueryOrganizationalUnitsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrganizationalUnitWhereInput | null, orderBy?: prisma.OrganizationalUnitOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnitConnection> | prisma.OrganizationalUnitConnection
  }
  organizationalUnitType: {
    type: 'OrganizationalUnitType'
    args: Record<QueryOrganizationalUnitTypeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OrganizationalUnitTypeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnitType | null> | prisma.OrganizationalUnitType | null
  }
  organizationalUnitTypes: {
    type: 'OrganizationalUnitType'
    args: Record<QueryOrganizationalUnitTypesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrganizationalUnitTypeWhereInput | null, orderBy?: prisma.OrganizationalUnitTypeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnitType[]> | prisma.OrganizationalUnitType[]
  }
  organizationalUnitTypesConnection: {
    type: 'OrganizationalUnitTypeConnection'
    args: Record<QueryOrganizationalUnitTypesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrganizationalUnitTypeWhereInput | null, orderBy?: prisma.OrganizationalUnitTypeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnitTypeConnection> | prisma.OrganizationalUnitTypeConnection
  }
  process: {
    type: 'Process'
    args: Record<QueryProcessArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ProcessWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Process | null> | prisma.Process | null
  }
  processes: {
    type: 'Process'
    args: Record<QueryProcessesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ProcessWhereInput | null, orderBy?: prisma.ProcessOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Process[]> | prisma.Process[]
  }
  processesConnection: {
    type: 'ProcessConnection'
    args: Record<QueryProcessesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ProcessWhereInput | null, orderBy?: prisma.ProcessOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProcessConnection> | prisma.ProcessConnection
  }
  processingActivity: {
    type: 'ProcessingActivity'
    args: Record<QueryProcessingActivityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ProcessingActivityWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProcessingActivity | null> | prisma.ProcessingActivity | null
  }
  processingActivities: {
    type: 'ProcessingActivity'
    args: Record<QueryProcessingActivitiesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ProcessingActivityWhereInput | null, orderBy?: prisma.ProcessingActivityOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProcessingActivity[]> | prisma.ProcessingActivity[]
  }
  processingActivitiesConnection: {
    type: 'ProcessingActivityConnection'
    args: Record<QueryProcessingActivitiesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ProcessingActivityWhereInput | null, orderBy?: prisma.ProcessingActivityOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProcessingActivityConnection> | prisma.ProcessingActivityConnection
  }
  application: {
    type: 'Application'
    args: Record<QueryApplicationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ApplicationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Application | null> | prisma.Application | null
  }
  applications: {
    type: 'Application'
    args: Record<QueryApplicationsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ApplicationWhereInput | null, orderBy?: prisma.ApplicationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Application[]> | prisma.Application[]
  }
  applicationsConnection: {
    type: 'ApplicationConnection'
    args: Record<QueryApplicationsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ApplicationWhereInput | null, orderBy?: prisma.ApplicationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ApplicationConnection> | prisma.ApplicationConnection
  }
  dataType: {
    type: 'DataType'
    args: Record<QueryDataTypeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: DataTypeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DataType | null> | prisma.DataType | null
  }
  dataTypes: {
    type: 'DataType'
    args: Record<QueryDataTypesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DataTypeWhereInput | null, orderBy?: prisma.DataTypeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DataType[]> | prisma.DataType[]
  }
  dataTypesConnection: {
    type: 'DataTypeConnection'
    args: Record<QueryDataTypesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DataTypeWhereInput | null, orderBy?: prisma.DataTypeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DataTypeConnection> | prisma.DataTypeConnection
  }
  qualityAttribute: {
    type: 'QualityAttribute'
    args: Record<QueryQualityAttributeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: QualityAttributeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QualityAttribute | null> | prisma.QualityAttribute | null
  }
  qualityAttributes: {
    type: 'QualityAttribute'
    args: Record<QueryQualityAttributesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: QualityAttributeWhereInput | null, orderBy?: prisma.QualityAttributeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QualityAttribute[]> | prisma.QualityAttribute[]
  }
  qualityAttributesConnection: {
    type: 'QualityAttributeConnection'
    args: Record<QueryQualityAttributesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: QualityAttributeWhereInput | null, orderBy?: prisma.QualityAttributeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QualityAttributeConnection> | prisma.QualityAttributeConnection
  }
  classificationLabel: {
    type: 'ClassificationLabel'
    args: Record<QueryClassificationLabelArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ClassificationLabelWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ClassificationLabel | null> | prisma.ClassificationLabel | null
  }
  classificationLabels: {
    type: 'ClassificationLabel'
    args: Record<QueryClassificationLabelsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ClassificationLabelWhereInput | null, orderBy?: prisma.ClassificationLabelOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ClassificationLabel[]> | prisma.ClassificationLabel[]
  }
  classificationLabelsConnection: {
    type: 'ClassificationLabelConnection'
    args: Record<QueryClassificationLabelsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ClassificationLabelWhereInput | null, orderBy?: prisma.ClassificationLabelOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ClassificationLabelConnection> | prisma.ClassificationLabelConnection
  }
  organization: {
    type: 'Organization'
    args: Record<QueryOrganizationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OrganizationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization | null> | prisma.Organization | null
  }
  organizations: {
    type: 'Organization'
    args: Record<QueryOrganizationsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrganizationWhereInput | null, orderBy?: prisma.OrganizationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization[]> | prisma.Organization[]
  }
  organizationsConnection: {
    type: 'OrganizationConnection'
    args: Record<QueryOrganizationsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrganizationWhereInput | null, orderBy?: prisma.OrganizationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationConnection> | prisma.OrganizationConnection
  }
  location: {
    type: 'Location'
    args: Record<QueryLocationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: LocationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Location | null> | prisma.Location | null
  }
  locations: {
    type: 'Location'
    args: Record<QueryLocationsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: LocationWhereInput | null, orderBy?: prisma.LocationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Location[]> | prisma.Location[]
  }
  locationsConnection: {
    type: 'LocationConnection'
    args: Record<QueryLocationsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: LocationWhereInput | null, orderBy?: prisma.LocationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LocationConnection> | prisma.LocationConnection
  }
}
  

// Types for User

type UserObject =
  | UserFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'active', args?: [] | false, alias?: string  } 
  | { name: 'specialPermissions', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'person', args?: [] | false, alias?: string  } 

type UserFields =
  | 'id'
  | 'email'
  | 'password'
  | 'active'
  | 'specialPermissions'
  | 'createdAt'
  | 'updatedAt'
  | 'person'



  

export interface UserFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  active: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  specialPermissions: {
    type: 'PERMISSION'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PERMISSION[]> | prisma.PERMISSION[]
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  person: {
    type: 'Person'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"User">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person | null> | prisma.Person | null
  }
}
  

// Types for Person

type PersonObject =
  | PersonFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'surname', args?: [] | false, alias?: string  } 
  | { name: 'user', args?: [] | false, alias?: string  } 
  | { name: 'roles', args?: PersonRolesArgs[] | false, alias?: string  } 

type PersonFields =
  | 'id'
  | 'name'
  | 'surname'
  | 'user'
  | 'roles'


type PersonRolesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface PersonFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  surname: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  user: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Person">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  roles: {
    type: 'BusinessRole'
    args: Record<PersonRolesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Person">,
      args: { where?: BusinessRoleWhereInput | null, orderBy?: prisma.BusinessRoleOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BusinessRole[]> | prisma.BusinessRole[]
  }
}
  

// Types for BusinessRole

type BusinessRoleObject =
  | BusinessRoleFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'raciPrivacy', args?: [] | false, alias?: string  } 
  | { name: 'raciSecurity', args?: [] | false, alias?: string  } 
  | { name: 'raciFinancial', args?: [] | false, alias?: string  } 
  | { name: 'raciExecutive', args?: [] | false, alias?: string  } 
  | { name: 'person', args?: [] | false, alias?: string  } 
  | { name: 'organizationalUnit', args?: [] | false, alias?: string  } 
  | { name: 'process', args?: BusinessRoleProcessArgs[] | false, alias?: string  } 
  | { name: 'appBusinessOwner', args?: BusinessRoleAppBusinessOwnerArgs[] | false, alias?: string  } 
  | { name: 'appItOwner', args?: BusinessRoleAppItOwnerArgs[] | false, alias?: string  } 
  | { name: 'appSecAdmin', args?: BusinessRoleAppSecAdminArgs[] | false, alias?: string  } 

type BusinessRoleFields =
  | 'id'
  | 'name'
  | 'description'
  | 'raciPrivacy'
  | 'raciSecurity'
  | 'raciFinancial'
  | 'raciExecutive'
  | 'person'
  | 'organizationalUnit'
  | 'process'
  | 'appBusinessOwner'
  | 'appItOwner'
  | 'appSecAdmin'


type BusinessRoleProcessArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type BusinessRoleAppBusinessOwnerArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type BusinessRoleAppItOwnerArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type BusinessRoleAppSecAdminArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface BusinessRoleFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  raciPrivacy: {
    type: 'RACI'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BusinessRole">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.RACI | null> | prisma.RACI | null
  }
  raciSecurity: {
    type: 'RACI'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BusinessRole">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.RACI | null> | prisma.RACI | null
  }
  raciFinancial: {
    type: 'RACI'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BusinessRole">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.RACI | null> | prisma.RACI | null
  }
  raciExecutive: {
    type: 'RACI'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BusinessRole">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.RACI | null> | prisma.RACI | null
  }
  person: {
    type: 'Person'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BusinessRole">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person | null> | prisma.Person | null
  }
  organizationalUnit: {
    type: 'OrganizationalUnit'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BusinessRole">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnit> | prisma.OrganizationalUnit
  }
  process: {
    type: 'Process'
    args: Record<BusinessRoleProcessArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"BusinessRole">,
      args: { where?: ProcessWhereInput | null, orderBy?: prisma.ProcessOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Process[]> | prisma.Process[]
  }
  appBusinessOwner: {
    type: 'Application'
    args: Record<BusinessRoleAppBusinessOwnerArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"BusinessRole">,
      args: { where?: ApplicationWhereInput | null, orderBy?: prisma.ApplicationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Application[]> | prisma.Application[]
  }
  appItOwner: {
    type: 'Application'
    args: Record<BusinessRoleAppItOwnerArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"BusinessRole">,
      args: { where?: ApplicationWhereInput | null, orderBy?: prisma.ApplicationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Application[]> | prisma.Application[]
  }
  appSecAdmin: {
    type: 'Application'
    args: Record<BusinessRoleAppSecAdminArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"BusinessRole">,
      args: { where?: ApplicationWhereInput | null, orderBy?: prisma.ApplicationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Application[]> | prisma.Application[]
  }
}
  

// Types for OrganizationalUnit

type OrganizationalUnitObject =
  | OrganizationalUnitFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'children', args?: OrganizationalUnitChildrenArgs[] | false, alias?: string  } 
  | { name: 'parent', args?: [] | false, alias?: string  } 
  | { name: 'processes', args?: OrganizationalUnitProcessesArgs[] | false, alias?: string  } 
  | { name: 'businessRoles', args?: OrganizationalUnitBusinessRolesArgs[] | false, alias?: string  } 
  | { name: 'organizationalUnitType', args?: [] | false, alias?: string  } 

type OrganizationalUnitFields =
  | 'id'
  | 'name'
  | 'description'
  | 'createdAt'
  | 'updatedAt'
  | 'children'
  | 'parent'
  | 'processes'
  | 'businessRoles'
  | 'organizationalUnitType'


type OrganizationalUnitChildrenArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type OrganizationalUnitProcessesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type OrganizationalUnitBusinessRolesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface OrganizationalUnitFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  children: {
    type: 'OrganizationalUnit'
    args: Record<OrganizationalUnitChildrenArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationalUnit">,
      args: { where?: OrganizationalUnitWhereInput | null, orderBy?: prisma.OrganizationalUnitOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnit[]> | prisma.OrganizationalUnit[]
  }
  parent: {
    type: 'OrganizationalUnit'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrganizationalUnit">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnit | null> | prisma.OrganizationalUnit | null
  }
  processes: {
    type: 'Process'
    args: Record<OrganizationalUnitProcessesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationalUnit">,
      args: { where?: ProcessWhereInput | null, orderBy?: prisma.ProcessOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Process[]> | prisma.Process[]
  }
  businessRoles: {
    type: 'BusinessRole'
    args: Record<OrganizationalUnitBusinessRolesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationalUnit">,
      args: { where?: BusinessRoleWhereInput | null, orderBy?: prisma.BusinessRoleOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BusinessRole[]> | prisma.BusinessRole[]
  }
  organizationalUnitType: {
    type: 'OrganizationalUnitType'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrganizationalUnit">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnitType | null> | prisma.OrganizationalUnitType | null
  }
}
  

// Types for Process

type ProcessObject =
  | ProcessFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'organizationalUnit', args?: [] | false, alias?: string  } 
  | { name: 'processingActivities', args?: ProcessProcessingActivitiesArgs[] | false, alias?: string  } 
  | { name: 'processOwner', args?: [] | false, alias?: string  } 

type ProcessFields =
  | 'id'
  | 'name'
  | 'description'
  | 'createdAt'
  | 'updatedAt'
  | 'organizationalUnit'
  | 'processingActivities'
  | 'processOwner'


type ProcessProcessingActivitiesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface ProcessFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  organizationalUnit: {
    type: 'OrganizationalUnit'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Process">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnit | null> | prisma.OrganizationalUnit | null
  }
  processingActivities: {
    type: 'ProcessingActivity'
    args: Record<ProcessProcessingActivitiesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Process">,
      args: { where?: ProcessingActivityWhereInput | null, orderBy?: prisma.ProcessingActivityOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProcessingActivity[]> | prisma.ProcessingActivity[]
  }
  processOwner: {
    type: 'BusinessRole'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Process">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BusinessRole | null> | prisma.BusinessRole | null
  }
}
  

// Types for ProcessingActivity

type ProcessingActivityObject =
  | ProcessingActivityFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'purpose', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'process', args?: [] | false, alias?: string  } 
  | { name: 'applications', args?: ProcessingActivityApplicationsArgs[] | false, alias?: string  } 

type ProcessingActivityFields =
  | 'id'
  | 'name'
  | 'description'
  | 'purpose'
  | 'createdAt'
  | 'updatedAt'
  | 'process'
  | 'applications'


type ProcessingActivityApplicationsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface ProcessingActivityFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  purpose: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  process: {
    type: 'Process'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProcessingActivity">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Process | null> | prisma.Process | null
  }
  applications: {
    type: 'Application'
    args: Record<ProcessingActivityApplicationsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ProcessingActivity">,
      args: { where?: ApplicationWhereInput | null, orderBy?: prisma.ApplicationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Application[]> | prisma.Application[]
  }
}
  

// Types for Application

type ApplicationObject =
  | ApplicationFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'alias', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'processingActivities', args?: ApplicationProcessingActivitiesArgs[] | false, alias?: string  } 
  | { name: 'dataTypes', args?: ApplicationDataTypesArgs[] | false, alias?: string  } 
  | { name: 'businessOwner', args?: [] | false, alias?: string  } 
  | { name: 'itOwner', args?: [] | false, alias?: string  } 
  | { name: 'securityAdministrator', args?: [] | false, alias?: string  } 

type ApplicationFields =
  | 'id'
  | 'name'
  | 'alias'
  | 'description'
  | 'processingActivities'
  | 'dataTypes'
  | 'businessOwner'
  | 'itOwner'
  | 'securityAdministrator'


type ApplicationProcessingActivitiesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type ApplicationDataTypesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface ApplicationFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  alias: {
    type: 'Json'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  processingActivities: {
    type: 'ProcessingActivity'
    args: Record<ApplicationProcessingActivitiesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Application">,
      args: { where?: ProcessingActivityWhereInput | null, orderBy?: prisma.ProcessingActivityOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProcessingActivity[]> | prisma.ProcessingActivity[]
  }
  dataTypes: {
    type: 'DataType'
    args: Record<ApplicationDataTypesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Application">,
      args: { where?: DataTypeWhereInput | null, orderBy?: prisma.DataTypeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DataType[]> | prisma.DataType[]
  }
  businessOwner: {
    type: 'BusinessRole'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Application">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BusinessRole | null> | prisma.BusinessRole | null
  }
  itOwner: {
    type: 'BusinessRole'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Application">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BusinessRole | null> | prisma.BusinessRole | null
  }
  securityAdministrator: {
    type: 'BusinessRole'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Application">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BusinessRole | null> | prisma.BusinessRole | null
  }
}
  

// Types for DataType

type DataTypeObject =
  | DataTypeFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'application', args?: DataTypeApplicationArgs[] | false, alias?: string  } 
  | { name: 'classificationLabels', args?: DataTypeClassificationLabelsArgs[] | false, alias?: string  } 

type DataTypeFields =
  | 'id'
  | 'name'
  | 'description'
  | 'application'
  | 'classificationLabels'


type DataTypeApplicationArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type DataTypeClassificationLabelsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface DataTypeFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  application: {
    type: 'Application'
    args: Record<DataTypeApplicationArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"DataType">,
      args: { where?: ApplicationWhereInput | null, orderBy?: prisma.ApplicationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Application[]> | prisma.Application[]
  }
  classificationLabels: {
    type: 'ClassificationLabel'
    args: Record<DataTypeClassificationLabelsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"DataType">,
      args: { where?: ClassificationLabelWhereInput | null, orderBy?: prisma.ClassificationLabelOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ClassificationLabel[]> | prisma.ClassificationLabel[]
  }
}
  

// Types for ClassificationLabel

type ClassificationLabelObject =
  | ClassificationLabelFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'score', args?: [] | false, alias?: string  } 
  | { name: 'label', args?: [] | false, alias?: string  } 
  | { name: 'criteria', args?: [] | false, alias?: string  } 
  | { name: 'qualityAttribute', args?: [] | false, alias?: string  } 
  | { name: 'dataType', args?: ClassificationLabelDataTypeArgs[] | false, alias?: string  } 

type ClassificationLabelFields =
  | 'id'
  | 'score'
  | 'label'
  | 'criteria'
  | 'qualityAttribute'
  | 'dataType'


type ClassificationLabelDataTypeArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface ClassificationLabelFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  score: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  label: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  criteria: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  qualityAttribute: {
    type: 'QualityAttribute'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ClassificationLabel">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QualityAttribute | null> | prisma.QualityAttribute | null
  }
  dataType: {
    type: 'DataType'
    args: Record<ClassificationLabelDataTypeArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ClassificationLabel">,
      args: { where?: DataTypeWhereInput | null, orderBy?: prisma.DataTypeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DataType[]> | prisma.DataType[]
  }
}
  

// Types for QualityAttribute

type QualityAttributeObject =
  | QualityAttributeFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'appliesToObject', args?: [] | false, alias?: string  } 
  | { name: 'classificationLabels', args?: QualityAttributeClassificationLabelsArgs[] | false, alias?: string  } 

type QualityAttributeFields =
  | 'id'
  | 'name'
  | 'description'
  | 'appliesToObject'
  | 'classificationLabels'


type QualityAttributeClassificationLabelsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QualityAttributeFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  appliesToObject: {
    type: 'CLASSIFICATIONOBJECT'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"QualityAttribute">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CLASSIFICATIONOBJECT> | prisma.CLASSIFICATIONOBJECT
  }
  classificationLabels: {
    type: 'ClassificationLabel'
    args: Record<QualityAttributeClassificationLabelsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"QualityAttribute">,
      args: { where?: ClassificationLabelWhereInput | null, orderBy?: prisma.ClassificationLabelOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ClassificationLabel[]> | prisma.ClassificationLabel[]
  }
}
  

// Types for OrganizationalUnitType

type OrganizationalUnitTypeObject =
  | OrganizationalUnitTypeFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'reportingUnit', args?: [] | false, alias?: string  } 
  | { name: 'organizationalUnit', args?: OrganizationalUnitTypeOrganizationalUnitArgs[] | false, alias?: string  } 

type OrganizationalUnitTypeFields =
  | 'id'
  | 'name'
  | 'description'
  | 'reportingUnit'
  | 'organizationalUnit'


type OrganizationalUnitTypeOrganizationalUnitArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface OrganizationalUnitTypeFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  reportingUnit: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  organizationalUnit: {
    type: 'OrganizationalUnit'
    args: Record<OrganizationalUnitTypeOrganizationalUnitArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationalUnitType">,
      args: { where?: OrganizationalUnitWhereInput | null, orderBy?: prisma.OrganizationalUnitOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnit[]> | prisma.OrganizationalUnit[]
  }
}
  

// Types for UserConnection

type UserConnectionObject =
  | UserConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type UserConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface UserConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'UserEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserEdge[]> | prisma.UserEdge[]
  }
  aggregate: {
    type: 'AggregateUser'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateUser> | prisma.AggregateUser
  }
}
  

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage', args?: [] | false, alias?: string  } 
  | { name: 'hasPreviousPage', args?: [] | false, alias?: string  } 
  | { name: 'startCursor', args?: [] | false, alias?: string  } 
  | { name: 'endCursor', args?: [] | false, alias?: string  } 

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'



  

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for UserEdge

type UserEdgeObject =
  | UserEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type UserEdgeFields =
  | 'node'
  | 'cursor'



  

export interface UserEdgeFieldDetails {
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateUser

type AggregateUserObject =
  | AggregateUserFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateUserFields =
  | 'count'



  

export interface AggregateUserFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PersonConnection

type PersonConnectionObject =
  | PersonConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type PersonConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface PersonConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PersonConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'PersonEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"PersonConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PersonEdge[]> | prisma.PersonEdge[]
  }
  aggregate: {
    type: 'AggregatePerson'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PersonConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregatePerson> | prisma.AggregatePerson
  }
}
  

// Types for PersonEdge

type PersonEdgeObject =
  | PersonEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type PersonEdgeFields =
  | 'node'
  | 'cursor'



  

export interface PersonEdgeFieldDetails {
  node: {
    type: 'Person'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PersonEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person> | prisma.Person
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregatePerson

type AggregatePersonObject =
  | AggregatePersonFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregatePersonFields =
  | 'count'



  

export interface AggregatePersonFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for BusinessRoleConnection

type BusinessRoleConnectionObject =
  | BusinessRoleConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type BusinessRoleConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface BusinessRoleConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BusinessRoleConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'BusinessRoleEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"BusinessRoleConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BusinessRoleEdge[]> | prisma.BusinessRoleEdge[]
  }
  aggregate: {
    type: 'AggregateBusinessRole'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BusinessRoleConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateBusinessRole> | prisma.AggregateBusinessRole
  }
}
  

// Types for BusinessRoleEdge

type BusinessRoleEdgeObject =
  | BusinessRoleEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type BusinessRoleEdgeFields =
  | 'node'
  | 'cursor'



  

export interface BusinessRoleEdgeFieldDetails {
  node: {
    type: 'BusinessRole'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BusinessRoleEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BusinessRole> | prisma.BusinessRole
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateBusinessRole

type AggregateBusinessRoleObject =
  | AggregateBusinessRoleFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateBusinessRoleFields =
  | 'count'



  

export interface AggregateBusinessRoleFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrganizationalUnitConnection

type OrganizationalUnitConnectionObject =
  | OrganizationalUnitConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OrganizationalUnitConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OrganizationalUnitConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationalUnitConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OrganizationalUnitEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationalUnitConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnitEdge[]> | prisma.OrganizationalUnitEdge[]
  }
  aggregate: {
    type: 'AggregateOrganizationalUnit'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationalUnitConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOrganizationalUnit> | prisma.AggregateOrganizationalUnit
  }
}
  

// Types for OrganizationalUnitEdge

type OrganizationalUnitEdgeObject =
  | OrganizationalUnitEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OrganizationalUnitEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OrganizationalUnitEdgeFieldDetails {
  node: {
    type: 'OrganizationalUnit'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationalUnitEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnit> | prisma.OrganizationalUnit
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOrganizationalUnit

type AggregateOrganizationalUnitObject =
  | AggregateOrganizationalUnitFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOrganizationalUnitFields =
  | 'count'



  

export interface AggregateOrganizationalUnitFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrganizationalUnitTypeConnection

type OrganizationalUnitTypeConnectionObject =
  | OrganizationalUnitTypeConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OrganizationalUnitTypeConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OrganizationalUnitTypeConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationalUnitTypeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OrganizationalUnitTypeEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationalUnitTypeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnitTypeEdge[]> | prisma.OrganizationalUnitTypeEdge[]
  }
  aggregate: {
    type: 'AggregateOrganizationalUnitType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationalUnitTypeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOrganizationalUnitType> | prisma.AggregateOrganizationalUnitType
  }
}
  

// Types for OrganizationalUnitTypeEdge

type OrganizationalUnitTypeEdgeObject =
  | OrganizationalUnitTypeEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OrganizationalUnitTypeEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OrganizationalUnitTypeEdgeFieldDetails {
  node: {
    type: 'OrganizationalUnitType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationalUnitTypeEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnitType> | prisma.OrganizationalUnitType
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOrganizationalUnitType

type AggregateOrganizationalUnitTypeObject =
  | AggregateOrganizationalUnitTypeFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOrganizationalUnitTypeFields =
  | 'count'



  

export interface AggregateOrganizationalUnitTypeFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ProcessConnection

type ProcessConnectionObject =
  | ProcessConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ProcessConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ProcessConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProcessConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ProcessEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ProcessConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProcessEdge[]> | prisma.ProcessEdge[]
  }
  aggregate: {
    type: 'AggregateProcess'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProcessConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateProcess> | prisma.AggregateProcess
  }
}
  

// Types for ProcessEdge

type ProcessEdgeObject =
  | ProcessEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ProcessEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ProcessEdgeFieldDetails {
  node: {
    type: 'Process'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProcessEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Process> | prisma.Process
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateProcess

type AggregateProcessObject =
  | AggregateProcessFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateProcessFields =
  | 'count'



  

export interface AggregateProcessFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ProcessingActivityConnection

type ProcessingActivityConnectionObject =
  | ProcessingActivityConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ProcessingActivityConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ProcessingActivityConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProcessingActivityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ProcessingActivityEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ProcessingActivityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProcessingActivityEdge[]> | prisma.ProcessingActivityEdge[]
  }
  aggregate: {
    type: 'AggregateProcessingActivity'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProcessingActivityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateProcessingActivity> | prisma.AggregateProcessingActivity
  }
}
  

// Types for ProcessingActivityEdge

type ProcessingActivityEdgeObject =
  | ProcessingActivityEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ProcessingActivityEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ProcessingActivityEdgeFieldDetails {
  node: {
    type: 'ProcessingActivity'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProcessingActivityEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProcessingActivity> | prisma.ProcessingActivity
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateProcessingActivity

type AggregateProcessingActivityObject =
  | AggregateProcessingActivityFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateProcessingActivityFields =
  | 'count'



  

export interface AggregateProcessingActivityFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ApplicationConnection

type ApplicationConnectionObject =
  | ApplicationConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ApplicationConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ApplicationConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ApplicationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ApplicationEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ApplicationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ApplicationEdge[]> | prisma.ApplicationEdge[]
  }
  aggregate: {
    type: 'AggregateApplication'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ApplicationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateApplication> | prisma.AggregateApplication
  }
}
  

// Types for ApplicationEdge

type ApplicationEdgeObject =
  | ApplicationEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ApplicationEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ApplicationEdgeFieldDetails {
  node: {
    type: 'Application'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ApplicationEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Application> | prisma.Application
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateApplication

type AggregateApplicationObject =
  | AggregateApplicationFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateApplicationFields =
  | 'count'



  

export interface AggregateApplicationFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DataTypeConnection

type DataTypeConnectionObject =
  | DataTypeConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type DataTypeConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface DataTypeConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DataTypeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'DataTypeEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"DataTypeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DataTypeEdge[]> | prisma.DataTypeEdge[]
  }
  aggregate: {
    type: 'AggregateDataType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DataTypeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateDataType> | prisma.AggregateDataType
  }
}
  

// Types for DataTypeEdge

type DataTypeEdgeObject =
  | DataTypeEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type DataTypeEdgeFields =
  | 'node'
  | 'cursor'



  

export interface DataTypeEdgeFieldDetails {
  node: {
    type: 'DataType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DataTypeEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DataType> | prisma.DataType
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateDataType

type AggregateDataTypeObject =
  | AggregateDataTypeFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateDataTypeFields =
  | 'count'



  

export interface AggregateDataTypeFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for QualityAttributeConnection

type QualityAttributeConnectionObject =
  | QualityAttributeConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type QualityAttributeConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface QualityAttributeConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"QualityAttributeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'QualityAttributeEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"QualityAttributeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QualityAttributeEdge[]> | prisma.QualityAttributeEdge[]
  }
  aggregate: {
    type: 'AggregateQualityAttribute'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"QualityAttributeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateQualityAttribute> | prisma.AggregateQualityAttribute
  }
}
  

// Types for QualityAttributeEdge

type QualityAttributeEdgeObject =
  | QualityAttributeEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type QualityAttributeEdgeFields =
  | 'node'
  | 'cursor'



  

export interface QualityAttributeEdgeFieldDetails {
  node: {
    type: 'QualityAttribute'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"QualityAttributeEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QualityAttribute> | prisma.QualityAttribute
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateQualityAttribute

type AggregateQualityAttributeObject =
  | AggregateQualityAttributeFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateQualityAttributeFields =
  | 'count'



  

export interface AggregateQualityAttributeFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ClassificationLabelConnection

type ClassificationLabelConnectionObject =
  | ClassificationLabelConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ClassificationLabelConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ClassificationLabelConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ClassificationLabelConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ClassificationLabelEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ClassificationLabelConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ClassificationLabelEdge[]> | prisma.ClassificationLabelEdge[]
  }
  aggregate: {
    type: 'AggregateClassificationLabel'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ClassificationLabelConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateClassificationLabel> | prisma.AggregateClassificationLabel
  }
}
  

// Types for ClassificationLabelEdge

type ClassificationLabelEdgeObject =
  | ClassificationLabelEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ClassificationLabelEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ClassificationLabelEdgeFieldDetails {
  node: {
    type: 'ClassificationLabel'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ClassificationLabelEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ClassificationLabel> | prisma.ClassificationLabel
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateClassificationLabel

type AggregateClassificationLabelObject =
  | AggregateClassificationLabelFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateClassificationLabelFields =
  | 'count'



  

export interface AggregateClassificationLabelFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Organization

type OrganizationObject =
  | OrganizationFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'contactDetails', args?: [] | false, alias?: string  } 
  | { name: 'dpo', args?: [] | false, alias?: string  } 
  | { name: 'representative', args?: [] | false, alias?: string  } 
  | { name: 'headOffice', args?: [] | false, alias?: string  } 

type OrganizationFields =
  | 'id'
  | 'name'
  | 'description'
  | 'contactDetails'
  | 'dpo'
  | 'representative'
  | 'headOffice'



  

export interface OrganizationFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  contactDetails: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  dpo: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  representative: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  headOffice: {
    type: 'Location'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Organization">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Location> | prisma.Location
  }
}
  

// Types for Location

type LocationObject =
  | LocationFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'address', args?: [] | false, alias?: string  } 
  | { name: 'organization', args?: [] | false, alias?: string  } 

type LocationFields =
  | 'id'
  | 'name'
  | 'description'
  | 'address'
  | 'organization'



  

export interface LocationFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  address: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  organization: {
    type: 'Organization'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Location">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization | null> | prisma.Organization | null
  }
}
  

// Types for OrganizationConnection

type OrganizationConnectionObject =
  | OrganizationConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OrganizationConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OrganizationConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OrganizationEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationEdge[]> | prisma.OrganizationEdge[]
  }
  aggregate: {
    type: 'AggregateOrganization'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOrganization> | prisma.AggregateOrganization
  }
}
  

// Types for OrganizationEdge

type OrganizationEdgeObject =
  | OrganizationEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OrganizationEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OrganizationEdgeFieldDetails {
  node: {
    type: 'Organization'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization> | prisma.Organization
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOrganization

type AggregateOrganizationObject =
  | AggregateOrganizationFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOrganizationFields =
  | 'count'



  

export interface AggregateOrganizationFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for LocationConnection

type LocationConnectionObject =
  | LocationConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type LocationConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface LocationConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"LocationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'LocationEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"LocationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LocationEdge[]> | prisma.LocationEdge[]
  }
  aggregate: {
    type: 'AggregateLocation'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"LocationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateLocation> | prisma.AggregateLocation
  }
}
  

// Types for LocationEdge

type LocationEdgeObject =
  | LocationEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type LocationEdgeFields =
  | 'node'
  | 'cursor'



  

export interface LocationEdgeFieldDetails {
  node: {
    type: 'Location'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"LocationEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Location> | prisma.Location
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateLocation

type AggregateLocationObject =
  | AggregateLocationFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateLocationFields =
  | 'count'



  

export interface AggregateLocationFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: 'createUser', args?: MutationCreateUserArgs[] | false, alias?: string  } 
  | { name: 'updateUser', args?: MutationUpdateUserArgs[] | false, alias?: string  } 
  | { name: 'updateManyUsers', args?: MutationUpdateManyUsersArgs[] | false, alias?: string  } 
  | { name: 'upsertUser', args?: MutationUpsertUserArgs[] | false, alias?: string  } 
  | { name: 'deleteUser', args?: MutationDeleteUserArgs[] | false, alias?: string  } 
  | { name: 'deleteManyUsers', args?: MutationDeleteManyUsersArgs[] | false, alias?: string  } 
  | { name: 'createPerson', args?: MutationCreatePersonArgs[] | false, alias?: string  } 
  | { name: 'updatePerson', args?: MutationUpdatePersonArgs[] | false, alias?: string  } 
  | { name: 'updateManyPersons', args?: MutationUpdateManyPersonsArgs[] | false, alias?: string  } 
  | { name: 'upsertPerson', args?: MutationUpsertPersonArgs[] | false, alias?: string  } 
  | { name: 'deletePerson', args?: MutationDeletePersonArgs[] | false, alias?: string  } 
  | { name: 'deleteManyPersons', args?: MutationDeleteManyPersonsArgs[] | false, alias?: string  } 
  | { name: 'createBusinessRole', args?: MutationCreateBusinessRoleArgs[] | false, alias?: string  } 
  | { name: 'updateBusinessRole', args?: MutationUpdateBusinessRoleArgs[] | false, alias?: string  } 
  | { name: 'updateManyBusinessRoles', args?: MutationUpdateManyBusinessRolesArgs[] | false, alias?: string  } 
  | { name: 'upsertBusinessRole', args?: MutationUpsertBusinessRoleArgs[] | false, alias?: string  } 
  | { name: 'deleteBusinessRole', args?: MutationDeleteBusinessRoleArgs[] | false, alias?: string  } 
  | { name: 'deleteManyBusinessRoles', args?: MutationDeleteManyBusinessRolesArgs[] | false, alias?: string  } 
  | { name: 'createOrganizationalUnit', args?: MutationCreateOrganizationalUnitArgs[] | false, alias?: string  } 
  | { name: 'updateOrganizationalUnit', args?: MutationUpdateOrganizationalUnitArgs[] | false, alias?: string  } 
  | { name: 'updateManyOrganizationalUnits', args?: MutationUpdateManyOrganizationalUnitsArgs[] | false, alias?: string  } 
  | { name: 'upsertOrganizationalUnit', args?: MutationUpsertOrganizationalUnitArgs[] | false, alias?: string  } 
  | { name: 'deleteOrganizationalUnit', args?: MutationDeleteOrganizationalUnitArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOrganizationalUnits', args?: MutationDeleteManyOrganizationalUnitsArgs[] | false, alias?: string  } 
  | { name: 'createOrganizationalUnitType', args?: MutationCreateOrganizationalUnitTypeArgs[] | false, alias?: string  } 
  | { name: 'updateOrganizationalUnitType', args?: MutationUpdateOrganizationalUnitTypeArgs[] | false, alias?: string  } 
  | { name: 'updateManyOrganizationalUnitTypes', args?: MutationUpdateManyOrganizationalUnitTypesArgs[] | false, alias?: string  } 
  | { name: 'upsertOrganizationalUnitType', args?: MutationUpsertOrganizationalUnitTypeArgs[] | false, alias?: string  } 
  | { name: 'deleteOrganizationalUnitType', args?: MutationDeleteOrganizationalUnitTypeArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOrganizationalUnitTypes', args?: MutationDeleteManyOrganizationalUnitTypesArgs[] | false, alias?: string  } 
  | { name: 'createProcess', args?: MutationCreateProcessArgs[] | false, alias?: string  } 
  | { name: 'updateProcess', args?: MutationUpdateProcessArgs[] | false, alias?: string  } 
  | { name: 'updateManyProcesses', args?: MutationUpdateManyProcessesArgs[] | false, alias?: string  } 
  | { name: 'upsertProcess', args?: MutationUpsertProcessArgs[] | false, alias?: string  } 
  | { name: 'deleteProcess', args?: MutationDeleteProcessArgs[] | false, alias?: string  } 
  | { name: 'deleteManyProcesses', args?: MutationDeleteManyProcessesArgs[] | false, alias?: string  } 
  | { name: 'createProcessingActivity', args?: MutationCreateProcessingActivityArgs[] | false, alias?: string  } 
  | { name: 'updateProcessingActivity', args?: MutationUpdateProcessingActivityArgs[] | false, alias?: string  } 
  | { name: 'updateManyProcessingActivities', args?: MutationUpdateManyProcessingActivitiesArgs[] | false, alias?: string  } 
  | { name: 'upsertProcessingActivity', args?: MutationUpsertProcessingActivityArgs[] | false, alias?: string  } 
  | { name: 'deleteProcessingActivity', args?: MutationDeleteProcessingActivityArgs[] | false, alias?: string  } 
  | { name: 'deleteManyProcessingActivities', args?: MutationDeleteManyProcessingActivitiesArgs[] | false, alias?: string  } 
  | { name: 'createApplication', args?: MutationCreateApplicationArgs[] | false, alias?: string  } 
  | { name: 'updateApplication', args?: MutationUpdateApplicationArgs[] | false, alias?: string  } 
  | { name: 'updateManyApplications', args?: MutationUpdateManyApplicationsArgs[] | false, alias?: string  } 
  | { name: 'upsertApplication', args?: MutationUpsertApplicationArgs[] | false, alias?: string  } 
  | { name: 'deleteApplication', args?: MutationDeleteApplicationArgs[] | false, alias?: string  } 
  | { name: 'deleteManyApplications', args?: MutationDeleteManyApplicationsArgs[] | false, alias?: string  } 
  | { name: 'createDataType', args?: MutationCreateDataTypeArgs[] | false, alias?: string  } 
  | { name: 'updateDataType', args?: MutationUpdateDataTypeArgs[] | false, alias?: string  } 
  | { name: 'updateManyDataTypes', args?: MutationUpdateManyDataTypesArgs[] | false, alias?: string  } 
  | { name: 'upsertDataType', args?: MutationUpsertDataTypeArgs[] | false, alias?: string  } 
  | { name: 'deleteDataType', args?: MutationDeleteDataTypeArgs[] | false, alias?: string  } 
  | { name: 'deleteManyDataTypes', args?: MutationDeleteManyDataTypesArgs[] | false, alias?: string  } 
  | { name: 'createQualityAttribute', args?: MutationCreateQualityAttributeArgs[] | false, alias?: string  } 
  | { name: 'updateQualityAttribute', args?: MutationUpdateQualityAttributeArgs[] | false, alias?: string  } 
  | { name: 'updateManyQualityAttributes', args?: MutationUpdateManyQualityAttributesArgs[] | false, alias?: string  } 
  | { name: 'upsertQualityAttribute', args?: MutationUpsertQualityAttributeArgs[] | false, alias?: string  } 
  | { name: 'deleteQualityAttribute', args?: MutationDeleteQualityAttributeArgs[] | false, alias?: string  } 
  | { name: 'deleteManyQualityAttributes', args?: MutationDeleteManyQualityAttributesArgs[] | false, alias?: string  } 
  | { name: 'createClassificationLabel', args?: MutationCreateClassificationLabelArgs[] | false, alias?: string  } 
  | { name: 'updateClassificationLabel', args?: MutationUpdateClassificationLabelArgs[] | false, alias?: string  } 
  | { name: 'updateManyClassificationLabels', args?: MutationUpdateManyClassificationLabelsArgs[] | false, alias?: string  } 
  | { name: 'upsertClassificationLabel', args?: MutationUpsertClassificationLabelArgs[] | false, alias?: string  } 
  | { name: 'deleteClassificationLabel', args?: MutationDeleteClassificationLabelArgs[] | false, alias?: string  } 
  | { name: 'deleteManyClassificationLabels', args?: MutationDeleteManyClassificationLabelsArgs[] | false, alias?: string  } 
  | { name: 'createOrganization', args?: MutationCreateOrganizationArgs[] | false, alias?: string  } 
  | { name: 'updateOrganization', args?: MutationUpdateOrganizationArgs[] | false, alias?: string  } 
  | { name: 'updateManyOrganizations', args?: MutationUpdateManyOrganizationsArgs[] | false, alias?: string  } 
  | { name: 'upsertOrganization', args?: MutationUpsertOrganizationArgs[] | false, alias?: string  } 
  | { name: 'deleteOrganization', args?: MutationDeleteOrganizationArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOrganizations', args?: MutationDeleteManyOrganizationsArgs[] | false, alias?: string  } 
  | { name: 'createLocation', args?: MutationCreateLocationArgs[] | false, alias?: string  } 
  | { name: 'updateLocation', args?: MutationUpdateLocationArgs[] | false, alias?: string  } 
  | { name: 'updateManyLocations', args?: MutationUpdateManyLocationsArgs[] | false, alias?: string  } 
  | { name: 'upsertLocation', args?: MutationUpsertLocationArgs[] | false, alias?: string  } 
  | { name: 'deleteLocation', args?: MutationDeleteLocationArgs[] | false, alias?: string  } 
  | { name: 'deleteManyLocations', args?: MutationDeleteManyLocationsArgs[] | false, alias?: string  } 

type MutationFields =
  | 'createUser'
  | 'updateUser'
  | 'updateManyUsers'
  | 'upsertUser'
  | 'deleteUser'
  | 'deleteManyUsers'
  | 'createPerson'
  | 'updatePerson'
  | 'updateManyPersons'
  | 'upsertPerson'
  | 'deletePerson'
  | 'deleteManyPersons'
  | 'createBusinessRole'
  | 'updateBusinessRole'
  | 'updateManyBusinessRoles'
  | 'upsertBusinessRole'
  | 'deleteBusinessRole'
  | 'deleteManyBusinessRoles'
  | 'createOrganizationalUnit'
  | 'updateOrganizationalUnit'
  | 'updateManyOrganizationalUnits'
  | 'upsertOrganizationalUnit'
  | 'deleteOrganizationalUnit'
  | 'deleteManyOrganizationalUnits'
  | 'createOrganizationalUnitType'
  | 'updateOrganizationalUnitType'
  | 'updateManyOrganizationalUnitTypes'
  | 'upsertOrganizationalUnitType'
  | 'deleteOrganizationalUnitType'
  | 'deleteManyOrganizationalUnitTypes'
  | 'createProcess'
  | 'updateProcess'
  | 'updateManyProcesses'
  | 'upsertProcess'
  | 'deleteProcess'
  | 'deleteManyProcesses'
  | 'createProcessingActivity'
  | 'updateProcessingActivity'
  | 'updateManyProcessingActivities'
  | 'upsertProcessingActivity'
  | 'deleteProcessingActivity'
  | 'deleteManyProcessingActivities'
  | 'createApplication'
  | 'updateApplication'
  | 'updateManyApplications'
  | 'upsertApplication'
  | 'deleteApplication'
  | 'deleteManyApplications'
  | 'createDataType'
  | 'updateDataType'
  | 'updateManyDataTypes'
  | 'upsertDataType'
  | 'deleteDataType'
  | 'deleteManyDataTypes'
  | 'createQualityAttribute'
  | 'updateQualityAttribute'
  | 'updateManyQualityAttributes'
  | 'upsertQualityAttribute'
  | 'deleteQualityAttribute'
  | 'deleteManyQualityAttributes'
  | 'createClassificationLabel'
  | 'updateClassificationLabel'
  | 'updateManyClassificationLabels'
  | 'upsertClassificationLabel'
  | 'deleteClassificationLabel'
  | 'deleteManyClassificationLabels'
  | 'createOrganization'
  | 'updateOrganization'
  | 'updateManyOrganizations'
  | 'upsertOrganization'
  | 'deleteOrganization'
  | 'deleteManyOrganizations'
  | 'createLocation'
  | 'updateLocation'
  | 'updateManyLocations'
  | 'upsertLocation'
  | 'deleteLocation'
  | 'deleteManyLocations'


type MutationCreateUserArgs =
  | 'data'
type MutationUpdateUserArgs =
  | 'data'
  | 'where'
type MutationUpdateManyUsersArgs =
  | 'data'
  | 'where'
type MutationUpsertUserArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteUserArgs =
  | 'where'
type MutationDeleteManyUsersArgs =
  | 'where'
type MutationCreatePersonArgs =
  | 'data'
type MutationUpdatePersonArgs =
  | 'data'
  | 'where'
type MutationUpdateManyPersonsArgs =
  | 'data'
  | 'where'
type MutationUpsertPersonArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletePersonArgs =
  | 'where'
type MutationDeleteManyPersonsArgs =
  | 'where'
type MutationCreateBusinessRoleArgs =
  | 'data'
type MutationUpdateBusinessRoleArgs =
  | 'data'
  | 'where'
type MutationUpdateManyBusinessRolesArgs =
  | 'data'
  | 'where'
type MutationUpsertBusinessRoleArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteBusinessRoleArgs =
  | 'where'
type MutationDeleteManyBusinessRolesArgs =
  | 'where'
type MutationCreateOrganizationalUnitArgs =
  | 'data'
type MutationUpdateOrganizationalUnitArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOrganizationalUnitsArgs =
  | 'data'
  | 'where'
type MutationUpsertOrganizationalUnitArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOrganizationalUnitArgs =
  | 'where'
type MutationDeleteManyOrganizationalUnitsArgs =
  | 'where'
type MutationCreateOrganizationalUnitTypeArgs =
  | 'data'
type MutationUpdateOrganizationalUnitTypeArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOrganizationalUnitTypesArgs =
  | 'data'
  | 'where'
type MutationUpsertOrganizationalUnitTypeArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOrganizationalUnitTypeArgs =
  | 'where'
type MutationDeleteManyOrganizationalUnitTypesArgs =
  | 'where'
type MutationCreateProcessArgs =
  | 'data'
type MutationUpdateProcessArgs =
  | 'data'
  | 'where'
type MutationUpdateManyProcessesArgs =
  | 'data'
  | 'where'
type MutationUpsertProcessArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteProcessArgs =
  | 'where'
type MutationDeleteManyProcessesArgs =
  | 'where'
type MutationCreateProcessingActivityArgs =
  | 'data'
type MutationUpdateProcessingActivityArgs =
  | 'data'
  | 'where'
type MutationUpdateManyProcessingActivitiesArgs =
  | 'data'
  | 'where'
type MutationUpsertProcessingActivityArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteProcessingActivityArgs =
  | 'where'
type MutationDeleteManyProcessingActivitiesArgs =
  | 'where'
type MutationCreateApplicationArgs =
  | 'data'
type MutationUpdateApplicationArgs =
  | 'data'
  | 'where'
type MutationUpdateManyApplicationsArgs =
  | 'data'
  | 'where'
type MutationUpsertApplicationArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteApplicationArgs =
  | 'where'
type MutationDeleteManyApplicationsArgs =
  | 'where'
type MutationCreateDataTypeArgs =
  | 'data'
type MutationUpdateDataTypeArgs =
  | 'data'
  | 'where'
type MutationUpdateManyDataTypesArgs =
  | 'data'
  | 'where'
type MutationUpsertDataTypeArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteDataTypeArgs =
  | 'where'
type MutationDeleteManyDataTypesArgs =
  | 'where'
type MutationCreateQualityAttributeArgs =
  | 'data'
type MutationUpdateQualityAttributeArgs =
  | 'data'
  | 'where'
type MutationUpdateManyQualityAttributesArgs =
  | 'data'
  | 'where'
type MutationUpsertQualityAttributeArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteQualityAttributeArgs =
  | 'where'
type MutationDeleteManyQualityAttributesArgs =
  | 'where'
type MutationCreateClassificationLabelArgs =
  | 'data'
type MutationUpdateClassificationLabelArgs =
  | 'data'
  | 'where'
type MutationUpdateManyClassificationLabelsArgs =
  | 'data'
  | 'where'
type MutationUpsertClassificationLabelArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteClassificationLabelArgs =
  | 'where'
type MutationDeleteManyClassificationLabelsArgs =
  | 'where'
type MutationCreateOrganizationArgs =
  | 'data'
type MutationUpdateOrganizationArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOrganizationsArgs =
  | 'data'
  | 'where'
type MutationUpsertOrganizationArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOrganizationArgs =
  | 'where'
type MutationDeleteManyOrganizationsArgs =
  | 'where'
type MutationCreateLocationArgs =
  | 'data'
type MutationUpdateLocationArgs =
  | 'data'
  | 'where'
type MutationUpdateManyLocationsArgs =
  | 'data'
  | 'where'
type MutationUpsertLocationArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteLocationArgs =
  | 'where'
type MutationDeleteManyLocationsArgs =
  | 'where'
  

export interface MutationFieldDetails {
  createUser: {
    type: 'User'
    args: Record<MutationCreateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  updateUser: {
    type: 'User'
    args: Record<MutationUpdateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateInput, where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updateManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateManyMutationInput, where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertUser: {
    type: 'User'
    args: Record<MutationUpsertUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput, create: UserCreateInput, update: UserUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  deleteUser: {
    type: 'User'
    args: Record<MutationDeleteUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  deleteManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createPerson: {
    type: 'Person'
    args: Record<MutationCreatePersonArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PersonCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person> | prisma.Person
  }
  updatePerson: {
    type: 'Person'
    args: Record<MutationUpdatePersonArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PersonUpdateInput, where: PersonWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person | null> | prisma.Person | null
  }
  updateManyPersons: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyPersonsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PersonUpdateManyMutationInput, where?: PersonWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertPerson: {
    type: 'Person'
    args: Record<MutationUpsertPersonArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PersonWhereUniqueInput, create: PersonCreateInput, update: PersonUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person> | prisma.Person
  }
  deletePerson: {
    type: 'Person'
    args: Record<MutationDeletePersonArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PersonWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person | null> | prisma.Person | null
  }
  deleteManyPersons: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyPersonsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: PersonWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createBusinessRole: {
    type: 'BusinessRole'
    args: Record<MutationCreateBusinessRoleArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BusinessRoleCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BusinessRole> | prisma.BusinessRole
  }
  updateBusinessRole: {
    type: 'BusinessRole'
    args: Record<MutationUpdateBusinessRoleArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BusinessRoleUpdateInput, where: BusinessRoleWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BusinessRole | null> | prisma.BusinessRole | null
  }
  updateManyBusinessRoles: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyBusinessRolesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BusinessRoleUpdateManyMutationInput, where?: BusinessRoleWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertBusinessRole: {
    type: 'BusinessRole'
    args: Record<MutationUpsertBusinessRoleArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: BusinessRoleWhereUniqueInput, create: BusinessRoleCreateInput, update: BusinessRoleUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BusinessRole> | prisma.BusinessRole
  }
  deleteBusinessRole: {
    type: 'BusinessRole'
    args: Record<MutationDeleteBusinessRoleArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: BusinessRoleWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BusinessRole | null> | prisma.BusinessRole | null
  }
  deleteManyBusinessRoles: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyBusinessRolesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: BusinessRoleWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOrganizationalUnit: {
    type: 'OrganizationalUnit'
    args: Record<MutationCreateOrganizationalUnitArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrganizationalUnitCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnit> | prisma.OrganizationalUnit
  }
  updateOrganizationalUnit: {
    type: 'OrganizationalUnit'
    args: Record<MutationUpdateOrganizationalUnitArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrganizationalUnitUpdateInput, where: OrganizationalUnitWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnit | null> | prisma.OrganizationalUnit | null
  }
  updateManyOrganizationalUnits: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOrganizationalUnitsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrganizationalUnitUpdateManyMutationInput, where?: OrganizationalUnitWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOrganizationalUnit: {
    type: 'OrganizationalUnit'
    args: Record<MutationUpsertOrganizationalUnitArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrganizationalUnitWhereUniqueInput, create: OrganizationalUnitCreateInput, update: OrganizationalUnitUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnit> | prisma.OrganizationalUnit
  }
  deleteOrganizationalUnit: {
    type: 'OrganizationalUnit'
    args: Record<MutationDeleteOrganizationalUnitArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrganizationalUnitWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnit | null> | prisma.OrganizationalUnit | null
  }
  deleteManyOrganizationalUnits: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOrganizationalUnitsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OrganizationalUnitWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOrganizationalUnitType: {
    type: 'OrganizationalUnitType'
    args: Record<MutationCreateOrganizationalUnitTypeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrganizationalUnitTypeCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnitType> | prisma.OrganizationalUnitType
  }
  updateOrganizationalUnitType: {
    type: 'OrganizationalUnitType'
    args: Record<MutationUpdateOrganizationalUnitTypeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrganizationalUnitTypeUpdateInput, where: OrganizationalUnitTypeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnitType | null> | prisma.OrganizationalUnitType | null
  }
  updateManyOrganizationalUnitTypes: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOrganizationalUnitTypesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrganizationalUnitTypeUpdateManyMutationInput, where?: OrganizationalUnitTypeWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOrganizationalUnitType: {
    type: 'OrganizationalUnitType'
    args: Record<MutationUpsertOrganizationalUnitTypeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrganizationalUnitTypeWhereUniqueInput, create: OrganizationalUnitTypeCreateInput, update: OrganizationalUnitTypeUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnitType> | prisma.OrganizationalUnitType
  }
  deleteOrganizationalUnitType: {
    type: 'OrganizationalUnitType'
    args: Record<MutationDeleteOrganizationalUnitTypeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrganizationalUnitTypeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnitType | null> | prisma.OrganizationalUnitType | null
  }
  deleteManyOrganizationalUnitTypes: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOrganizationalUnitTypesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OrganizationalUnitTypeWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createProcess: {
    type: 'Process'
    args: Record<MutationCreateProcessArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProcessCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Process> | prisma.Process
  }
  updateProcess: {
    type: 'Process'
    args: Record<MutationUpdateProcessArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProcessUpdateInput, where: ProcessWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Process | null> | prisma.Process | null
  }
  updateManyProcesses: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyProcessesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProcessUpdateManyMutationInput, where?: ProcessWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertProcess: {
    type: 'Process'
    args: Record<MutationUpsertProcessArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ProcessWhereUniqueInput, create: ProcessCreateInput, update: ProcessUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Process> | prisma.Process
  }
  deleteProcess: {
    type: 'Process'
    args: Record<MutationDeleteProcessArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ProcessWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Process | null> | prisma.Process | null
  }
  deleteManyProcesses: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyProcessesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ProcessWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createProcessingActivity: {
    type: 'ProcessingActivity'
    args: Record<MutationCreateProcessingActivityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProcessingActivityCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProcessingActivity> | prisma.ProcessingActivity
  }
  updateProcessingActivity: {
    type: 'ProcessingActivity'
    args: Record<MutationUpdateProcessingActivityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProcessingActivityUpdateInput, where: ProcessingActivityWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProcessingActivity | null> | prisma.ProcessingActivity | null
  }
  updateManyProcessingActivities: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyProcessingActivitiesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProcessingActivityUpdateManyMutationInput, where?: ProcessingActivityWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertProcessingActivity: {
    type: 'ProcessingActivity'
    args: Record<MutationUpsertProcessingActivityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ProcessingActivityWhereUniqueInput, create: ProcessingActivityCreateInput, update: ProcessingActivityUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProcessingActivity> | prisma.ProcessingActivity
  }
  deleteProcessingActivity: {
    type: 'ProcessingActivity'
    args: Record<MutationDeleteProcessingActivityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ProcessingActivityWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProcessingActivity | null> | prisma.ProcessingActivity | null
  }
  deleteManyProcessingActivities: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyProcessingActivitiesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ProcessingActivityWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createApplication: {
    type: 'Application'
    args: Record<MutationCreateApplicationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ApplicationCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Application> | prisma.Application
  }
  updateApplication: {
    type: 'Application'
    args: Record<MutationUpdateApplicationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ApplicationUpdateInput, where: ApplicationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Application | null> | prisma.Application | null
  }
  updateManyApplications: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyApplicationsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ApplicationUpdateManyMutationInput, where?: ApplicationWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertApplication: {
    type: 'Application'
    args: Record<MutationUpsertApplicationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ApplicationWhereUniqueInput, create: ApplicationCreateInput, update: ApplicationUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Application> | prisma.Application
  }
  deleteApplication: {
    type: 'Application'
    args: Record<MutationDeleteApplicationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ApplicationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Application | null> | prisma.Application | null
  }
  deleteManyApplications: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyApplicationsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ApplicationWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createDataType: {
    type: 'DataType'
    args: Record<MutationCreateDataTypeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DataTypeCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DataType> | prisma.DataType
  }
  updateDataType: {
    type: 'DataType'
    args: Record<MutationUpdateDataTypeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DataTypeUpdateInput, where: DataTypeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DataType | null> | prisma.DataType | null
  }
  updateManyDataTypes: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyDataTypesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DataTypeUpdateManyMutationInput, where?: DataTypeWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertDataType: {
    type: 'DataType'
    args: Record<MutationUpsertDataTypeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: DataTypeWhereUniqueInput, create: DataTypeCreateInput, update: DataTypeUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DataType> | prisma.DataType
  }
  deleteDataType: {
    type: 'DataType'
    args: Record<MutationDeleteDataTypeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: DataTypeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DataType | null> | prisma.DataType | null
  }
  deleteManyDataTypes: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyDataTypesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: DataTypeWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createQualityAttribute: {
    type: 'QualityAttribute'
    args: Record<MutationCreateQualityAttributeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: QualityAttributeCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QualityAttribute> | prisma.QualityAttribute
  }
  updateQualityAttribute: {
    type: 'QualityAttribute'
    args: Record<MutationUpdateQualityAttributeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: QualityAttributeUpdateInput, where: QualityAttributeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QualityAttribute | null> | prisma.QualityAttribute | null
  }
  updateManyQualityAttributes: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyQualityAttributesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: QualityAttributeUpdateManyMutationInput, where?: QualityAttributeWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertQualityAttribute: {
    type: 'QualityAttribute'
    args: Record<MutationUpsertQualityAttributeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: QualityAttributeWhereUniqueInput, create: QualityAttributeCreateInput, update: QualityAttributeUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QualityAttribute> | prisma.QualityAttribute
  }
  deleteQualityAttribute: {
    type: 'QualityAttribute'
    args: Record<MutationDeleteQualityAttributeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: QualityAttributeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QualityAttribute | null> | prisma.QualityAttribute | null
  }
  deleteManyQualityAttributes: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyQualityAttributesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: QualityAttributeWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createClassificationLabel: {
    type: 'ClassificationLabel'
    args: Record<MutationCreateClassificationLabelArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ClassificationLabelCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ClassificationLabel> | prisma.ClassificationLabel
  }
  updateClassificationLabel: {
    type: 'ClassificationLabel'
    args: Record<MutationUpdateClassificationLabelArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ClassificationLabelUpdateInput, where: ClassificationLabelWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ClassificationLabel | null> | prisma.ClassificationLabel | null
  }
  updateManyClassificationLabels: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyClassificationLabelsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ClassificationLabelUpdateManyMutationInput, where?: ClassificationLabelWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertClassificationLabel: {
    type: 'ClassificationLabel'
    args: Record<MutationUpsertClassificationLabelArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ClassificationLabelWhereUniqueInput, create: ClassificationLabelCreateInput, update: ClassificationLabelUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ClassificationLabel> | prisma.ClassificationLabel
  }
  deleteClassificationLabel: {
    type: 'ClassificationLabel'
    args: Record<MutationDeleteClassificationLabelArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ClassificationLabelWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ClassificationLabel | null> | prisma.ClassificationLabel | null
  }
  deleteManyClassificationLabels: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyClassificationLabelsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ClassificationLabelWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOrganization: {
    type: 'Organization'
    args: Record<MutationCreateOrganizationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrganizationCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization> | prisma.Organization
  }
  updateOrganization: {
    type: 'Organization'
    args: Record<MutationUpdateOrganizationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrganizationUpdateInput, where: OrganizationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization | null> | prisma.Organization | null
  }
  updateManyOrganizations: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOrganizationsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrganizationUpdateManyMutationInput, where?: OrganizationWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOrganization: {
    type: 'Organization'
    args: Record<MutationUpsertOrganizationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrganizationWhereUniqueInput, create: OrganizationCreateInput, update: OrganizationUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization> | prisma.Organization
  }
  deleteOrganization: {
    type: 'Organization'
    args: Record<MutationDeleteOrganizationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrganizationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization | null> | prisma.Organization | null
  }
  deleteManyOrganizations: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOrganizationsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OrganizationWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createLocation: {
    type: 'Location'
    args: Record<MutationCreateLocationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: LocationCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Location> | prisma.Location
  }
  updateLocation: {
    type: 'Location'
    args: Record<MutationUpdateLocationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: LocationUpdateInput, where: LocationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Location | null> | prisma.Location | null
  }
  updateManyLocations: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyLocationsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: LocationUpdateManyMutationInput, where?: LocationWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertLocation: {
    type: 'Location'
    args: Record<MutationUpsertLocationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: LocationWhereUniqueInput, create: LocationCreateInput, update: LocationUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Location> | prisma.Location
  }
  deleteLocation: {
    type: 'Location'
    args: Record<MutationDeleteLocationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: LocationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Location | null> | prisma.Location | null
  }
  deleteManyLocations: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyLocationsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: LocationWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}
  

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type BatchPayloadFields =
  | 'count'



  

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: 'user', args?: SubscriptionUserArgs[] | false, alias?: string  } 
  | { name: 'person', args?: SubscriptionPersonArgs[] | false, alias?: string  } 
  | { name: 'businessRole', args?: SubscriptionBusinessRoleArgs[] | false, alias?: string  } 
  | { name: 'organizationalUnit', args?: SubscriptionOrganizationalUnitArgs[] | false, alias?: string  } 
  | { name: 'organizationalUnitType', args?: SubscriptionOrganizationalUnitTypeArgs[] | false, alias?: string  } 
  | { name: 'process', args?: SubscriptionProcessArgs[] | false, alias?: string  } 
  | { name: 'processingActivity', args?: SubscriptionProcessingActivityArgs[] | false, alias?: string  } 
  | { name: 'application', args?: SubscriptionApplicationArgs[] | false, alias?: string  } 
  | { name: 'dataType', args?: SubscriptionDataTypeArgs[] | false, alias?: string  } 
  | { name: 'qualityAttribute', args?: SubscriptionQualityAttributeArgs[] | false, alias?: string  } 
  | { name: 'classificationLabel', args?: SubscriptionClassificationLabelArgs[] | false, alias?: string  } 
  | { name: 'organization', args?: SubscriptionOrganizationArgs[] | false, alias?: string  } 
  | { name: 'location', args?: SubscriptionLocationArgs[] | false, alias?: string  } 

type SubscriptionFields =
  | 'user'
  | 'person'
  | 'businessRole'
  | 'organizationalUnit'
  | 'organizationalUnitType'
  | 'process'
  | 'processingActivity'
  | 'application'
  | 'dataType'
  | 'qualityAttribute'
  | 'classificationLabel'
  | 'organization'
  | 'location'


type SubscriptionUserArgs =
  | 'where'
type SubscriptionPersonArgs =
  | 'where'
type SubscriptionBusinessRoleArgs =
  | 'where'
type SubscriptionOrganizationalUnitArgs =
  | 'where'
type SubscriptionOrganizationalUnitTypeArgs =
  | 'where'
type SubscriptionProcessArgs =
  | 'where'
type SubscriptionProcessingActivityArgs =
  | 'where'
type SubscriptionApplicationArgs =
  | 'where'
type SubscriptionDataTypeArgs =
  | 'where'
type SubscriptionQualityAttributeArgs =
  | 'where'
type SubscriptionClassificationLabelArgs =
  | 'where'
type SubscriptionOrganizationArgs =
  | 'where'
type SubscriptionLocationArgs =
  | 'where'
  

export interface SubscriptionFieldDetails {
  user: {
    type: 'UserSubscriptionPayload'
    args: Record<SubscriptionUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: UserSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserSubscriptionPayload | null> | prisma.UserSubscriptionPayload | null
  }
  person: {
    type: 'PersonSubscriptionPayload'
    args: Record<SubscriptionPersonArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: PersonSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PersonSubscriptionPayload | null> | prisma.PersonSubscriptionPayload | null
  }
  businessRole: {
    type: 'BusinessRoleSubscriptionPayload'
    args: Record<SubscriptionBusinessRoleArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: BusinessRoleSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BusinessRoleSubscriptionPayload | null> | prisma.BusinessRoleSubscriptionPayload | null
  }
  organizationalUnit: {
    type: 'OrganizationalUnitSubscriptionPayload'
    args: Record<SubscriptionOrganizationalUnitArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OrganizationalUnitSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnitSubscriptionPayload | null> | prisma.OrganizationalUnitSubscriptionPayload | null
  }
  organizationalUnitType: {
    type: 'OrganizationalUnitTypeSubscriptionPayload'
    args: Record<SubscriptionOrganizationalUnitTypeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OrganizationalUnitTypeSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnitTypeSubscriptionPayload | null> | prisma.OrganizationalUnitTypeSubscriptionPayload | null
  }
  process: {
    type: 'ProcessSubscriptionPayload'
    args: Record<SubscriptionProcessArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ProcessSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProcessSubscriptionPayload | null> | prisma.ProcessSubscriptionPayload | null
  }
  processingActivity: {
    type: 'ProcessingActivitySubscriptionPayload'
    args: Record<SubscriptionProcessingActivityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ProcessingActivitySubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProcessingActivitySubscriptionPayload | null> | prisma.ProcessingActivitySubscriptionPayload | null
  }
  application: {
    type: 'ApplicationSubscriptionPayload'
    args: Record<SubscriptionApplicationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ApplicationSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ApplicationSubscriptionPayload | null> | prisma.ApplicationSubscriptionPayload | null
  }
  dataType: {
    type: 'DataTypeSubscriptionPayload'
    args: Record<SubscriptionDataTypeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: DataTypeSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DataTypeSubscriptionPayload | null> | prisma.DataTypeSubscriptionPayload | null
  }
  qualityAttribute: {
    type: 'QualityAttributeSubscriptionPayload'
    args: Record<SubscriptionQualityAttributeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: QualityAttributeSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QualityAttributeSubscriptionPayload | null> | prisma.QualityAttributeSubscriptionPayload | null
  }
  classificationLabel: {
    type: 'ClassificationLabelSubscriptionPayload'
    args: Record<SubscriptionClassificationLabelArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ClassificationLabelSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ClassificationLabelSubscriptionPayload | null> | prisma.ClassificationLabelSubscriptionPayload | null
  }
  organization: {
    type: 'OrganizationSubscriptionPayload'
    args: Record<SubscriptionOrganizationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OrganizationSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationSubscriptionPayload | null> | prisma.OrganizationSubscriptionPayload | null
  }
  location: {
    type: 'LocationSubscriptionPayload'
    args: Record<SubscriptionLocationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: LocationSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LocationSubscriptionPayload | null> | prisma.LocationSubscriptionPayload | null
  }
}
  

// Types for UserSubscriptionPayload

type UserSubscriptionPayloadObject =
  | UserSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type UserSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface UserSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'UserPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPreviousValues | null> | prisma.UserPreviousValues | null
  }
}
  

// Types for UserPreviousValues

type UserPreviousValuesObject =
  | UserPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'active', args?: [] | false, alias?: string  } 
  | { name: 'specialPermissions', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type UserPreviousValuesFields =
  | 'id'
  | 'email'
  | 'password'
  | 'active'
  | 'specialPermissions'
  | 'createdAt'
  | 'updatedAt'



  

export interface UserPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  active: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  specialPermissions: {
    type: 'PERMISSION'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"UserPreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PERMISSION[]> | prisma.PERMISSION[]
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PersonSubscriptionPayload

type PersonSubscriptionPayloadObject =
  | PersonSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type PersonSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface PersonSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PersonSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Person'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PersonSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person | null> | prisma.Person | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'PersonPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PersonSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PersonPreviousValues | null> | prisma.PersonPreviousValues | null
  }
}
  

// Types for PersonPreviousValues

type PersonPreviousValuesObject =
  | PersonPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'surname', args?: [] | false, alias?: string  } 

type PersonPreviousValuesFields =
  | 'id'
  | 'name'
  | 'surname'



  

export interface PersonPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  surname: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for BusinessRoleSubscriptionPayload

type BusinessRoleSubscriptionPayloadObject =
  | BusinessRoleSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type BusinessRoleSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface BusinessRoleSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BusinessRoleSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'BusinessRole'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BusinessRoleSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BusinessRole | null> | prisma.BusinessRole | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'BusinessRolePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BusinessRoleSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BusinessRolePreviousValues | null> | prisma.BusinessRolePreviousValues | null
  }
}
  

// Types for BusinessRolePreviousValues

type BusinessRolePreviousValuesObject =
  | BusinessRolePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'raciPrivacy', args?: [] | false, alias?: string  } 
  | { name: 'raciSecurity', args?: [] | false, alias?: string  } 
  | { name: 'raciFinancial', args?: [] | false, alias?: string  } 
  | { name: 'raciExecutive', args?: [] | false, alias?: string  } 

type BusinessRolePreviousValuesFields =
  | 'id'
  | 'name'
  | 'description'
  | 'raciPrivacy'
  | 'raciSecurity'
  | 'raciFinancial'
  | 'raciExecutive'



  

export interface BusinessRolePreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  raciPrivacy: {
    type: 'RACI'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BusinessRolePreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.RACI | null> | prisma.RACI | null
  }
  raciSecurity: {
    type: 'RACI'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BusinessRolePreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.RACI | null> | prisma.RACI | null
  }
  raciFinancial: {
    type: 'RACI'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BusinessRolePreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.RACI | null> | prisma.RACI | null
  }
  raciExecutive: {
    type: 'RACI'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BusinessRolePreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.RACI | null> | prisma.RACI | null
  }
}
  

// Types for OrganizationalUnitSubscriptionPayload

type OrganizationalUnitSubscriptionPayloadObject =
  | OrganizationalUnitSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OrganizationalUnitSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OrganizationalUnitSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationalUnitSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'OrganizationalUnit'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrganizationalUnitSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnit | null> | prisma.OrganizationalUnit | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OrganizationalUnitPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrganizationalUnitSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnitPreviousValues | null> | prisma.OrganizationalUnitPreviousValues | null
  }
}
  

// Types for OrganizationalUnitPreviousValues

type OrganizationalUnitPreviousValuesObject =
  | OrganizationalUnitPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type OrganizationalUnitPreviousValuesFields =
  | 'id'
  | 'name'
  | 'description'
  | 'createdAt'
  | 'updatedAt'



  

export interface OrganizationalUnitPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrganizationalUnitTypeSubscriptionPayload

type OrganizationalUnitTypeSubscriptionPayloadObject =
  | OrganizationalUnitTypeSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OrganizationalUnitTypeSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OrganizationalUnitTypeSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationalUnitTypeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'OrganizationalUnitType'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrganizationalUnitTypeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnitType | null> | prisma.OrganizationalUnitType | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OrganizationalUnitTypePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrganizationalUnitTypeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationalUnitTypePreviousValues | null> | prisma.OrganizationalUnitTypePreviousValues | null
  }
}
  

// Types for OrganizationalUnitTypePreviousValues

type OrganizationalUnitTypePreviousValuesObject =
  | OrganizationalUnitTypePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'reportingUnit', args?: [] | false, alias?: string  } 

type OrganizationalUnitTypePreviousValuesFields =
  | 'id'
  | 'name'
  | 'description'
  | 'reportingUnit'



  

export interface OrganizationalUnitTypePreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  reportingUnit: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for ProcessSubscriptionPayload

type ProcessSubscriptionPayloadObject =
  | ProcessSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ProcessSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ProcessSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProcessSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Process'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProcessSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Process | null> | prisma.Process | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ProcessPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProcessSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProcessPreviousValues | null> | prisma.ProcessPreviousValues | null
  }
}
  

// Types for ProcessPreviousValues

type ProcessPreviousValuesObject =
  | ProcessPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type ProcessPreviousValuesFields =
  | 'id'
  | 'name'
  | 'description'
  | 'createdAt'
  | 'updatedAt'



  

export interface ProcessPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ProcessingActivitySubscriptionPayload

type ProcessingActivitySubscriptionPayloadObject =
  | ProcessingActivitySubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ProcessingActivitySubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ProcessingActivitySubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProcessingActivitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'ProcessingActivity'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProcessingActivitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProcessingActivity | null> | prisma.ProcessingActivity | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ProcessingActivityPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProcessingActivitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProcessingActivityPreviousValues | null> | prisma.ProcessingActivityPreviousValues | null
  }
}
  

// Types for ProcessingActivityPreviousValues

type ProcessingActivityPreviousValuesObject =
  | ProcessingActivityPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'purpose', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type ProcessingActivityPreviousValuesFields =
  | 'id'
  | 'name'
  | 'description'
  | 'purpose'
  | 'createdAt'
  | 'updatedAt'



  

export interface ProcessingActivityPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  purpose: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ApplicationSubscriptionPayload

type ApplicationSubscriptionPayloadObject =
  | ApplicationSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ApplicationSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ApplicationSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ApplicationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Application'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ApplicationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Application | null> | prisma.Application | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ApplicationPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ApplicationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ApplicationPreviousValues | null> | prisma.ApplicationPreviousValues | null
  }
}
  

// Types for ApplicationPreviousValues

type ApplicationPreviousValuesObject =
  | ApplicationPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'alias', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 

type ApplicationPreviousValuesFields =
  | 'id'
  | 'name'
  | 'alias'
  | 'description'



  

export interface ApplicationPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  alias: {
    type: 'Json'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for DataTypeSubscriptionPayload

type DataTypeSubscriptionPayloadObject =
  | DataTypeSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type DataTypeSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface DataTypeSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DataTypeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'DataType'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DataTypeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DataType | null> | prisma.DataType | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'DataTypePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DataTypeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DataTypePreviousValues | null> | prisma.DataTypePreviousValues | null
  }
}
  

// Types for DataTypePreviousValues

type DataTypePreviousValuesObject =
  | DataTypePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 

type DataTypePreviousValuesFields =
  | 'id'
  | 'name'
  | 'description'



  

export interface DataTypePreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for QualityAttributeSubscriptionPayload

type QualityAttributeSubscriptionPayloadObject =
  | QualityAttributeSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type QualityAttributeSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface QualityAttributeSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"QualityAttributeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'QualityAttribute'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"QualityAttributeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QualityAttribute | null> | prisma.QualityAttribute | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'QualityAttributePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"QualityAttributeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QualityAttributePreviousValues | null> | prisma.QualityAttributePreviousValues | null
  }
}
  

// Types for QualityAttributePreviousValues

type QualityAttributePreviousValuesObject =
  | QualityAttributePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'appliesToObject', args?: [] | false, alias?: string  } 

type QualityAttributePreviousValuesFields =
  | 'id'
  | 'name'
  | 'description'
  | 'appliesToObject'



  

export interface QualityAttributePreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  appliesToObject: {
    type: 'CLASSIFICATIONOBJECT'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"QualityAttributePreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CLASSIFICATIONOBJECT> | prisma.CLASSIFICATIONOBJECT
  }
}
  

// Types for ClassificationLabelSubscriptionPayload

type ClassificationLabelSubscriptionPayloadObject =
  | ClassificationLabelSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ClassificationLabelSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ClassificationLabelSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ClassificationLabelSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'ClassificationLabel'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ClassificationLabelSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ClassificationLabel | null> | prisma.ClassificationLabel | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ClassificationLabelPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ClassificationLabelSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ClassificationLabelPreviousValues | null> | prisma.ClassificationLabelPreviousValues | null
  }
}
  

// Types for ClassificationLabelPreviousValues

type ClassificationLabelPreviousValuesObject =
  | ClassificationLabelPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'score', args?: [] | false, alias?: string  } 
  | { name: 'label', args?: [] | false, alias?: string  } 
  | { name: 'criteria', args?: [] | false, alias?: string  } 

type ClassificationLabelPreviousValuesFields =
  | 'id'
  | 'score'
  | 'label'
  | 'criteria'



  

export interface ClassificationLabelPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  score: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  label: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  criteria: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for OrganizationSubscriptionPayload

type OrganizationSubscriptionPayloadObject =
  | OrganizationSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OrganizationSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OrganizationSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Organization'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrganizationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization | null> | prisma.Organization | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OrganizationPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrganizationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationPreviousValues | null> | prisma.OrganizationPreviousValues | null
  }
}
  

// Types for OrganizationPreviousValues

type OrganizationPreviousValuesObject =
  | OrganizationPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'contactDetails', args?: [] | false, alias?: string  } 
  | { name: 'dpo', args?: [] | false, alias?: string  } 
  | { name: 'representative', args?: [] | false, alias?: string  } 

type OrganizationPreviousValuesFields =
  | 'id'
  | 'name'
  | 'description'
  | 'contactDetails'
  | 'dpo'
  | 'representative'



  

export interface OrganizationPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  contactDetails: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  dpo: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  representative: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for LocationSubscriptionPayload

type LocationSubscriptionPayloadObject =
  | LocationSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type LocationSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface LocationSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"LocationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Location'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"LocationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Location | null> | prisma.Location | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'LocationPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"LocationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LocationPreviousValues | null> | prisma.LocationPreviousValues | null
  }
}
  

// Types for LocationPreviousValues

type LocationPreviousValuesObject =
  | LocationPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'address', args?: [] | false, alias?: string  } 

type LocationPreviousValuesFields =
  | 'id'
  | 'name'
  | 'description'
  | 'address'



  

export interface LocationPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  address: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  


export interface UserWhereUniqueInput {
  id?: string | null
  email?: string | null
}
export type UserWhereUniqueInputInputObject =
  | Extract<keyof UserWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  
export interface BusinessRoleWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  raciPrivacy?: prisma.RACI | null
  raciPrivacy_not?: prisma.RACI | null
  raciPrivacy_in?: prisma.RACI[]
  raciPrivacy_not_in?: prisma.RACI[]
  raciSecurity?: prisma.RACI | null
  raciSecurity_not?: prisma.RACI | null
  raciSecurity_in?: prisma.RACI[]
  raciSecurity_not_in?: prisma.RACI[]
  raciFinancial?: prisma.RACI | null
  raciFinancial_not?: prisma.RACI | null
  raciFinancial_in?: prisma.RACI[]
  raciFinancial_not_in?: prisma.RACI[]
  raciExecutive?: prisma.RACI | null
  raciExecutive_not?: prisma.RACI | null
  raciExecutive_in?: prisma.RACI[]
  raciExecutive_not_in?: prisma.RACI[]
  person?: PersonWhereInput | null
  organizationalUnit?: OrganizationalUnitWhereInput | null
  process_every?: ProcessWhereInput | null
  process_some?: ProcessWhereInput | null
  process_none?: ProcessWhereInput | null
  appBusinessOwner_every?: ApplicationWhereInput | null
  appBusinessOwner_some?: ApplicationWhereInput | null
  appBusinessOwner_none?: ApplicationWhereInput | null
  appItOwner_every?: ApplicationWhereInput | null
  appItOwner_some?: ApplicationWhereInput | null
  appItOwner_none?: ApplicationWhereInput | null
  appSecAdmin_every?: ApplicationWhereInput | null
  appSecAdmin_some?: ApplicationWhereInput | null
  appSecAdmin_none?: ApplicationWhereInput | null
  AND?: BusinessRoleWhereInput[]
  OR?: BusinessRoleWhereInput[]
  NOT?: BusinessRoleWhereInput[]
}
export type BusinessRoleWhereInputInputObject =
  | Extract<keyof BusinessRoleWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'raciPrivacy', alias?: string  } 
  | { name: 'raciPrivacy_not', alias?: string  } 
  | { name: 'raciPrivacy_in', alias?: string  } 
  | { name: 'raciPrivacy_not_in', alias?: string  } 
  | { name: 'raciSecurity', alias?: string  } 
  | { name: 'raciSecurity_not', alias?: string  } 
  | { name: 'raciSecurity_in', alias?: string  } 
  | { name: 'raciSecurity_not_in', alias?: string  } 
  | { name: 'raciFinancial', alias?: string  } 
  | { name: 'raciFinancial_not', alias?: string  } 
  | { name: 'raciFinancial_in', alias?: string  } 
  | { name: 'raciFinancial_not_in', alias?: string  } 
  | { name: 'raciExecutive', alias?: string  } 
  | { name: 'raciExecutive_not', alias?: string  } 
  | { name: 'raciExecutive_in', alias?: string  } 
  | { name: 'raciExecutive_not_in', alias?: string  } 
  | { name: 'person', alias?: string  } 
  | { name: 'organizationalUnit', alias?: string  } 
  | { name: 'process_every', alias?: string  } 
  | { name: 'process_some', alias?: string  } 
  | { name: 'process_none', alias?: string  } 
  | { name: 'appBusinessOwner_every', alias?: string  } 
  | { name: 'appBusinessOwner_some', alias?: string  } 
  | { name: 'appBusinessOwner_none', alias?: string  } 
  | { name: 'appItOwner_every', alias?: string  } 
  | { name: 'appItOwner_some', alias?: string  } 
  | { name: 'appItOwner_none', alias?: string  } 
  | { name: 'appSecAdmin_every', alias?: string  } 
  | { name: 'appSecAdmin_some', alias?: string  } 
  | { name: 'appSecAdmin_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PersonWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  surname?: string | null
  surname_not?: string | null
  surname_in?: string[]
  surname_not_in?: string[]
  surname_lt?: string | null
  surname_lte?: string | null
  surname_gt?: string | null
  surname_gte?: string | null
  surname_contains?: string | null
  surname_not_contains?: string | null
  surname_starts_with?: string | null
  surname_not_starts_with?: string | null
  surname_ends_with?: string | null
  surname_not_ends_with?: string | null
  user?: UserWhereInput | null
  roles_every?: BusinessRoleWhereInput | null
  roles_some?: BusinessRoleWhereInput | null
  roles_none?: BusinessRoleWhereInput | null
  AND?: PersonWhereInput[]
  OR?: PersonWhereInput[]
  NOT?: PersonWhereInput[]
}
export type PersonWhereInputInputObject =
  | Extract<keyof PersonWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'surname', alias?: string  } 
  | { name: 'surname_not', alias?: string  } 
  | { name: 'surname_in', alias?: string  } 
  | { name: 'surname_not_in', alias?: string  } 
  | { name: 'surname_lt', alias?: string  } 
  | { name: 'surname_lte', alias?: string  } 
  | { name: 'surname_gt', alias?: string  } 
  | { name: 'surname_gte', alias?: string  } 
  | { name: 'surname_contains', alias?: string  } 
  | { name: 'surname_not_contains', alias?: string  } 
  | { name: 'surname_starts_with', alias?: string  } 
  | { name: 'surname_not_starts_with', alias?: string  } 
  | { name: 'surname_ends_with', alias?: string  } 
  | { name: 'surname_not_ends_with', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'roles_every', alias?: string  } 
  | { name: 'roles_some', alias?: string  } 
  | { name: 'roles_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  password?: string | null
  password_not?: string | null
  password_in?: string[]
  password_not_in?: string[]
  password_lt?: string | null
  password_lte?: string | null
  password_gt?: string | null
  password_gte?: string | null
  password_contains?: string | null
  password_not_contains?: string | null
  password_starts_with?: string | null
  password_not_starts_with?: string | null
  password_ends_with?: string | null
  password_not_ends_with?: string | null
  active?: boolean | null
  active_not?: boolean | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  person?: PersonWhereInput | null
  AND?: UserWhereInput[]
  OR?: UserWhereInput[]
  NOT?: UserWhereInput[]
}
export type UserWhereInputInputObject =
  | Extract<keyof UserWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'password_not', alias?: string  } 
  | { name: 'password_in', alias?: string  } 
  | { name: 'password_not_in', alias?: string  } 
  | { name: 'password_lt', alias?: string  } 
  | { name: 'password_lte', alias?: string  } 
  | { name: 'password_gt', alias?: string  } 
  | { name: 'password_gte', alias?: string  } 
  | { name: 'password_contains', alias?: string  } 
  | { name: 'password_not_contains', alias?: string  } 
  | { name: 'password_starts_with', alias?: string  } 
  | { name: 'password_not_starts_with', alias?: string  } 
  | { name: 'password_ends_with', alias?: string  } 
  | { name: 'password_not_ends_with', alias?: string  } 
  | { name: 'active', alias?: string  } 
  | { name: 'active_not', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'person', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrganizationalUnitWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  children_every?: OrganizationalUnitWhereInput | null
  children_some?: OrganizationalUnitWhereInput | null
  children_none?: OrganizationalUnitWhereInput | null
  parent?: OrganizationalUnitWhereInput | null
  processes_every?: ProcessWhereInput | null
  processes_some?: ProcessWhereInput | null
  processes_none?: ProcessWhereInput | null
  businessRoles_every?: BusinessRoleWhereInput | null
  businessRoles_some?: BusinessRoleWhereInput | null
  businessRoles_none?: BusinessRoleWhereInput | null
  organizationalUnitType?: OrganizationalUnitTypeWhereInput | null
  AND?: OrganizationalUnitWhereInput[]
  OR?: OrganizationalUnitWhereInput[]
  NOT?: OrganizationalUnitWhereInput[]
}
export type OrganizationalUnitWhereInputInputObject =
  | Extract<keyof OrganizationalUnitWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'children_every', alias?: string  } 
  | { name: 'children_some', alias?: string  } 
  | { name: 'children_none', alias?: string  } 
  | { name: 'parent', alias?: string  } 
  | { name: 'processes_every', alias?: string  } 
  | { name: 'processes_some', alias?: string  } 
  | { name: 'processes_none', alias?: string  } 
  | { name: 'businessRoles_every', alias?: string  } 
  | { name: 'businessRoles_some', alias?: string  } 
  | { name: 'businessRoles_none', alias?: string  } 
  | { name: 'organizationalUnitType', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ProcessWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  organizationalUnit?: OrganizationalUnitWhereInput | null
  processingActivities_every?: ProcessingActivityWhereInput | null
  processingActivities_some?: ProcessingActivityWhereInput | null
  processingActivities_none?: ProcessingActivityWhereInput | null
  processOwner?: BusinessRoleWhereInput | null
  AND?: ProcessWhereInput[]
  OR?: ProcessWhereInput[]
  NOT?: ProcessWhereInput[]
}
export type ProcessWhereInputInputObject =
  | Extract<keyof ProcessWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'organizationalUnit', alias?: string  } 
  | { name: 'processingActivities_every', alias?: string  } 
  | { name: 'processingActivities_some', alias?: string  } 
  | { name: 'processingActivities_none', alias?: string  } 
  | { name: 'processOwner', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ProcessingActivityWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  purpose?: string | null
  purpose_not?: string | null
  purpose_in?: string[]
  purpose_not_in?: string[]
  purpose_lt?: string | null
  purpose_lte?: string | null
  purpose_gt?: string | null
  purpose_gte?: string | null
  purpose_contains?: string | null
  purpose_not_contains?: string | null
  purpose_starts_with?: string | null
  purpose_not_starts_with?: string | null
  purpose_ends_with?: string | null
  purpose_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  process?: ProcessWhereInput | null
  applications_every?: ApplicationWhereInput | null
  applications_some?: ApplicationWhereInput | null
  applications_none?: ApplicationWhereInput | null
  AND?: ProcessingActivityWhereInput[]
  OR?: ProcessingActivityWhereInput[]
  NOT?: ProcessingActivityWhereInput[]
}
export type ProcessingActivityWhereInputInputObject =
  | Extract<keyof ProcessingActivityWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'purpose', alias?: string  } 
  | { name: 'purpose_not', alias?: string  } 
  | { name: 'purpose_in', alias?: string  } 
  | { name: 'purpose_not_in', alias?: string  } 
  | { name: 'purpose_lt', alias?: string  } 
  | { name: 'purpose_lte', alias?: string  } 
  | { name: 'purpose_gt', alias?: string  } 
  | { name: 'purpose_gte', alias?: string  } 
  | { name: 'purpose_contains', alias?: string  } 
  | { name: 'purpose_not_contains', alias?: string  } 
  | { name: 'purpose_starts_with', alias?: string  } 
  | { name: 'purpose_not_starts_with', alias?: string  } 
  | { name: 'purpose_ends_with', alias?: string  } 
  | { name: 'purpose_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'process', alias?: string  } 
  | { name: 'applications_every', alias?: string  } 
  | { name: 'applications_some', alias?: string  } 
  | { name: 'applications_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ApplicationWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  processingActivities_every?: ProcessingActivityWhereInput | null
  processingActivities_some?: ProcessingActivityWhereInput | null
  processingActivities_none?: ProcessingActivityWhereInput | null
  dataTypes_every?: DataTypeWhereInput | null
  dataTypes_some?: DataTypeWhereInput | null
  dataTypes_none?: DataTypeWhereInput | null
  businessOwner?: BusinessRoleWhereInput | null
  itOwner?: BusinessRoleWhereInput | null
  securityAdministrator?: BusinessRoleWhereInput | null
  AND?: ApplicationWhereInput[]
  OR?: ApplicationWhereInput[]
  NOT?: ApplicationWhereInput[]
}
export type ApplicationWhereInputInputObject =
  | Extract<keyof ApplicationWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'processingActivities_every', alias?: string  } 
  | { name: 'processingActivities_some', alias?: string  } 
  | { name: 'processingActivities_none', alias?: string  } 
  | { name: 'dataTypes_every', alias?: string  } 
  | { name: 'dataTypes_some', alias?: string  } 
  | { name: 'dataTypes_none', alias?: string  } 
  | { name: 'businessOwner', alias?: string  } 
  | { name: 'itOwner', alias?: string  } 
  | { name: 'securityAdministrator', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DataTypeWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  application_every?: ApplicationWhereInput | null
  application_some?: ApplicationWhereInput | null
  application_none?: ApplicationWhereInput | null
  classificationLabels_every?: ClassificationLabelWhereInput | null
  classificationLabels_some?: ClassificationLabelWhereInput | null
  classificationLabels_none?: ClassificationLabelWhereInput | null
  AND?: DataTypeWhereInput[]
  OR?: DataTypeWhereInput[]
  NOT?: DataTypeWhereInput[]
}
export type DataTypeWhereInputInputObject =
  | Extract<keyof DataTypeWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'application_every', alias?: string  } 
  | { name: 'application_some', alias?: string  } 
  | { name: 'application_none', alias?: string  } 
  | { name: 'classificationLabels_every', alias?: string  } 
  | { name: 'classificationLabels_some', alias?: string  } 
  | { name: 'classificationLabels_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ClassificationLabelWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  score?: number | null
  score_not?: number | null
  score_in?: number[]
  score_not_in?: number[]
  score_lt?: number | null
  score_lte?: number | null
  score_gt?: number | null
  score_gte?: number | null
  label?: string | null
  label_not?: string | null
  label_in?: string[]
  label_not_in?: string[]
  label_lt?: string | null
  label_lte?: string | null
  label_gt?: string | null
  label_gte?: string | null
  label_contains?: string | null
  label_not_contains?: string | null
  label_starts_with?: string | null
  label_not_starts_with?: string | null
  label_ends_with?: string | null
  label_not_ends_with?: string | null
  criteria?: string | null
  criteria_not?: string | null
  criteria_in?: string[]
  criteria_not_in?: string[]
  criteria_lt?: string | null
  criteria_lte?: string | null
  criteria_gt?: string | null
  criteria_gte?: string | null
  criteria_contains?: string | null
  criteria_not_contains?: string | null
  criteria_starts_with?: string | null
  criteria_not_starts_with?: string | null
  criteria_ends_with?: string | null
  criteria_not_ends_with?: string | null
  qualityAttribute?: QualityAttributeWhereInput | null
  dataType_every?: DataTypeWhereInput | null
  dataType_some?: DataTypeWhereInput | null
  dataType_none?: DataTypeWhereInput | null
  AND?: ClassificationLabelWhereInput[]
  OR?: ClassificationLabelWhereInput[]
  NOT?: ClassificationLabelWhereInput[]
}
export type ClassificationLabelWhereInputInputObject =
  | Extract<keyof ClassificationLabelWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'score', alias?: string  } 
  | { name: 'score_not', alias?: string  } 
  | { name: 'score_in', alias?: string  } 
  | { name: 'score_not_in', alias?: string  } 
  | { name: 'score_lt', alias?: string  } 
  | { name: 'score_lte', alias?: string  } 
  | { name: 'score_gt', alias?: string  } 
  | { name: 'score_gte', alias?: string  } 
  | { name: 'label', alias?: string  } 
  | { name: 'label_not', alias?: string  } 
  | { name: 'label_in', alias?: string  } 
  | { name: 'label_not_in', alias?: string  } 
  | { name: 'label_lt', alias?: string  } 
  | { name: 'label_lte', alias?: string  } 
  | { name: 'label_gt', alias?: string  } 
  | { name: 'label_gte', alias?: string  } 
  | { name: 'label_contains', alias?: string  } 
  | { name: 'label_not_contains', alias?: string  } 
  | { name: 'label_starts_with', alias?: string  } 
  | { name: 'label_not_starts_with', alias?: string  } 
  | { name: 'label_ends_with', alias?: string  } 
  | { name: 'label_not_ends_with', alias?: string  } 
  | { name: 'criteria', alias?: string  } 
  | { name: 'criteria_not', alias?: string  } 
  | { name: 'criteria_in', alias?: string  } 
  | { name: 'criteria_not_in', alias?: string  } 
  | { name: 'criteria_lt', alias?: string  } 
  | { name: 'criteria_lte', alias?: string  } 
  | { name: 'criteria_gt', alias?: string  } 
  | { name: 'criteria_gte', alias?: string  } 
  | { name: 'criteria_contains', alias?: string  } 
  | { name: 'criteria_not_contains', alias?: string  } 
  | { name: 'criteria_starts_with', alias?: string  } 
  | { name: 'criteria_not_starts_with', alias?: string  } 
  | { name: 'criteria_ends_with', alias?: string  } 
  | { name: 'criteria_not_ends_with', alias?: string  } 
  | { name: 'qualityAttribute', alias?: string  } 
  | { name: 'dataType_every', alias?: string  } 
  | { name: 'dataType_some', alias?: string  } 
  | { name: 'dataType_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface QualityAttributeWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  appliesToObject?: prisma.CLASSIFICATIONOBJECT | null
  appliesToObject_not?: prisma.CLASSIFICATIONOBJECT | null
  appliesToObject_in?: prisma.CLASSIFICATIONOBJECT[]
  appliesToObject_not_in?: prisma.CLASSIFICATIONOBJECT[]
  classificationLabels_every?: ClassificationLabelWhereInput | null
  classificationLabels_some?: ClassificationLabelWhereInput | null
  classificationLabels_none?: ClassificationLabelWhereInput | null
  AND?: QualityAttributeWhereInput[]
  OR?: QualityAttributeWhereInput[]
  NOT?: QualityAttributeWhereInput[]
}
export type QualityAttributeWhereInputInputObject =
  | Extract<keyof QualityAttributeWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'appliesToObject', alias?: string  } 
  | { name: 'appliesToObject_not', alias?: string  } 
  | { name: 'appliesToObject_in', alias?: string  } 
  | { name: 'appliesToObject_not_in', alias?: string  } 
  | { name: 'classificationLabels_every', alias?: string  } 
  | { name: 'classificationLabels_some', alias?: string  } 
  | { name: 'classificationLabels_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrganizationalUnitTypeWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  reportingUnit?: boolean | null
  reportingUnit_not?: boolean | null
  organizationalUnit_every?: OrganizationalUnitWhereInput | null
  organizationalUnit_some?: OrganizationalUnitWhereInput | null
  organizationalUnit_none?: OrganizationalUnitWhereInput | null
  AND?: OrganizationalUnitTypeWhereInput[]
  OR?: OrganizationalUnitTypeWhereInput[]
  NOT?: OrganizationalUnitTypeWhereInput[]
}
export type OrganizationalUnitTypeWhereInputInputObject =
  | Extract<keyof OrganizationalUnitTypeWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'reportingUnit', alias?: string  } 
  | { name: 'reportingUnit_not', alias?: string  } 
  | { name: 'organizationalUnit_every', alias?: string  } 
  | { name: 'organizationalUnit_some', alias?: string  } 
  | { name: 'organizationalUnit_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PersonWhereUniqueInput {
  id?: string | null
}
export type PersonWhereUniqueInputInputObject =
  | Extract<keyof PersonWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface BusinessRoleWhereUniqueInput {
  id?: string | null
}
export type BusinessRoleWhereUniqueInputInputObject =
  | Extract<keyof BusinessRoleWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface OrganizationalUnitWhereUniqueInput {
  id?: string | null
}
export type OrganizationalUnitWhereUniqueInputInputObject =
  | Extract<keyof OrganizationalUnitWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface OrganizationalUnitTypeWhereUniqueInput {
  id?: string | null
}
export type OrganizationalUnitTypeWhereUniqueInputInputObject =
  | Extract<keyof OrganizationalUnitTypeWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface ProcessWhereUniqueInput {
  id?: string | null
}
export type ProcessWhereUniqueInputInputObject =
  | Extract<keyof ProcessWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface ProcessingActivityWhereUniqueInput {
  id?: string | null
}
export type ProcessingActivityWhereUniqueInputInputObject =
  | Extract<keyof ProcessingActivityWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface ApplicationWhereUniqueInput {
  id?: string | null
}
export type ApplicationWhereUniqueInputInputObject =
  | Extract<keyof ApplicationWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface DataTypeWhereUniqueInput {
  id?: string | null
}
export type DataTypeWhereUniqueInputInputObject =
  | Extract<keyof DataTypeWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface QualityAttributeWhereUniqueInput {
  id?: string | null
}
export type QualityAttributeWhereUniqueInputInputObject =
  | Extract<keyof QualityAttributeWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface ClassificationLabelWhereUniqueInput {
  id?: string | null
}
export type ClassificationLabelWhereUniqueInputInputObject =
  | Extract<keyof ClassificationLabelWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface OrganizationWhereUniqueInput {
  id?: string | null
}
export type OrganizationWhereUniqueInputInputObject =
  | Extract<keyof OrganizationWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface OrganizationWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  contactDetails?: string | null
  contactDetails_not?: string | null
  contactDetails_in?: string[]
  contactDetails_not_in?: string[]
  contactDetails_lt?: string | null
  contactDetails_lte?: string | null
  contactDetails_gt?: string | null
  contactDetails_gte?: string | null
  contactDetails_contains?: string | null
  contactDetails_not_contains?: string | null
  contactDetails_starts_with?: string | null
  contactDetails_not_starts_with?: string | null
  contactDetails_ends_with?: string | null
  contactDetails_not_ends_with?: string | null
  dpo?: string | null
  dpo_not?: string | null
  dpo_in?: string[]
  dpo_not_in?: string[]
  dpo_lt?: string | null
  dpo_lte?: string | null
  dpo_gt?: string | null
  dpo_gte?: string | null
  dpo_contains?: string | null
  dpo_not_contains?: string | null
  dpo_starts_with?: string | null
  dpo_not_starts_with?: string | null
  dpo_ends_with?: string | null
  dpo_not_ends_with?: string | null
  representative?: string | null
  representative_not?: string | null
  representative_in?: string[]
  representative_not_in?: string[]
  representative_lt?: string | null
  representative_lte?: string | null
  representative_gt?: string | null
  representative_gte?: string | null
  representative_contains?: string | null
  representative_not_contains?: string | null
  representative_starts_with?: string | null
  representative_not_starts_with?: string | null
  representative_ends_with?: string | null
  representative_not_ends_with?: string | null
  headOffice?: LocationWhereInput | null
  AND?: OrganizationWhereInput[]
  OR?: OrganizationWhereInput[]
  NOT?: OrganizationWhereInput[]
}
export type OrganizationWhereInputInputObject =
  | Extract<keyof OrganizationWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'contactDetails', alias?: string  } 
  | { name: 'contactDetails_not', alias?: string  } 
  | { name: 'contactDetails_in', alias?: string  } 
  | { name: 'contactDetails_not_in', alias?: string  } 
  | { name: 'contactDetails_lt', alias?: string  } 
  | { name: 'contactDetails_lte', alias?: string  } 
  | { name: 'contactDetails_gt', alias?: string  } 
  | { name: 'contactDetails_gte', alias?: string  } 
  | { name: 'contactDetails_contains', alias?: string  } 
  | { name: 'contactDetails_not_contains', alias?: string  } 
  | { name: 'contactDetails_starts_with', alias?: string  } 
  | { name: 'contactDetails_not_starts_with', alias?: string  } 
  | { name: 'contactDetails_ends_with', alias?: string  } 
  | { name: 'contactDetails_not_ends_with', alias?: string  } 
  | { name: 'dpo', alias?: string  } 
  | { name: 'dpo_not', alias?: string  } 
  | { name: 'dpo_in', alias?: string  } 
  | { name: 'dpo_not_in', alias?: string  } 
  | { name: 'dpo_lt', alias?: string  } 
  | { name: 'dpo_lte', alias?: string  } 
  | { name: 'dpo_gt', alias?: string  } 
  | { name: 'dpo_gte', alias?: string  } 
  | { name: 'dpo_contains', alias?: string  } 
  | { name: 'dpo_not_contains', alias?: string  } 
  | { name: 'dpo_starts_with', alias?: string  } 
  | { name: 'dpo_not_starts_with', alias?: string  } 
  | { name: 'dpo_ends_with', alias?: string  } 
  | { name: 'dpo_not_ends_with', alias?: string  } 
  | { name: 'representative', alias?: string  } 
  | { name: 'representative_not', alias?: string  } 
  | { name: 'representative_in', alias?: string  } 
  | { name: 'representative_not_in', alias?: string  } 
  | { name: 'representative_lt', alias?: string  } 
  | { name: 'representative_lte', alias?: string  } 
  | { name: 'representative_gt', alias?: string  } 
  | { name: 'representative_gte', alias?: string  } 
  | { name: 'representative_contains', alias?: string  } 
  | { name: 'representative_not_contains', alias?: string  } 
  | { name: 'representative_starts_with', alias?: string  } 
  | { name: 'representative_not_starts_with', alias?: string  } 
  | { name: 'representative_ends_with', alias?: string  } 
  | { name: 'representative_not_ends_with', alias?: string  } 
  | { name: 'headOffice', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface LocationWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  address?: string | null
  address_not?: string | null
  address_in?: string[]
  address_not_in?: string[]
  address_lt?: string | null
  address_lte?: string | null
  address_gt?: string | null
  address_gte?: string | null
  address_contains?: string | null
  address_not_contains?: string | null
  address_starts_with?: string | null
  address_not_starts_with?: string | null
  address_ends_with?: string | null
  address_not_ends_with?: string | null
  organization?: OrganizationWhereInput | null
  AND?: LocationWhereInput[]
  OR?: LocationWhereInput[]
  NOT?: LocationWhereInput[]
}
export type LocationWhereInputInputObject =
  | Extract<keyof LocationWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'address_not', alias?: string  } 
  | { name: 'address_in', alias?: string  } 
  | { name: 'address_not_in', alias?: string  } 
  | { name: 'address_lt', alias?: string  } 
  | { name: 'address_lte', alias?: string  } 
  | { name: 'address_gt', alias?: string  } 
  | { name: 'address_gte', alias?: string  } 
  | { name: 'address_contains', alias?: string  } 
  | { name: 'address_not_contains', alias?: string  } 
  | { name: 'address_starts_with', alias?: string  } 
  | { name: 'address_not_starts_with', alias?: string  } 
  | { name: 'address_ends_with', alias?: string  } 
  | { name: 'address_not_ends_with', alias?: string  } 
  | { name: 'organization', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface LocationWhereUniqueInput {
  id?: string | null
}
export type LocationWhereUniqueInputInputObject =
  | Extract<keyof LocationWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface UserCreateInput {
  id?: string | null
  email?: string
  password?: string
  active?: boolean | null
  specialPermissions?: UserCreatespecialPermissionsInput | null
  person?: PersonCreateOneWithoutUserInput | null
}
export type UserCreateInputInputObject =
  | Extract<keyof UserCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'active', alias?: string  } 
  | { name: 'specialPermissions', alias?: string  } 
  | { name: 'person', alias?: string  } 
  
export interface UserCreatespecialPermissionsInput {
  set?: prisma.PERMISSION[]
}
export type UserCreatespecialPermissionsInputInputObject =
  | Extract<keyof UserCreatespecialPermissionsInput, string>
  | { name: 'set', alias?: string  } 
  
export interface PersonCreateOneWithoutUserInput {
  create?: PersonCreateWithoutUserInput | null
  connect?: PersonWhereUniqueInput | null
}
export type PersonCreateOneWithoutUserInputInputObject =
  | Extract<keyof PersonCreateOneWithoutUserInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PersonCreateWithoutUserInput {
  id?: string | null
  name?: string
  surname?: string | null
  roles?: BusinessRoleCreateManyWithoutPersonInput | null
}
export type PersonCreateWithoutUserInputInputObject =
  | Extract<keyof PersonCreateWithoutUserInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'surname', alias?: string  } 
  | { name: 'roles', alias?: string  } 
  
export interface BusinessRoleCreateManyWithoutPersonInput {
  create?: BusinessRoleCreateWithoutPersonInput[]
  connect?: BusinessRoleWhereUniqueInput[]
}
export type BusinessRoleCreateManyWithoutPersonInputInputObject =
  | Extract<keyof BusinessRoleCreateManyWithoutPersonInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BusinessRoleCreateWithoutPersonInput {
  id?: string | null
  name?: string
  description?: string | null
  raciPrivacy?: prisma.RACI | null
  raciSecurity?: prisma.RACI | null
  raciFinancial?: prisma.RACI | null
  raciExecutive?: prisma.RACI | null
  organizationalUnit?: OrganizationalUnitCreateOneWithoutBusinessRolesInput
  process?: ProcessCreateManyWithoutProcessOwnerInput | null
  appBusinessOwner?: ApplicationCreateManyWithoutBusinessOwnerInput | null
  appItOwner?: ApplicationCreateManyWithoutItOwnerInput | null
  appSecAdmin?: ApplicationCreateManyWithoutSecurityAdministratorInput | null
}
export type BusinessRoleCreateWithoutPersonInputInputObject =
  | Extract<keyof BusinessRoleCreateWithoutPersonInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'raciPrivacy', alias?: string  } 
  | { name: 'raciSecurity', alias?: string  } 
  | { name: 'raciFinancial', alias?: string  } 
  | { name: 'raciExecutive', alias?: string  } 
  | { name: 'organizationalUnit', alias?: string  } 
  | { name: 'process', alias?: string  } 
  | { name: 'appBusinessOwner', alias?: string  } 
  | { name: 'appItOwner', alias?: string  } 
  | { name: 'appSecAdmin', alias?: string  } 
  
export interface OrganizationalUnitCreateOneWithoutBusinessRolesInput {
  create?: OrganizationalUnitCreateWithoutBusinessRolesInput | null
  connect?: OrganizationalUnitWhereUniqueInput | null
}
export type OrganizationalUnitCreateOneWithoutBusinessRolesInputInputObject =
  | Extract<keyof OrganizationalUnitCreateOneWithoutBusinessRolesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrganizationalUnitCreateWithoutBusinessRolesInput {
  id?: string | null
  name?: string
  description?: string | null
  children?: OrganizationalUnitCreateManyWithoutParentInput | null
  parent?: OrganizationalUnitCreateOneWithoutChildrenInput | null
  processes?: ProcessCreateManyWithoutOrganizationalUnitInput | null
  organizationalUnitType?: OrganizationalUnitTypeCreateOneWithoutOrganizationalUnitInput | null
}
export type OrganizationalUnitCreateWithoutBusinessRolesInputInputObject =
  | Extract<keyof OrganizationalUnitCreateWithoutBusinessRolesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'children', alias?: string  } 
  | { name: 'parent', alias?: string  } 
  | { name: 'processes', alias?: string  } 
  | { name: 'organizationalUnitType', alias?: string  } 
  
export interface OrganizationalUnitCreateManyWithoutParentInput {
  create?: OrganizationalUnitCreateWithoutParentInput[]
  connect?: OrganizationalUnitWhereUniqueInput[]
}
export type OrganizationalUnitCreateManyWithoutParentInputInputObject =
  | Extract<keyof OrganizationalUnitCreateManyWithoutParentInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrganizationalUnitCreateWithoutParentInput {
  id?: string | null
  name?: string
  description?: string | null
  children?: OrganizationalUnitCreateManyWithoutParentInput | null
  processes?: ProcessCreateManyWithoutOrganizationalUnitInput | null
  businessRoles?: BusinessRoleCreateManyWithoutOrganizationalUnitInput | null
  organizationalUnitType?: OrganizationalUnitTypeCreateOneWithoutOrganizationalUnitInput | null
}
export type OrganizationalUnitCreateWithoutParentInputInputObject =
  | Extract<keyof OrganizationalUnitCreateWithoutParentInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'children', alias?: string  } 
  | { name: 'processes', alias?: string  } 
  | { name: 'businessRoles', alias?: string  } 
  | { name: 'organizationalUnitType', alias?: string  } 
  
export interface ProcessCreateManyWithoutOrganizationalUnitInput {
  create?: ProcessCreateWithoutOrganizationalUnitInput[]
  connect?: ProcessWhereUniqueInput[]
}
export type ProcessCreateManyWithoutOrganizationalUnitInputInputObject =
  | Extract<keyof ProcessCreateManyWithoutOrganizationalUnitInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProcessCreateWithoutOrganizationalUnitInput {
  id?: string | null
  name?: string
  description?: string | null
  processingActivities?: ProcessingActivityCreateManyWithoutProcessInput | null
  processOwner?: BusinessRoleCreateOneWithoutProcessInput | null
}
export type ProcessCreateWithoutOrganizationalUnitInputInputObject =
  | Extract<keyof ProcessCreateWithoutOrganizationalUnitInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'processingActivities', alias?: string  } 
  | { name: 'processOwner', alias?: string  } 
  
export interface ProcessingActivityCreateManyWithoutProcessInput {
  create?: ProcessingActivityCreateWithoutProcessInput[]
  connect?: ProcessingActivityWhereUniqueInput[]
}
export type ProcessingActivityCreateManyWithoutProcessInputInputObject =
  | Extract<keyof ProcessingActivityCreateManyWithoutProcessInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProcessingActivityCreateWithoutProcessInput {
  id?: string | null
  name?: string
  description?: string | null
  purpose?: string | null
  applications?: ApplicationCreateManyWithoutProcessingActivitiesInput | null
}
export type ProcessingActivityCreateWithoutProcessInputInputObject =
  | Extract<keyof ProcessingActivityCreateWithoutProcessInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'purpose', alias?: string  } 
  | { name: 'applications', alias?: string  } 
  
export interface ApplicationCreateManyWithoutProcessingActivitiesInput {
  create?: ApplicationCreateWithoutProcessingActivitiesInput[]
  connect?: ApplicationWhereUniqueInput[]
}
export type ApplicationCreateManyWithoutProcessingActivitiesInputInputObject =
  | Extract<keyof ApplicationCreateManyWithoutProcessingActivitiesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ApplicationCreateWithoutProcessingActivitiesInput {
  id?: string | null
  name?: string
  alias?: undefined | null
  description?: string | null
  dataTypes?: DataTypeCreateManyWithoutApplicationInput | null
  businessOwner?: BusinessRoleCreateOneWithoutAppBusinessOwnerInput | null
  itOwner?: BusinessRoleCreateOneWithoutAppItOwnerInput | null
  securityAdministrator?: BusinessRoleCreateOneWithoutAppSecAdminInput | null
}
export type ApplicationCreateWithoutProcessingActivitiesInputInputObject =
  | Extract<keyof ApplicationCreateWithoutProcessingActivitiesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'alias', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'dataTypes', alias?: string  } 
  | { name: 'businessOwner', alias?: string  } 
  | { name: 'itOwner', alias?: string  } 
  | { name: 'securityAdministrator', alias?: string  } 
  
export interface DataTypeCreateManyWithoutApplicationInput {
  create?: DataTypeCreateWithoutApplicationInput[]
  connect?: DataTypeWhereUniqueInput[]
}
export type DataTypeCreateManyWithoutApplicationInputInputObject =
  | Extract<keyof DataTypeCreateManyWithoutApplicationInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface DataTypeCreateWithoutApplicationInput {
  id?: string | null
  name?: string
  description?: string | null
  classificationLabels?: ClassificationLabelCreateManyWithoutDataTypeInput | null
}
export type DataTypeCreateWithoutApplicationInputInputObject =
  | Extract<keyof DataTypeCreateWithoutApplicationInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'classificationLabels', alias?: string  } 
  
export interface ClassificationLabelCreateManyWithoutDataTypeInput {
  create?: ClassificationLabelCreateWithoutDataTypeInput[]
  connect?: ClassificationLabelWhereUniqueInput[]
}
export type ClassificationLabelCreateManyWithoutDataTypeInputInputObject =
  | Extract<keyof ClassificationLabelCreateManyWithoutDataTypeInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ClassificationLabelCreateWithoutDataTypeInput {
  id?: string | null
  score?: number
  label?: string
  criteria?: string | null
  qualityAttribute?: QualityAttributeCreateOneWithoutClassificationLabelsInput | null
}
export type ClassificationLabelCreateWithoutDataTypeInputInputObject =
  | Extract<keyof ClassificationLabelCreateWithoutDataTypeInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'score', alias?: string  } 
  | { name: 'label', alias?: string  } 
  | { name: 'criteria', alias?: string  } 
  | { name: 'qualityAttribute', alias?: string  } 
  
export interface QualityAttributeCreateOneWithoutClassificationLabelsInput {
  create?: QualityAttributeCreateWithoutClassificationLabelsInput | null
  connect?: QualityAttributeWhereUniqueInput | null
}
export type QualityAttributeCreateOneWithoutClassificationLabelsInputInputObject =
  | Extract<keyof QualityAttributeCreateOneWithoutClassificationLabelsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface QualityAttributeCreateWithoutClassificationLabelsInput {
  id?: string | null
  name?: string
  description?: string | null
  appliesToObject?: prisma.CLASSIFICATIONOBJECT
}
export type QualityAttributeCreateWithoutClassificationLabelsInputInputObject =
  | Extract<keyof QualityAttributeCreateWithoutClassificationLabelsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'appliesToObject', alias?: string  } 
  
export interface BusinessRoleCreateOneWithoutAppBusinessOwnerInput {
  create?: BusinessRoleCreateWithoutAppBusinessOwnerInput | null
  connect?: BusinessRoleWhereUniqueInput | null
}
export type BusinessRoleCreateOneWithoutAppBusinessOwnerInputInputObject =
  | Extract<keyof BusinessRoleCreateOneWithoutAppBusinessOwnerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BusinessRoleCreateWithoutAppBusinessOwnerInput {
  id?: string | null
  name?: string
  description?: string | null
  raciPrivacy?: prisma.RACI | null
  raciSecurity?: prisma.RACI | null
  raciFinancial?: prisma.RACI | null
  raciExecutive?: prisma.RACI | null
  person?: PersonCreateOneWithoutRolesInput | null
  organizationalUnit?: OrganizationalUnitCreateOneWithoutBusinessRolesInput
  process?: ProcessCreateManyWithoutProcessOwnerInput | null
  appItOwner?: ApplicationCreateManyWithoutItOwnerInput | null
  appSecAdmin?: ApplicationCreateManyWithoutSecurityAdministratorInput | null
}
export type BusinessRoleCreateWithoutAppBusinessOwnerInputInputObject =
  | Extract<keyof BusinessRoleCreateWithoutAppBusinessOwnerInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'raciPrivacy', alias?: string  } 
  | { name: 'raciSecurity', alias?: string  } 
  | { name: 'raciFinancial', alias?: string  } 
  | { name: 'raciExecutive', alias?: string  } 
  | { name: 'person', alias?: string  } 
  | { name: 'organizationalUnit', alias?: string  } 
  | { name: 'process', alias?: string  } 
  | { name: 'appItOwner', alias?: string  } 
  | { name: 'appSecAdmin', alias?: string  } 
  
export interface PersonCreateOneWithoutRolesInput {
  create?: PersonCreateWithoutRolesInput | null
  connect?: PersonWhereUniqueInput | null
}
export type PersonCreateOneWithoutRolesInputInputObject =
  | Extract<keyof PersonCreateOneWithoutRolesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PersonCreateWithoutRolesInput {
  id?: string | null
  name?: string
  surname?: string | null
  user?: UserCreateOneWithoutPersonInput | null
}
export type PersonCreateWithoutRolesInputInputObject =
  | Extract<keyof PersonCreateWithoutRolesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'surname', alias?: string  } 
  | { name: 'user', alias?: string  } 
  
export interface UserCreateOneWithoutPersonInput {
  create?: UserCreateWithoutPersonInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutPersonInputInputObject =
  | Extract<keyof UserCreateOneWithoutPersonInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutPersonInput {
  id?: string | null
  email?: string
  password?: string
  active?: boolean | null
  specialPermissions?: UserCreatespecialPermissionsInput | null
}
export type UserCreateWithoutPersonInputInputObject =
  | Extract<keyof UserCreateWithoutPersonInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'active', alias?: string  } 
  | { name: 'specialPermissions', alias?: string  } 
  
export interface ProcessCreateManyWithoutProcessOwnerInput {
  create?: ProcessCreateWithoutProcessOwnerInput[]
  connect?: ProcessWhereUniqueInput[]
}
export type ProcessCreateManyWithoutProcessOwnerInputInputObject =
  | Extract<keyof ProcessCreateManyWithoutProcessOwnerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProcessCreateWithoutProcessOwnerInput {
  id?: string | null
  name?: string
  description?: string | null
  organizationalUnit?: OrganizationalUnitCreateOneWithoutProcessesInput | null
  processingActivities?: ProcessingActivityCreateManyWithoutProcessInput | null
}
export type ProcessCreateWithoutProcessOwnerInputInputObject =
  | Extract<keyof ProcessCreateWithoutProcessOwnerInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'organizationalUnit', alias?: string  } 
  | { name: 'processingActivities', alias?: string  } 
  
export interface OrganizationalUnitCreateOneWithoutProcessesInput {
  create?: OrganizationalUnitCreateWithoutProcessesInput | null
  connect?: OrganizationalUnitWhereUniqueInput | null
}
export type OrganizationalUnitCreateOneWithoutProcessesInputInputObject =
  | Extract<keyof OrganizationalUnitCreateOneWithoutProcessesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrganizationalUnitCreateWithoutProcessesInput {
  id?: string | null
  name?: string
  description?: string | null
  children?: OrganizationalUnitCreateManyWithoutParentInput | null
  parent?: OrganizationalUnitCreateOneWithoutChildrenInput | null
  businessRoles?: BusinessRoleCreateManyWithoutOrganizationalUnitInput | null
  organizationalUnitType?: OrganizationalUnitTypeCreateOneWithoutOrganizationalUnitInput | null
}
export type OrganizationalUnitCreateWithoutProcessesInputInputObject =
  | Extract<keyof OrganizationalUnitCreateWithoutProcessesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'children', alias?: string  } 
  | { name: 'parent', alias?: string  } 
  | { name: 'businessRoles', alias?: string  } 
  | { name: 'organizationalUnitType', alias?: string  } 
  
export interface OrganizationalUnitCreateOneWithoutChildrenInput {
  create?: OrganizationalUnitCreateWithoutChildrenInput | null
  connect?: OrganizationalUnitWhereUniqueInput | null
}
export type OrganizationalUnitCreateOneWithoutChildrenInputInputObject =
  | Extract<keyof OrganizationalUnitCreateOneWithoutChildrenInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrganizationalUnitCreateWithoutChildrenInput {
  id?: string | null
  name?: string
  description?: string | null
  parent?: OrganizationalUnitCreateOneWithoutChildrenInput | null
  processes?: ProcessCreateManyWithoutOrganizationalUnitInput | null
  businessRoles?: BusinessRoleCreateManyWithoutOrganizationalUnitInput | null
  organizationalUnitType?: OrganizationalUnitTypeCreateOneWithoutOrganizationalUnitInput | null
}
export type OrganizationalUnitCreateWithoutChildrenInputInputObject =
  | Extract<keyof OrganizationalUnitCreateWithoutChildrenInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'parent', alias?: string  } 
  | { name: 'processes', alias?: string  } 
  | { name: 'businessRoles', alias?: string  } 
  | { name: 'organizationalUnitType', alias?: string  } 
  
export interface BusinessRoleCreateManyWithoutOrganizationalUnitInput {
  create?: BusinessRoleCreateWithoutOrganizationalUnitInput[]
  connect?: BusinessRoleWhereUniqueInput[]
}
export type BusinessRoleCreateManyWithoutOrganizationalUnitInputInputObject =
  | Extract<keyof BusinessRoleCreateManyWithoutOrganizationalUnitInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BusinessRoleCreateWithoutOrganizationalUnitInput {
  id?: string | null
  name?: string
  description?: string | null
  raciPrivacy?: prisma.RACI | null
  raciSecurity?: prisma.RACI | null
  raciFinancial?: prisma.RACI | null
  raciExecutive?: prisma.RACI | null
  person?: PersonCreateOneWithoutRolesInput | null
  process?: ProcessCreateManyWithoutProcessOwnerInput | null
  appBusinessOwner?: ApplicationCreateManyWithoutBusinessOwnerInput | null
  appItOwner?: ApplicationCreateManyWithoutItOwnerInput | null
  appSecAdmin?: ApplicationCreateManyWithoutSecurityAdministratorInput | null
}
export type BusinessRoleCreateWithoutOrganizationalUnitInputInputObject =
  | Extract<keyof BusinessRoleCreateWithoutOrganizationalUnitInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'raciPrivacy', alias?: string  } 
  | { name: 'raciSecurity', alias?: string  } 
  | { name: 'raciFinancial', alias?: string  } 
  | { name: 'raciExecutive', alias?: string  } 
  | { name: 'person', alias?: string  } 
  | { name: 'process', alias?: string  } 
  | { name: 'appBusinessOwner', alias?: string  } 
  | { name: 'appItOwner', alias?: string  } 
  | { name: 'appSecAdmin', alias?: string  } 
  
export interface ApplicationCreateManyWithoutBusinessOwnerInput {
  create?: ApplicationCreateWithoutBusinessOwnerInput[]
  connect?: ApplicationWhereUniqueInput[]
}
export type ApplicationCreateManyWithoutBusinessOwnerInputInputObject =
  | Extract<keyof ApplicationCreateManyWithoutBusinessOwnerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ApplicationCreateWithoutBusinessOwnerInput {
  id?: string | null
  name?: string
  alias?: undefined | null
  description?: string | null
  processingActivities?: ProcessingActivityCreateManyWithoutApplicationsInput | null
  dataTypes?: DataTypeCreateManyWithoutApplicationInput | null
  itOwner?: BusinessRoleCreateOneWithoutAppItOwnerInput | null
  securityAdministrator?: BusinessRoleCreateOneWithoutAppSecAdminInput | null
}
export type ApplicationCreateWithoutBusinessOwnerInputInputObject =
  | Extract<keyof ApplicationCreateWithoutBusinessOwnerInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'alias', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'processingActivities', alias?: string  } 
  | { name: 'dataTypes', alias?: string  } 
  | { name: 'itOwner', alias?: string  } 
  | { name: 'securityAdministrator', alias?: string  } 
  
export interface ProcessingActivityCreateManyWithoutApplicationsInput {
  create?: ProcessingActivityCreateWithoutApplicationsInput[]
  connect?: ProcessingActivityWhereUniqueInput[]
}
export type ProcessingActivityCreateManyWithoutApplicationsInputInputObject =
  | Extract<keyof ProcessingActivityCreateManyWithoutApplicationsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProcessingActivityCreateWithoutApplicationsInput {
  id?: string | null
  name?: string
  description?: string | null
  purpose?: string | null
  process?: ProcessCreateOneWithoutProcessingActivitiesInput | null
}
export type ProcessingActivityCreateWithoutApplicationsInputInputObject =
  | Extract<keyof ProcessingActivityCreateWithoutApplicationsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'purpose', alias?: string  } 
  | { name: 'process', alias?: string  } 
  
export interface ProcessCreateOneWithoutProcessingActivitiesInput {
  create?: ProcessCreateWithoutProcessingActivitiesInput | null
  connect?: ProcessWhereUniqueInput | null
}
export type ProcessCreateOneWithoutProcessingActivitiesInputInputObject =
  | Extract<keyof ProcessCreateOneWithoutProcessingActivitiesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProcessCreateWithoutProcessingActivitiesInput {
  id?: string | null
  name?: string
  description?: string | null
  organizationalUnit?: OrganizationalUnitCreateOneWithoutProcessesInput | null
  processOwner?: BusinessRoleCreateOneWithoutProcessInput | null
}
export type ProcessCreateWithoutProcessingActivitiesInputInputObject =
  | Extract<keyof ProcessCreateWithoutProcessingActivitiesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'organizationalUnit', alias?: string  } 
  | { name: 'processOwner', alias?: string  } 
  
export interface BusinessRoleCreateOneWithoutProcessInput {
  create?: BusinessRoleCreateWithoutProcessInput | null
  connect?: BusinessRoleWhereUniqueInput | null
}
export type BusinessRoleCreateOneWithoutProcessInputInputObject =
  | Extract<keyof BusinessRoleCreateOneWithoutProcessInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BusinessRoleCreateWithoutProcessInput {
  id?: string | null
  name?: string
  description?: string | null
  raciPrivacy?: prisma.RACI | null
  raciSecurity?: prisma.RACI | null
  raciFinancial?: prisma.RACI | null
  raciExecutive?: prisma.RACI | null
  person?: PersonCreateOneWithoutRolesInput | null
  organizationalUnit?: OrganizationalUnitCreateOneWithoutBusinessRolesInput
  appBusinessOwner?: ApplicationCreateManyWithoutBusinessOwnerInput | null
  appItOwner?: ApplicationCreateManyWithoutItOwnerInput | null
  appSecAdmin?: ApplicationCreateManyWithoutSecurityAdministratorInput | null
}
export type BusinessRoleCreateWithoutProcessInputInputObject =
  | Extract<keyof BusinessRoleCreateWithoutProcessInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'raciPrivacy', alias?: string  } 
  | { name: 'raciSecurity', alias?: string  } 
  | { name: 'raciFinancial', alias?: string  } 
  | { name: 'raciExecutive', alias?: string  } 
  | { name: 'person', alias?: string  } 
  | { name: 'organizationalUnit', alias?: string  } 
  | { name: 'appBusinessOwner', alias?: string  } 
  | { name: 'appItOwner', alias?: string  } 
  | { name: 'appSecAdmin', alias?: string  } 
  
export interface ApplicationCreateManyWithoutItOwnerInput {
  create?: ApplicationCreateWithoutItOwnerInput[]
  connect?: ApplicationWhereUniqueInput[]
}
export type ApplicationCreateManyWithoutItOwnerInputInputObject =
  | Extract<keyof ApplicationCreateManyWithoutItOwnerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ApplicationCreateWithoutItOwnerInput {
  id?: string | null
  name?: string
  alias?: undefined | null
  description?: string | null
  processingActivities?: ProcessingActivityCreateManyWithoutApplicationsInput | null
  dataTypes?: DataTypeCreateManyWithoutApplicationInput | null
  businessOwner?: BusinessRoleCreateOneWithoutAppBusinessOwnerInput | null
  securityAdministrator?: BusinessRoleCreateOneWithoutAppSecAdminInput | null
}
export type ApplicationCreateWithoutItOwnerInputInputObject =
  | Extract<keyof ApplicationCreateWithoutItOwnerInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'alias', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'processingActivities', alias?: string  } 
  | { name: 'dataTypes', alias?: string  } 
  | { name: 'businessOwner', alias?: string  } 
  | { name: 'securityAdministrator', alias?: string  } 
  
export interface BusinessRoleCreateOneWithoutAppSecAdminInput {
  create?: BusinessRoleCreateWithoutAppSecAdminInput | null
  connect?: BusinessRoleWhereUniqueInput | null
}
export type BusinessRoleCreateOneWithoutAppSecAdminInputInputObject =
  | Extract<keyof BusinessRoleCreateOneWithoutAppSecAdminInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BusinessRoleCreateWithoutAppSecAdminInput {
  id?: string | null
  name?: string
  description?: string | null
  raciPrivacy?: prisma.RACI | null
  raciSecurity?: prisma.RACI | null
  raciFinancial?: prisma.RACI | null
  raciExecutive?: prisma.RACI | null
  person?: PersonCreateOneWithoutRolesInput | null
  organizationalUnit?: OrganizationalUnitCreateOneWithoutBusinessRolesInput
  process?: ProcessCreateManyWithoutProcessOwnerInput | null
  appBusinessOwner?: ApplicationCreateManyWithoutBusinessOwnerInput | null
  appItOwner?: ApplicationCreateManyWithoutItOwnerInput | null
}
export type BusinessRoleCreateWithoutAppSecAdminInputInputObject =
  | Extract<keyof BusinessRoleCreateWithoutAppSecAdminInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'raciPrivacy', alias?: string  } 
  | { name: 'raciSecurity', alias?: string  } 
  | { name: 'raciFinancial', alias?: string  } 
  | { name: 'raciExecutive', alias?: string  } 
  | { name: 'person', alias?: string  } 
  | { name: 'organizationalUnit', alias?: string  } 
  | { name: 'process', alias?: string  } 
  | { name: 'appBusinessOwner', alias?: string  } 
  | { name: 'appItOwner', alias?: string  } 
  
export interface ApplicationCreateManyWithoutSecurityAdministratorInput {
  create?: ApplicationCreateWithoutSecurityAdministratorInput[]
  connect?: ApplicationWhereUniqueInput[]
}
export type ApplicationCreateManyWithoutSecurityAdministratorInputInputObject =
  | Extract<keyof ApplicationCreateManyWithoutSecurityAdministratorInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ApplicationCreateWithoutSecurityAdministratorInput {
  id?: string | null
  name?: string
  alias?: undefined | null
  description?: string | null
  processingActivities?: ProcessingActivityCreateManyWithoutApplicationsInput | null
  dataTypes?: DataTypeCreateManyWithoutApplicationInput | null
  businessOwner?: BusinessRoleCreateOneWithoutAppBusinessOwnerInput | null
  itOwner?: BusinessRoleCreateOneWithoutAppItOwnerInput | null
}
export type ApplicationCreateWithoutSecurityAdministratorInputInputObject =
  | Extract<keyof ApplicationCreateWithoutSecurityAdministratorInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'alias', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'processingActivities', alias?: string  } 
  | { name: 'dataTypes', alias?: string  } 
  | { name: 'businessOwner', alias?: string  } 
  | { name: 'itOwner', alias?: string  } 
  
export interface BusinessRoleCreateOneWithoutAppItOwnerInput {
  create?: BusinessRoleCreateWithoutAppItOwnerInput | null
  connect?: BusinessRoleWhereUniqueInput | null
}
export type BusinessRoleCreateOneWithoutAppItOwnerInputInputObject =
  | Extract<keyof BusinessRoleCreateOneWithoutAppItOwnerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BusinessRoleCreateWithoutAppItOwnerInput {
  id?: string | null
  name?: string
  description?: string | null
  raciPrivacy?: prisma.RACI | null
  raciSecurity?: prisma.RACI | null
  raciFinancial?: prisma.RACI | null
  raciExecutive?: prisma.RACI | null
  person?: PersonCreateOneWithoutRolesInput | null
  organizationalUnit?: OrganizationalUnitCreateOneWithoutBusinessRolesInput
  process?: ProcessCreateManyWithoutProcessOwnerInput | null
  appBusinessOwner?: ApplicationCreateManyWithoutBusinessOwnerInput | null
  appSecAdmin?: ApplicationCreateManyWithoutSecurityAdministratorInput | null
}
export type BusinessRoleCreateWithoutAppItOwnerInputInputObject =
  | Extract<keyof BusinessRoleCreateWithoutAppItOwnerInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'raciPrivacy', alias?: string  } 
  | { name: 'raciSecurity', alias?: string  } 
  | { name: 'raciFinancial', alias?: string  } 
  | { name: 'raciExecutive', alias?: string  } 
  | { name: 'person', alias?: string  } 
  | { name: 'organizationalUnit', alias?: string  } 
  | { name: 'process', alias?: string  } 
  | { name: 'appBusinessOwner', alias?: string  } 
  | { name: 'appSecAdmin', alias?: string  } 
  
export interface OrganizationalUnitTypeCreateOneWithoutOrganizationalUnitInput {
  create?: OrganizationalUnitTypeCreateWithoutOrganizationalUnitInput | null
  connect?: OrganizationalUnitTypeWhereUniqueInput | null
}
export type OrganizationalUnitTypeCreateOneWithoutOrganizationalUnitInputInputObject =
  | Extract<keyof OrganizationalUnitTypeCreateOneWithoutOrganizationalUnitInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrganizationalUnitTypeCreateWithoutOrganizationalUnitInput {
  id?: string | null
  name?: string
  description?: string | null
  reportingUnit?: boolean | null
}
export type OrganizationalUnitTypeCreateWithoutOrganizationalUnitInputInputObject =
  | Extract<keyof OrganizationalUnitTypeCreateWithoutOrganizationalUnitInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'reportingUnit', alias?: string  } 
  
export interface UserUpdateInput {
  email?: string | null
  password?: string | null
  active?: boolean | null
  specialPermissions?: UserUpdatespecialPermissionsInput | null
  person?: PersonUpdateOneWithoutUserInput | null
}
export type UserUpdateInputInputObject =
  | Extract<keyof UserUpdateInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'active', alias?: string  } 
  | { name: 'specialPermissions', alias?: string  } 
  | { name: 'person', alias?: string  } 
  
export interface UserUpdatespecialPermissionsInput {
  set?: prisma.PERMISSION[]
}
export type UserUpdatespecialPermissionsInputInputObject =
  | Extract<keyof UserUpdatespecialPermissionsInput, string>
  | { name: 'set', alias?: string  } 
  
export interface PersonUpdateOneWithoutUserInput {
  create?: PersonCreateWithoutUserInput | null
  update?: PersonUpdateWithoutUserDataInput | null
  upsert?: PersonUpsertWithoutUserInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: PersonWhereUniqueInput | null
}
export type PersonUpdateOneWithoutUserInputInputObject =
  | Extract<keyof PersonUpdateOneWithoutUserInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PersonUpdateWithoutUserDataInput {
  name?: string | null
  surname?: string | null
  roles?: BusinessRoleUpdateManyWithoutPersonInput | null
}
export type PersonUpdateWithoutUserDataInputInputObject =
  | Extract<keyof PersonUpdateWithoutUserDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'surname', alias?: string  } 
  | { name: 'roles', alias?: string  } 
  
export interface BusinessRoleUpdateManyWithoutPersonInput {
  create?: BusinessRoleCreateWithoutPersonInput[]
  delete?: BusinessRoleWhereUniqueInput[]
  connect?: BusinessRoleWhereUniqueInput[]
  set?: BusinessRoleWhereUniqueInput[]
  disconnect?: BusinessRoleWhereUniqueInput[]
  update?: BusinessRoleUpdateWithWhereUniqueWithoutPersonInput[]
  upsert?: BusinessRoleUpsertWithWhereUniqueWithoutPersonInput[]
  deleteMany?: BusinessRoleScalarWhereInput[]
  updateMany?: BusinessRoleUpdateManyWithWhereNestedInput[]
}
export type BusinessRoleUpdateManyWithoutPersonInputInputObject =
  | Extract<keyof BusinessRoleUpdateManyWithoutPersonInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface BusinessRoleUpdateWithWhereUniqueWithoutPersonInput {
  where?: BusinessRoleWhereUniqueInput
  data?: BusinessRoleUpdateWithoutPersonDataInput
}
export type BusinessRoleUpdateWithWhereUniqueWithoutPersonInputInputObject =
  | Extract<keyof BusinessRoleUpdateWithWhereUniqueWithoutPersonInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface BusinessRoleUpdateWithoutPersonDataInput {
  name?: string | null
  description?: string | null
  raciPrivacy?: prisma.RACI | null
  raciSecurity?: prisma.RACI | null
  raciFinancial?: prisma.RACI | null
  raciExecutive?: prisma.RACI | null
  organizationalUnit?: OrganizationalUnitUpdateOneRequiredWithoutBusinessRolesInput | null
  process?: ProcessUpdateManyWithoutProcessOwnerInput | null
  appBusinessOwner?: ApplicationUpdateManyWithoutBusinessOwnerInput | null
  appItOwner?: ApplicationUpdateManyWithoutItOwnerInput | null
  appSecAdmin?: ApplicationUpdateManyWithoutSecurityAdministratorInput | null
}
export type BusinessRoleUpdateWithoutPersonDataInputInputObject =
  | Extract<keyof BusinessRoleUpdateWithoutPersonDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'raciPrivacy', alias?: string  } 
  | { name: 'raciSecurity', alias?: string  } 
  | { name: 'raciFinancial', alias?: string  } 
  | { name: 'raciExecutive', alias?: string  } 
  | { name: 'organizationalUnit', alias?: string  } 
  | { name: 'process', alias?: string  } 
  | { name: 'appBusinessOwner', alias?: string  } 
  | { name: 'appItOwner', alias?: string  } 
  | { name: 'appSecAdmin', alias?: string  } 
  
export interface OrganizationalUnitUpdateOneRequiredWithoutBusinessRolesInput {
  create?: OrganizationalUnitCreateWithoutBusinessRolesInput | null
  update?: OrganizationalUnitUpdateWithoutBusinessRolesDataInput | null
  upsert?: OrganizationalUnitUpsertWithoutBusinessRolesInput | null
  connect?: OrganizationalUnitWhereUniqueInput | null
}
export type OrganizationalUnitUpdateOneRequiredWithoutBusinessRolesInputInputObject =
  | Extract<keyof OrganizationalUnitUpdateOneRequiredWithoutBusinessRolesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrganizationalUnitUpdateWithoutBusinessRolesDataInput {
  name?: string | null
  description?: string | null
  children?: OrganizationalUnitUpdateManyWithoutParentInput | null
  parent?: OrganizationalUnitUpdateOneWithoutChildrenInput | null
  processes?: ProcessUpdateManyWithoutOrganizationalUnitInput | null
  organizationalUnitType?: OrganizationalUnitTypeUpdateOneWithoutOrganizationalUnitInput | null
}
export type OrganizationalUnitUpdateWithoutBusinessRolesDataInputInputObject =
  | Extract<keyof OrganizationalUnitUpdateWithoutBusinessRolesDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'children', alias?: string  } 
  | { name: 'parent', alias?: string  } 
  | { name: 'processes', alias?: string  } 
  | { name: 'organizationalUnitType', alias?: string  } 
  
export interface OrganizationalUnitUpdateManyWithoutParentInput {
  create?: OrganizationalUnitCreateWithoutParentInput[]
  delete?: OrganizationalUnitWhereUniqueInput[]
  connect?: OrganizationalUnitWhereUniqueInput[]
  set?: OrganizationalUnitWhereUniqueInput[]
  disconnect?: OrganizationalUnitWhereUniqueInput[]
  update?: OrganizationalUnitUpdateWithWhereUniqueWithoutParentInput[]
  upsert?: OrganizationalUnitUpsertWithWhereUniqueWithoutParentInput[]
  deleteMany?: OrganizationalUnitScalarWhereInput[]
  updateMany?: OrganizationalUnitUpdateManyWithWhereNestedInput[]
}
export type OrganizationalUnitUpdateManyWithoutParentInputInputObject =
  | Extract<keyof OrganizationalUnitUpdateManyWithoutParentInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface OrganizationalUnitUpdateWithWhereUniqueWithoutParentInput {
  where?: OrganizationalUnitWhereUniqueInput
  data?: OrganizationalUnitUpdateWithoutParentDataInput
}
export type OrganizationalUnitUpdateWithWhereUniqueWithoutParentInputInputObject =
  | Extract<keyof OrganizationalUnitUpdateWithWhereUniqueWithoutParentInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrganizationalUnitUpdateWithoutParentDataInput {
  name?: string | null
  description?: string | null
  children?: OrganizationalUnitUpdateManyWithoutParentInput | null
  processes?: ProcessUpdateManyWithoutOrganizationalUnitInput | null
  businessRoles?: BusinessRoleUpdateManyWithoutOrganizationalUnitInput | null
  organizationalUnitType?: OrganizationalUnitTypeUpdateOneWithoutOrganizationalUnitInput | null
}
export type OrganizationalUnitUpdateWithoutParentDataInputInputObject =
  | Extract<keyof OrganizationalUnitUpdateWithoutParentDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'children', alias?: string  } 
  | { name: 'processes', alias?: string  } 
  | { name: 'businessRoles', alias?: string  } 
  | { name: 'organizationalUnitType', alias?: string  } 
  
export interface ProcessUpdateManyWithoutOrganizationalUnitInput {
  create?: ProcessCreateWithoutOrganizationalUnitInput[]
  delete?: ProcessWhereUniqueInput[]
  connect?: ProcessWhereUniqueInput[]
  set?: ProcessWhereUniqueInput[]
  disconnect?: ProcessWhereUniqueInput[]
  update?: ProcessUpdateWithWhereUniqueWithoutOrganizationalUnitInput[]
  upsert?: ProcessUpsertWithWhereUniqueWithoutOrganizationalUnitInput[]
  deleteMany?: ProcessScalarWhereInput[]
  updateMany?: ProcessUpdateManyWithWhereNestedInput[]
}
export type ProcessUpdateManyWithoutOrganizationalUnitInputInputObject =
  | Extract<keyof ProcessUpdateManyWithoutOrganizationalUnitInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ProcessUpdateWithWhereUniqueWithoutOrganizationalUnitInput {
  where?: ProcessWhereUniqueInput
  data?: ProcessUpdateWithoutOrganizationalUnitDataInput
}
export type ProcessUpdateWithWhereUniqueWithoutOrganizationalUnitInputInputObject =
  | Extract<keyof ProcessUpdateWithWhereUniqueWithoutOrganizationalUnitInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ProcessUpdateWithoutOrganizationalUnitDataInput {
  name?: string | null
  description?: string | null
  processingActivities?: ProcessingActivityUpdateManyWithoutProcessInput | null
  processOwner?: BusinessRoleUpdateOneWithoutProcessInput | null
}
export type ProcessUpdateWithoutOrganizationalUnitDataInputInputObject =
  | Extract<keyof ProcessUpdateWithoutOrganizationalUnitDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'processingActivities', alias?: string  } 
  | { name: 'processOwner', alias?: string  } 
  
export interface ProcessingActivityUpdateManyWithoutProcessInput {
  create?: ProcessingActivityCreateWithoutProcessInput[]
  delete?: ProcessingActivityWhereUniqueInput[]
  connect?: ProcessingActivityWhereUniqueInput[]
  set?: ProcessingActivityWhereUniqueInput[]
  disconnect?: ProcessingActivityWhereUniqueInput[]
  update?: ProcessingActivityUpdateWithWhereUniqueWithoutProcessInput[]
  upsert?: ProcessingActivityUpsertWithWhereUniqueWithoutProcessInput[]
  deleteMany?: ProcessingActivityScalarWhereInput[]
  updateMany?: ProcessingActivityUpdateManyWithWhereNestedInput[]
}
export type ProcessingActivityUpdateManyWithoutProcessInputInputObject =
  | Extract<keyof ProcessingActivityUpdateManyWithoutProcessInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ProcessingActivityUpdateWithWhereUniqueWithoutProcessInput {
  where?: ProcessingActivityWhereUniqueInput
  data?: ProcessingActivityUpdateWithoutProcessDataInput
}
export type ProcessingActivityUpdateWithWhereUniqueWithoutProcessInputInputObject =
  | Extract<keyof ProcessingActivityUpdateWithWhereUniqueWithoutProcessInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ProcessingActivityUpdateWithoutProcessDataInput {
  name?: string | null
  description?: string | null
  purpose?: string | null
  applications?: ApplicationUpdateManyWithoutProcessingActivitiesInput | null
}
export type ProcessingActivityUpdateWithoutProcessDataInputInputObject =
  | Extract<keyof ProcessingActivityUpdateWithoutProcessDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'purpose', alias?: string  } 
  | { name: 'applications', alias?: string  } 
  
export interface ApplicationUpdateManyWithoutProcessingActivitiesInput {
  create?: ApplicationCreateWithoutProcessingActivitiesInput[]
  delete?: ApplicationWhereUniqueInput[]
  connect?: ApplicationWhereUniqueInput[]
  set?: ApplicationWhereUniqueInput[]
  disconnect?: ApplicationWhereUniqueInput[]
  update?: ApplicationUpdateWithWhereUniqueWithoutProcessingActivitiesInput[]
  upsert?: ApplicationUpsertWithWhereUniqueWithoutProcessingActivitiesInput[]
  deleteMany?: ApplicationScalarWhereInput[]
  updateMany?: ApplicationUpdateManyWithWhereNestedInput[]
}
export type ApplicationUpdateManyWithoutProcessingActivitiesInputInputObject =
  | Extract<keyof ApplicationUpdateManyWithoutProcessingActivitiesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ApplicationUpdateWithWhereUniqueWithoutProcessingActivitiesInput {
  where?: ApplicationWhereUniqueInput
  data?: ApplicationUpdateWithoutProcessingActivitiesDataInput
}
export type ApplicationUpdateWithWhereUniqueWithoutProcessingActivitiesInputInputObject =
  | Extract<keyof ApplicationUpdateWithWhereUniqueWithoutProcessingActivitiesInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ApplicationUpdateWithoutProcessingActivitiesDataInput {
  name?: string | null
  alias?: undefined | null
  description?: string | null
  dataTypes?: DataTypeUpdateManyWithoutApplicationInput | null
  businessOwner?: BusinessRoleUpdateOneWithoutAppBusinessOwnerInput | null
  itOwner?: BusinessRoleUpdateOneWithoutAppItOwnerInput | null
  securityAdministrator?: BusinessRoleUpdateOneWithoutAppSecAdminInput | null
}
export type ApplicationUpdateWithoutProcessingActivitiesDataInputInputObject =
  | Extract<keyof ApplicationUpdateWithoutProcessingActivitiesDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'alias', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'dataTypes', alias?: string  } 
  | { name: 'businessOwner', alias?: string  } 
  | { name: 'itOwner', alias?: string  } 
  | { name: 'securityAdministrator', alias?: string  } 
  
export interface DataTypeUpdateManyWithoutApplicationInput {
  create?: DataTypeCreateWithoutApplicationInput[]
  delete?: DataTypeWhereUniqueInput[]
  connect?: DataTypeWhereUniqueInput[]
  set?: DataTypeWhereUniqueInput[]
  disconnect?: DataTypeWhereUniqueInput[]
  update?: DataTypeUpdateWithWhereUniqueWithoutApplicationInput[]
  upsert?: DataTypeUpsertWithWhereUniqueWithoutApplicationInput[]
  deleteMany?: DataTypeScalarWhereInput[]
  updateMany?: DataTypeUpdateManyWithWhereNestedInput[]
}
export type DataTypeUpdateManyWithoutApplicationInputInputObject =
  | Extract<keyof DataTypeUpdateManyWithoutApplicationInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface DataTypeUpdateWithWhereUniqueWithoutApplicationInput {
  where?: DataTypeWhereUniqueInput
  data?: DataTypeUpdateWithoutApplicationDataInput
}
export type DataTypeUpdateWithWhereUniqueWithoutApplicationInputInputObject =
  | Extract<keyof DataTypeUpdateWithWhereUniqueWithoutApplicationInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface DataTypeUpdateWithoutApplicationDataInput {
  name?: string | null
  description?: string | null
  classificationLabels?: ClassificationLabelUpdateManyWithoutDataTypeInput | null
}
export type DataTypeUpdateWithoutApplicationDataInputInputObject =
  | Extract<keyof DataTypeUpdateWithoutApplicationDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'classificationLabels', alias?: string  } 
  
export interface ClassificationLabelUpdateManyWithoutDataTypeInput {
  create?: ClassificationLabelCreateWithoutDataTypeInput[]
  delete?: ClassificationLabelWhereUniqueInput[]
  connect?: ClassificationLabelWhereUniqueInput[]
  set?: ClassificationLabelWhereUniqueInput[]
  disconnect?: ClassificationLabelWhereUniqueInput[]
  update?: ClassificationLabelUpdateWithWhereUniqueWithoutDataTypeInput[]
  upsert?: ClassificationLabelUpsertWithWhereUniqueWithoutDataTypeInput[]
  deleteMany?: ClassificationLabelScalarWhereInput[]
  updateMany?: ClassificationLabelUpdateManyWithWhereNestedInput[]
}
export type ClassificationLabelUpdateManyWithoutDataTypeInputInputObject =
  | Extract<keyof ClassificationLabelUpdateManyWithoutDataTypeInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ClassificationLabelUpdateWithWhereUniqueWithoutDataTypeInput {
  where?: ClassificationLabelWhereUniqueInput
  data?: ClassificationLabelUpdateWithoutDataTypeDataInput
}
export type ClassificationLabelUpdateWithWhereUniqueWithoutDataTypeInputInputObject =
  | Extract<keyof ClassificationLabelUpdateWithWhereUniqueWithoutDataTypeInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ClassificationLabelUpdateWithoutDataTypeDataInput {
  score?: number | null
  label?: string | null
  criteria?: string | null
  qualityAttribute?: QualityAttributeUpdateOneWithoutClassificationLabelsInput | null
}
export type ClassificationLabelUpdateWithoutDataTypeDataInputInputObject =
  | Extract<keyof ClassificationLabelUpdateWithoutDataTypeDataInput, string>
  | { name: 'score', alias?: string  } 
  | { name: 'label', alias?: string  } 
  | { name: 'criteria', alias?: string  } 
  | { name: 'qualityAttribute', alias?: string  } 
  
export interface QualityAttributeUpdateOneWithoutClassificationLabelsInput {
  create?: QualityAttributeCreateWithoutClassificationLabelsInput | null
  update?: QualityAttributeUpdateWithoutClassificationLabelsDataInput | null
  upsert?: QualityAttributeUpsertWithoutClassificationLabelsInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: QualityAttributeWhereUniqueInput | null
}
export type QualityAttributeUpdateOneWithoutClassificationLabelsInputInputObject =
  | Extract<keyof QualityAttributeUpdateOneWithoutClassificationLabelsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface QualityAttributeUpdateWithoutClassificationLabelsDataInput {
  name?: string | null
  description?: string | null
  appliesToObject?: prisma.CLASSIFICATIONOBJECT | null
}
export type QualityAttributeUpdateWithoutClassificationLabelsDataInputInputObject =
  | Extract<keyof QualityAttributeUpdateWithoutClassificationLabelsDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'appliesToObject', alias?: string  } 
  
export interface QualityAttributeUpsertWithoutClassificationLabelsInput {
  update?: QualityAttributeUpdateWithoutClassificationLabelsDataInput
  create?: QualityAttributeCreateWithoutClassificationLabelsInput
}
export type QualityAttributeUpsertWithoutClassificationLabelsInputInputObject =
  | Extract<keyof QualityAttributeUpsertWithoutClassificationLabelsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ClassificationLabelUpsertWithWhereUniqueWithoutDataTypeInput {
  where?: ClassificationLabelWhereUniqueInput
  update?: ClassificationLabelUpdateWithoutDataTypeDataInput
  create?: ClassificationLabelCreateWithoutDataTypeInput
}
export type ClassificationLabelUpsertWithWhereUniqueWithoutDataTypeInputInputObject =
  | Extract<keyof ClassificationLabelUpsertWithWhereUniqueWithoutDataTypeInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ClassificationLabelScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  score?: number | null
  score_not?: number | null
  score_in?: number[]
  score_not_in?: number[]
  score_lt?: number | null
  score_lte?: number | null
  score_gt?: number | null
  score_gte?: number | null
  label?: string | null
  label_not?: string | null
  label_in?: string[]
  label_not_in?: string[]
  label_lt?: string | null
  label_lte?: string | null
  label_gt?: string | null
  label_gte?: string | null
  label_contains?: string | null
  label_not_contains?: string | null
  label_starts_with?: string | null
  label_not_starts_with?: string | null
  label_ends_with?: string | null
  label_not_ends_with?: string | null
  criteria?: string | null
  criteria_not?: string | null
  criteria_in?: string[]
  criteria_not_in?: string[]
  criteria_lt?: string | null
  criteria_lte?: string | null
  criteria_gt?: string | null
  criteria_gte?: string | null
  criteria_contains?: string | null
  criteria_not_contains?: string | null
  criteria_starts_with?: string | null
  criteria_not_starts_with?: string | null
  criteria_ends_with?: string | null
  criteria_not_ends_with?: string | null
  AND?: ClassificationLabelScalarWhereInput[]
  OR?: ClassificationLabelScalarWhereInput[]
  NOT?: ClassificationLabelScalarWhereInput[]
}
export type ClassificationLabelScalarWhereInputInputObject =
  | Extract<keyof ClassificationLabelScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'score', alias?: string  } 
  | { name: 'score_not', alias?: string  } 
  | { name: 'score_in', alias?: string  } 
  | { name: 'score_not_in', alias?: string  } 
  | { name: 'score_lt', alias?: string  } 
  | { name: 'score_lte', alias?: string  } 
  | { name: 'score_gt', alias?: string  } 
  | { name: 'score_gte', alias?: string  } 
  | { name: 'label', alias?: string  } 
  | { name: 'label_not', alias?: string  } 
  | { name: 'label_in', alias?: string  } 
  | { name: 'label_not_in', alias?: string  } 
  | { name: 'label_lt', alias?: string  } 
  | { name: 'label_lte', alias?: string  } 
  | { name: 'label_gt', alias?: string  } 
  | { name: 'label_gte', alias?: string  } 
  | { name: 'label_contains', alias?: string  } 
  | { name: 'label_not_contains', alias?: string  } 
  | { name: 'label_starts_with', alias?: string  } 
  | { name: 'label_not_starts_with', alias?: string  } 
  | { name: 'label_ends_with', alias?: string  } 
  | { name: 'label_not_ends_with', alias?: string  } 
  | { name: 'criteria', alias?: string  } 
  | { name: 'criteria_not', alias?: string  } 
  | { name: 'criteria_in', alias?: string  } 
  | { name: 'criteria_not_in', alias?: string  } 
  | { name: 'criteria_lt', alias?: string  } 
  | { name: 'criteria_lte', alias?: string  } 
  | { name: 'criteria_gt', alias?: string  } 
  | { name: 'criteria_gte', alias?: string  } 
  | { name: 'criteria_contains', alias?: string  } 
  | { name: 'criteria_not_contains', alias?: string  } 
  | { name: 'criteria_starts_with', alias?: string  } 
  | { name: 'criteria_not_starts_with', alias?: string  } 
  | { name: 'criteria_ends_with', alias?: string  } 
  | { name: 'criteria_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ClassificationLabelUpdateManyWithWhereNestedInput {
  where?: ClassificationLabelScalarWhereInput
  data?: ClassificationLabelUpdateManyDataInput
}
export type ClassificationLabelUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof ClassificationLabelUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ClassificationLabelUpdateManyDataInput {
  score?: number | null
  label?: string | null
  criteria?: string | null
}
export type ClassificationLabelUpdateManyDataInputInputObject =
  | Extract<keyof ClassificationLabelUpdateManyDataInput, string>
  | { name: 'score', alias?: string  } 
  | { name: 'label', alias?: string  } 
  | { name: 'criteria', alias?: string  } 
  
export interface DataTypeUpsertWithWhereUniqueWithoutApplicationInput {
  where?: DataTypeWhereUniqueInput
  update?: DataTypeUpdateWithoutApplicationDataInput
  create?: DataTypeCreateWithoutApplicationInput
}
export type DataTypeUpsertWithWhereUniqueWithoutApplicationInputInputObject =
  | Extract<keyof DataTypeUpsertWithWhereUniqueWithoutApplicationInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface DataTypeScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  AND?: DataTypeScalarWhereInput[]
  OR?: DataTypeScalarWhereInput[]
  NOT?: DataTypeScalarWhereInput[]
}
export type DataTypeScalarWhereInputInputObject =
  | Extract<keyof DataTypeScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DataTypeUpdateManyWithWhereNestedInput {
  where?: DataTypeScalarWhereInput
  data?: DataTypeUpdateManyDataInput
}
export type DataTypeUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof DataTypeUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface DataTypeUpdateManyDataInput {
  name?: string | null
  description?: string | null
}
export type DataTypeUpdateManyDataInputInputObject =
  | Extract<keyof DataTypeUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  
export interface BusinessRoleUpdateOneWithoutAppBusinessOwnerInput {
  create?: BusinessRoleCreateWithoutAppBusinessOwnerInput | null
  update?: BusinessRoleUpdateWithoutAppBusinessOwnerDataInput | null
  upsert?: BusinessRoleUpsertWithoutAppBusinessOwnerInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: BusinessRoleWhereUniqueInput | null
}
export type BusinessRoleUpdateOneWithoutAppBusinessOwnerInputInputObject =
  | Extract<keyof BusinessRoleUpdateOneWithoutAppBusinessOwnerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BusinessRoleUpdateWithoutAppBusinessOwnerDataInput {
  name?: string | null
  description?: string | null
  raciPrivacy?: prisma.RACI | null
  raciSecurity?: prisma.RACI | null
  raciFinancial?: prisma.RACI | null
  raciExecutive?: prisma.RACI | null
  person?: PersonUpdateOneWithoutRolesInput | null
  organizationalUnit?: OrganizationalUnitUpdateOneRequiredWithoutBusinessRolesInput | null
  process?: ProcessUpdateManyWithoutProcessOwnerInput | null
  appItOwner?: ApplicationUpdateManyWithoutItOwnerInput | null
  appSecAdmin?: ApplicationUpdateManyWithoutSecurityAdministratorInput | null
}
export type BusinessRoleUpdateWithoutAppBusinessOwnerDataInputInputObject =
  | Extract<keyof BusinessRoleUpdateWithoutAppBusinessOwnerDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'raciPrivacy', alias?: string  } 
  | { name: 'raciSecurity', alias?: string  } 
  | { name: 'raciFinancial', alias?: string  } 
  | { name: 'raciExecutive', alias?: string  } 
  | { name: 'person', alias?: string  } 
  | { name: 'organizationalUnit', alias?: string  } 
  | { name: 'process', alias?: string  } 
  | { name: 'appItOwner', alias?: string  } 
  | { name: 'appSecAdmin', alias?: string  } 
  
export interface PersonUpdateOneWithoutRolesInput {
  create?: PersonCreateWithoutRolesInput | null
  update?: PersonUpdateWithoutRolesDataInput | null
  upsert?: PersonUpsertWithoutRolesInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: PersonWhereUniqueInput | null
}
export type PersonUpdateOneWithoutRolesInputInputObject =
  | Extract<keyof PersonUpdateOneWithoutRolesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PersonUpdateWithoutRolesDataInput {
  name?: string | null
  surname?: string | null
  user?: UserUpdateOneWithoutPersonInput | null
}
export type PersonUpdateWithoutRolesDataInputInputObject =
  | Extract<keyof PersonUpdateWithoutRolesDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'surname', alias?: string  } 
  | { name: 'user', alias?: string  } 
  
export interface UserUpdateOneWithoutPersonInput {
  create?: UserCreateWithoutPersonInput | null
  update?: UserUpdateWithoutPersonDataInput | null
  upsert?: UserUpsertWithoutPersonInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneWithoutPersonInputInputObject =
  | Extract<keyof UserUpdateOneWithoutPersonInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutPersonDataInput {
  email?: string | null
  password?: string | null
  active?: boolean | null
  specialPermissions?: UserUpdatespecialPermissionsInput | null
}
export type UserUpdateWithoutPersonDataInputInputObject =
  | Extract<keyof UserUpdateWithoutPersonDataInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'active', alias?: string  } 
  | { name: 'specialPermissions', alias?: string  } 
  
export interface UserUpsertWithoutPersonInput {
  update?: UserUpdateWithoutPersonDataInput
  create?: UserCreateWithoutPersonInput
}
export type UserUpsertWithoutPersonInputInputObject =
  | Extract<keyof UserUpsertWithoutPersonInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PersonUpsertWithoutRolesInput {
  update?: PersonUpdateWithoutRolesDataInput
  create?: PersonCreateWithoutRolesInput
}
export type PersonUpsertWithoutRolesInputInputObject =
  | Extract<keyof PersonUpsertWithoutRolesInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ProcessUpdateManyWithoutProcessOwnerInput {
  create?: ProcessCreateWithoutProcessOwnerInput[]
  delete?: ProcessWhereUniqueInput[]
  connect?: ProcessWhereUniqueInput[]
  set?: ProcessWhereUniqueInput[]
  disconnect?: ProcessWhereUniqueInput[]
  update?: ProcessUpdateWithWhereUniqueWithoutProcessOwnerInput[]
  upsert?: ProcessUpsertWithWhereUniqueWithoutProcessOwnerInput[]
  deleteMany?: ProcessScalarWhereInput[]
  updateMany?: ProcessUpdateManyWithWhereNestedInput[]
}
export type ProcessUpdateManyWithoutProcessOwnerInputInputObject =
  | Extract<keyof ProcessUpdateManyWithoutProcessOwnerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ProcessUpdateWithWhereUniqueWithoutProcessOwnerInput {
  where?: ProcessWhereUniqueInput
  data?: ProcessUpdateWithoutProcessOwnerDataInput
}
export type ProcessUpdateWithWhereUniqueWithoutProcessOwnerInputInputObject =
  | Extract<keyof ProcessUpdateWithWhereUniqueWithoutProcessOwnerInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ProcessUpdateWithoutProcessOwnerDataInput {
  name?: string | null
  description?: string | null
  organizationalUnit?: OrganizationalUnitUpdateOneWithoutProcessesInput | null
  processingActivities?: ProcessingActivityUpdateManyWithoutProcessInput | null
}
export type ProcessUpdateWithoutProcessOwnerDataInputInputObject =
  | Extract<keyof ProcessUpdateWithoutProcessOwnerDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'organizationalUnit', alias?: string  } 
  | { name: 'processingActivities', alias?: string  } 
  
export interface OrganizationalUnitUpdateOneWithoutProcessesInput {
  create?: OrganizationalUnitCreateWithoutProcessesInput | null
  update?: OrganizationalUnitUpdateWithoutProcessesDataInput | null
  upsert?: OrganizationalUnitUpsertWithoutProcessesInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: OrganizationalUnitWhereUniqueInput | null
}
export type OrganizationalUnitUpdateOneWithoutProcessesInputInputObject =
  | Extract<keyof OrganizationalUnitUpdateOneWithoutProcessesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrganizationalUnitUpdateWithoutProcessesDataInput {
  name?: string | null
  description?: string | null
  children?: OrganizationalUnitUpdateManyWithoutParentInput | null
  parent?: OrganizationalUnitUpdateOneWithoutChildrenInput | null
  businessRoles?: BusinessRoleUpdateManyWithoutOrganizationalUnitInput | null
  organizationalUnitType?: OrganizationalUnitTypeUpdateOneWithoutOrganizationalUnitInput | null
}
export type OrganizationalUnitUpdateWithoutProcessesDataInputInputObject =
  | Extract<keyof OrganizationalUnitUpdateWithoutProcessesDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'children', alias?: string  } 
  | { name: 'parent', alias?: string  } 
  | { name: 'businessRoles', alias?: string  } 
  | { name: 'organizationalUnitType', alias?: string  } 
  
export interface OrganizationalUnitUpdateOneWithoutChildrenInput {
  create?: OrganizationalUnitCreateWithoutChildrenInput | null
  update?: OrganizationalUnitUpdateWithoutChildrenDataInput | null
  upsert?: OrganizationalUnitUpsertWithoutChildrenInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: OrganizationalUnitWhereUniqueInput | null
}
export type OrganizationalUnitUpdateOneWithoutChildrenInputInputObject =
  | Extract<keyof OrganizationalUnitUpdateOneWithoutChildrenInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrganizationalUnitUpdateWithoutChildrenDataInput {
  name?: string | null
  description?: string | null
  parent?: OrganizationalUnitUpdateOneWithoutChildrenInput | null
  processes?: ProcessUpdateManyWithoutOrganizationalUnitInput | null
  businessRoles?: BusinessRoleUpdateManyWithoutOrganizationalUnitInput | null
  organizationalUnitType?: OrganizationalUnitTypeUpdateOneWithoutOrganizationalUnitInput | null
}
export type OrganizationalUnitUpdateWithoutChildrenDataInputInputObject =
  | Extract<keyof OrganizationalUnitUpdateWithoutChildrenDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'parent', alias?: string  } 
  | { name: 'processes', alias?: string  } 
  | { name: 'businessRoles', alias?: string  } 
  | { name: 'organizationalUnitType', alias?: string  } 
  
export interface BusinessRoleUpdateManyWithoutOrganizationalUnitInput {
  create?: BusinessRoleCreateWithoutOrganizationalUnitInput[]
  delete?: BusinessRoleWhereUniqueInput[]
  connect?: BusinessRoleWhereUniqueInput[]
  set?: BusinessRoleWhereUniqueInput[]
  disconnect?: BusinessRoleWhereUniqueInput[]
  update?: BusinessRoleUpdateWithWhereUniqueWithoutOrganizationalUnitInput[]
  upsert?: BusinessRoleUpsertWithWhereUniqueWithoutOrganizationalUnitInput[]
  deleteMany?: BusinessRoleScalarWhereInput[]
  updateMany?: BusinessRoleUpdateManyWithWhereNestedInput[]
}
export type BusinessRoleUpdateManyWithoutOrganizationalUnitInputInputObject =
  | Extract<keyof BusinessRoleUpdateManyWithoutOrganizationalUnitInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface BusinessRoleUpdateWithWhereUniqueWithoutOrganizationalUnitInput {
  where?: BusinessRoleWhereUniqueInput
  data?: BusinessRoleUpdateWithoutOrganizationalUnitDataInput
}
export type BusinessRoleUpdateWithWhereUniqueWithoutOrganizationalUnitInputInputObject =
  | Extract<keyof BusinessRoleUpdateWithWhereUniqueWithoutOrganizationalUnitInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface BusinessRoleUpdateWithoutOrganizationalUnitDataInput {
  name?: string | null
  description?: string | null
  raciPrivacy?: prisma.RACI | null
  raciSecurity?: prisma.RACI | null
  raciFinancial?: prisma.RACI | null
  raciExecutive?: prisma.RACI | null
  person?: PersonUpdateOneWithoutRolesInput | null
  process?: ProcessUpdateManyWithoutProcessOwnerInput | null
  appBusinessOwner?: ApplicationUpdateManyWithoutBusinessOwnerInput | null
  appItOwner?: ApplicationUpdateManyWithoutItOwnerInput | null
  appSecAdmin?: ApplicationUpdateManyWithoutSecurityAdministratorInput | null
}
export type BusinessRoleUpdateWithoutOrganizationalUnitDataInputInputObject =
  | Extract<keyof BusinessRoleUpdateWithoutOrganizationalUnitDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'raciPrivacy', alias?: string  } 
  | { name: 'raciSecurity', alias?: string  } 
  | { name: 'raciFinancial', alias?: string  } 
  | { name: 'raciExecutive', alias?: string  } 
  | { name: 'person', alias?: string  } 
  | { name: 'process', alias?: string  } 
  | { name: 'appBusinessOwner', alias?: string  } 
  | { name: 'appItOwner', alias?: string  } 
  | { name: 'appSecAdmin', alias?: string  } 
  
export interface ApplicationUpdateManyWithoutBusinessOwnerInput {
  create?: ApplicationCreateWithoutBusinessOwnerInput[]
  delete?: ApplicationWhereUniqueInput[]
  connect?: ApplicationWhereUniqueInput[]
  set?: ApplicationWhereUniqueInput[]
  disconnect?: ApplicationWhereUniqueInput[]
  update?: ApplicationUpdateWithWhereUniqueWithoutBusinessOwnerInput[]
  upsert?: ApplicationUpsertWithWhereUniqueWithoutBusinessOwnerInput[]
  deleteMany?: ApplicationScalarWhereInput[]
  updateMany?: ApplicationUpdateManyWithWhereNestedInput[]
}
export type ApplicationUpdateManyWithoutBusinessOwnerInputInputObject =
  | Extract<keyof ApplicationUpdateManyWithoutBusinessOwnerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ApplicationUpdateWithWhereUniqueWithoutBusinessOwnerInput {
  where?: ApplicationWhereUniqueInput
  data?: ApplicationUpdateWithoutBusinessOwnerDataInput
}
export type ApplicationUpdateWithWhereUniqueWithoutBusinessOwnerInputInputObject =
  | Extract<keyof ApplicationUpdateWithWhereUniqueWithoutBusinessOwnerInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ApplicationUpdateWithoutBusinessOwnerDataInput {
  name?: string | null
  alias?: undefined | null
  description?: string | null
  processingActivities?: ProcessingActivityUpdateManyWithoutApplicationsInput | null
  dataTypes?: DataTypeUpdateManyWithoutApplicationInput | null
  itOwner?: BusinessRoleUpdateOneWithoutAppItOwnerInput | null
  securityAdministrator?: BusinessRoleUpdateOneWithoutAppSecAdminInput | null
}
export type ApplicationUpdateWithoutBusinessOwnerDataInputInputObject =
  | Extract<keyof ApplicationUpdateWithoutBusinessOwnerDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'alias', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'processingActivities', alias?: string  } 
  | { name: 'dataTypes', alias?: string  } 
  | { name: 'itOwner', alias?: string  } 
  | { name: 'securityAdministrator', alias?: string  } 
  
export interface ProcessingActivityUpdateManyWithoutApplicationsInput {
  create?: ProcessingActivityCreateWithoutApplicationsInput[]
  delete?: ProcessingActivityWhereUniqueInput[]
  connect?: ProcessingActivityWhereUniqueInput[]
  set?: ProcessingActivityWhereUniqueInput[]
  disconnect?: ProcessingActivityWhereUniqueInput[]
  update?: ProcessingActivityUpdateWithWhereUniqueWithoutApplicationsInput[]
  upsert?: ProcessingActivityUpsertWithWhereUniqueWithoutApplicationsInput[]
  deleteMany?: ProcessingActivityScalarWhereInput[]
  updateMany?: ProcessingActivityUpdateManyWithWhereNestedInput[]
}
export type ProcessingActivityUpdateManyWithoutApplicationsInputInputObject =
  | Extract<keyof ProcessingActivityUpdateManyWithoutApplicationsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ProcessingActivityUpdateWithWhereUniqueWithoutApplicationsInput {
  where?: ProcessingActivityWhereUniqueInput
  data?: ProcessingActivityUpdateWithoutApplicationsDataInput
}
export type ProcessingActivityUpdateWithWhereUniqueWithoutApplicationsInputInputObject =
  | Extract<keyof ProcessingActivityUpdateWithWhereUniqueWithoutApplicationsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ProcessingActivityUpdateWithoutApplicationsDataInput {
  name?: string | null
  description?: string | null
  purpose?: string | null
  process?: ProcessUpdateOneWithoutProcessingActivitiesInput | null
}
export type ProcessingActivityUpdateWithoutApplicationsDataInputInputObject =
  | Extract<keyof ProcessingActivityUpdateWithoutApplicationsDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'purpose', alias?: string  } 
  | { name: 'process', alias?: string  } 
  
export interface ProcessUpdateOneWithoutProcessingActivitiesInput {
  create?: ProcessCreateWithoutProcessingActivitiesInput | null
  update?: ProcessUpdateWithoutProcessingActivitiesDataInput | null
  upsert?: ProcessUpsertWithoutProcessingActivitiesInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: ProcessWhereUniqueInput | null
}
export type ProcessUpdateOneWithoutProcessingActivitiesInputInputObject =
  | Extract<keyof ProcessUpdateOneWithoutProcessingActivitiesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProcessUpdateWithoutProcessingActivitiesDataInput {
  name?: string | null
  description?: string | null
  organizationalUnit?: OrganizationalUnitUpdateOneWithoutProcessesInput | null
  processOwner?: BusinessRoleUpdateOneWithoutProcessInput | null
}
export type ProcessUpdateWithoutProcessingActivitiesDataInputInputObject =
  | Extract<keyof ProcessUpdateWithoutProcessingActivitiesDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'organizationalUnit', alias?: string  } 
  | { name: 'processOwner', alias?: string  } 
  
export interface BusinessRoleUpdateOneWithoutProcessInput {
  create?: BusinessRoleCreateWithoutProcessInput | null
  update?: BusinessRoleUpdateWithoutProcessDataInput | null
  upsert?: BusinessRoleUpsertWithoutProcessInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: BusinessRoleWhereUniqueInput | null
}
export type BusinessRoleUpdateOneWithoutProcessInputInputObject =
  | Extract<keyof BusinessRoleUpdateOneWithoutProcessInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BusinessRoleUpdateWithoutProcessDataInput {
  name?: string | null
  description?: string | null
  raciPrivacy?: prisma.RACI | null
  raciSecurity?: prisma.RACI | null
  raciFinancial?: prisma.RACI | null
  raciExecutive?: prisma.RACI | null
  person?: PersonUpdateOneWithoutRolesInput | null
  organizationalUnit?: OrganizationalUnitUpdateOneRequiredWithoutBusinessRolesInput | null
  appBusinessOwner?: ApplicationUpdateManyWithoutBusinessOwnerInput | null
  appItOwner?: ApplicationUpdateManyWithoutItOwnerInput | null
  appSecAdmin?: ApplicationUpdateManyWithoutSecurityAdministratorInput | null
}
export type BusinessRoleUpdateWithoutProcessDataInputInputObject =
  | Extract<keyof BusinessRoleUpdateWithoutProcessDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'raciPrivacy', alias?: string  } 
  | { name: 'raciSecurity', alias?: string  } 
  | { name: 'raciFinancial', alias?: string  } 
  | { name: 'raciExecutive', alias?: string  } 
  | { name: 'person', alias?: string  } 
  | { name: 'organizationalUnit', alias?: string  } 
  | { name: 'appBusinessOwner', alias?: string  } 
  | { name: 'appItOwner', alias?: string  } 
  | { name: 'appSecAdmin', alias?: string  } 
  
export interface ApplicationUpdateManyWithoutItOwnerInput {
  create?: ApplicationCreateWithoutItOwnerInput[]
  delete?: ApplicationWhereUniqueInput[]
  connect?: ApplicationWhereUniqueInput[]
  set?: ApplicationWhereUniqueInput[]
  disconnect?: ApplicationWhereUniqueInput[]
  update?: ApplicationUpdateWithWhereUniqueWithoutItOwnerInput[]
  upsert?: ApplicationUpsertWithWhereUniqueWithoutItOwnerInput[]
  deleteMany?: ApplicationScalarWhereInput[]
  updateMany?: ApplicationUpdateManyWithWhereNestedInput[]
}
export type ApplicationUpdateManyWithoutItOwnerInputInputObject =
  | Extract<keyof ApplicationUpdateManyWithoutItOwnerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ApplicationUpdateWithWhereUniqueWithoutItOwnerInput {
  where?: ApplicationWhereUniqueInput
  data?: ApplicationUpdateWithoutItOwnerDataInput
}
export type ApplicationUpdateWithWhereUniqueWithoutItOwnerInputInputObject =
  | Extract<keyof ApplicationUpdateWithWhereUniqueWithoutItOwnerInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ApplicationUpdateWithoutItOwnerDataInput {
  name?: string | null
  alias?: undefined | null
  description?: string | null
  processingActivities?: ProcessingActivityUpdateManyWithoutApplicationsInput | null
  dataTypes?: DataTypeUpdateManyWithoutApplicationInput | null
  businessOwner?: BusinessRoleUpdateOneWithoutAppBusinessOwnerInput | null
  securityAdministrator?: BusinessRoleUpdateOneWithoutAppSecAdminInput | null
}
export type ApplicationUpdateWithoutItOwnerDataInputInputObject =
  | Extract<keyof ApplicationUpdateWithoutItOwnerDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'alias', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'processingActivities', alias?: string  } 
  | { name: 'dataTypes', alias?: string  } 
  | { name: 'businessOwner', alias?: string  } 
  | { name: 'securityAdministrator', alias?: string  } 
  
export interface BusinessRoleUpdateOneWithoutAppSecAdminInput {
  create?: BusinessRoleCreateWithoutAppSecAdminInput | null
  update?: BusinessRoleUpdateWithoutAppSecAdminDataInput | null
  upsert?: BusinessRoleUpsertWithoutAppSecAdminInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: BusinessRoleWhereUniqueInput | null
}
export type BusinessRoleUpdateOneWithoutAppSecAdminInputInputObject =
  | Extract<keyof BusinessRoleUpdateOneWithoutAppSecAdminInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BusinessRoleUpdateWithoutAppSecAdminDataInput {
  name?: string | null
  description?: string | null
  raciPrivacy?: prisma.RACI | null
  raciSecurity?: prisma.RACI | null
  raciFinancial?: prisma.RACI | null
  raciExecutive?: prisma.RACI | null
  person?: PersonUpdateOneWithoutRolesInput | null
  organizationalUnit?: OrganizationalUnitUpdateOneRequiredWithoutBusinessRolesInput | null
  process?: ProcessUpdateManyWithoutProcessOwnerInput | null
  appBusinessOwner?: ApplicationUpdateManyWithoutBusinessOwnerInput | null
  appItOwner?: ApplicationUpdateManyWithoutItOwnerInput | null
}
export type BusinessRoleUpdateWithoutAppSecAdminDataInputInputObject =
  | Extract<keyof BusinessRoleUpdateWithoutAppSecAdminDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'raciPrivacy', alias?: string  } 
  | { name: 'raciSecurity', alias?: string  } 
  | { name: 'raciFinancial', alias?: string  } 
  | { name: 'raciExecutive', alias?: string  } 
  | { name: 'person', alias?: string  } 
  | { name: 'organizationalUnit', alias?: string  } 
  | { name: 'process', alias?: string  } 
  | { name: 'appBusinessOwner', alias?: string  } 
  | { name: 'appItOwner', alias?: string  } 
  
export interface BusinessRoleUpsertWithoutAppSecAdminInput {
  update?: BusinessRoleUpdateWithoutAppSecAdminDataInput
  create?: BusinessRoleCreateWithoutAppSecAdminInput
}
export type BusinessRoleUpsertWithoutAppSecAdminInputInputObject =
  | Extract<keyof BusinessRoleUpsertWithoutAppSecAdminInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ApplicationUpsertWithWhereUniqueWithoutItOwnerInput {
  where?: ApplicationWhereUniqueInput
  update?: ApplicationUpdateWithoutItOwnerDataInput
  create?: ApplicationCreateWithoutItOwnerInput
}
export type ApplicationUpsertWithWhereUniqueWithoutItOwnerInputInputObject =
  | Extract<keyof ApplicationUpsertWithWhereUniqueWithoutItOwnerInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ApplicationScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  AND?: ApplicationScalarWhereInput[]
  OR?: ApplicationScalarWhereInput[]
  NOT?: ApplicationScalarWhereInput[]
}
export type ApplicationScalarWhereInputInputObject =
  | Extract<keyof ApplicationScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ApplicationUpdateManyWithWhereNestedInput {
  where?: ApplicationScalarWhereInput
  data?: ApplicationUpdateManyDataInput
}
export type ApplicationUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof ApplicationUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ApplicationUpdateManyDataInput {
  name?: string | null
  alias?: undefined | null
  description?: string | null
}
export type ApplicationUpdateManyDataInputInputObject =
  | Extract<keyof ApplicationUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'alias', alias?: string  } 
  | { name: 'description', alias?: string  } 
  
export interface ApplicationUpdateManyWithoutSecurityAdministratorInput {
  create?: ApplicationCreateWithoutSecurityAdministratorInput[]
  delete?: ApplicationWhereUniqueInput[]
  connect?: ApplicationWhereUniqueInput[]
  set?: ApplicationWhereUniqueInput[]
  disconnect?: ApplicationWhereUniqueInput[]
  update?: ApplicationUpdateWithWhereUniqueWithoutSecurityAdministratorInput[]
  upsert?: ApplicationUpsertWithWhereUniqueWithoutSecurityAdministratorInput[]
  deleteMany?: ApplicationScalarWhereInput[]
  updateMany?: ApplicationUpdateManyWithWhereNestedInput[]
}
export type ApplicationUpdateManyWithoutSecurityAdministratorInputInputObject =
  | Extract<keyof ApplicationUpdateManyWithoutSecurityAdministratorInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ApplicationUpdateWithWhereUniqueWithoutSecurityAdministratorInput {
  where?: ApplicationWhereUniqueInput
  data?: ApplicationUpdateWithoutSecurityAdministratorDataInput
}
export type ApplicationUpdateWithWhereUniqueWithoutSecurityAdministratorInputInputObject =
  | Extract<keyof ApplicationUpdateWithWhereUniqueWithoutSecurityAdministratorInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ApplicationUpdateWithoutSecurityAdministratorDataInput {
  name?: string | null
  alias?: undefined | null
  description?: string | null
  processingActivities?: ProcessingActivityUpdateManyWithoutApplicationsInput | null
  dataTypes?: DataTypeUpdateManyWithoutApplicationInput | null
  businessOwner?: BusinessRoleUpdateOneWithoutAppBusinessOwnerInput | null
  itOwner?: BusinessRoleUpdateOneWithoutAppItOwnerInput | null
}
export type ApplicationUpdateWithoutSecurityAdministratorDataInputInputObject =
  | Extract<keyof ApplicationUpdateWithoutSecurityAdministratorDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'alias', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'processingActivities', alias?: string  } 
  | { name: 'dataTypes', alias?: string  } 
  | { name: 'businessOwner', alias?: string  } 
  | { name: 'itOwner', alias?: string  } 
  
export interface BusinessRoleUpdateOneWithoutAppItOwnerInput {
  create?: BusinessRoleCreateWithoutAppItOwnerInput | null
  update?: BusinessRoleUpdateWithoutAppItOwnerDataInput | null
  upsert?: BusinessRoleUpsertWithoutAppItOwnerInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: BusinessRoleWhereUniqueInput | null
}
export type BusinessRoleUpdateOneWithoutAppItOwnerInputInputObject =
  | Extract<keyof BusinessRoleUpdateOneWithoutAppItOwnerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BusinessRoleUpdateWithoutAppItOwnerDataInput {
  name?: string | null
  description?: string | null
  raciPrivacy?: prisma.RACI | null
  raciSecurity?: prisma.RACI | null
  raciFinancial?: prisma.RACI | null
  raciExecutive?: prisma.RACI | null
  person?: PersonUpdateOneWithoutRolesInput | null
  organizationalUnit?: OrganizationalUnitUpdateOneRequiredWithoutBusinessRolesInput | null
  process?: ProcessUpdateManyWithoutProcessOwnerInput | null
  appBusinessOwner?: ApplicationUpdateManyWithoutBusinessOwnerInput | null
  appSecAdmin?: ApplicationUpdateManyWithoutSecurityAdministratorInput | null
}
export type BusinessRoleUpdateWithoutAppItOwnerDataInputInputObject =
  | Extract<keyof BusinessRoleUpdateWithoutAppItOwnerDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'raciPrivacy', alias?: string  } 
  | { name: 'raciSecurity', alias?: string  } 
  | { name: 'raciFinancial', alias?: string  } 
  | { name: 'raciExecutive', alias?: string  } 
  | { name: 'person', alias?: string  } 
  | { name: 'organizationalUnit', alias?: string  } 
  | { name: 'process', alias?: string  } 
  | { name: 'appBusinessOwner', alias?: string  } 
  | { name: 'appSecAdmin', alias?: string  } 
  
export interface BusinessRoleUpsertWithoutAppItOwnerInput {
  update?: BusinessRoleUpdateWithoutAppItOwnerDataInput
  create?: BusinessRoleCreateWithoutAppItOwnerInput
}
export type BusinessRoleUpsertWithoutAppItOwnerInputInputObject =
  | Extract<keyof BusinessRoleUpsertWithoutAppItOwnerInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ApplicationUpsertWithWhereUniqueWithoutSecurityAdministratorInput {
  where?: ApplicationWhereUniqueInput
  update?: ApplicationUpdateWithoutSecurityAdministratorDataInput
  create?: ApplicationCreateWithoutSecurityAdministratorInput
}
export type ApplicationUpsertWithWhereUniqueWithoutSecurityAdministratorInputInputObject =
  | Extract<keyof ApplicationUpsertWithWhereUniqueWithoutSecurityAdministratorInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface BusinessRoleUpsertWithoutProcessInput {
  update?: BusinessRoleUpdateWithoutProcessDataInput
  create?: BusinessRoleCreateWithoutProcessInput
}
export type BusinessRoleUpsertWithoutProcessInputInputObject =
  | Extract<keyof BusinessRoleUpsertWithoutProcessInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ProcessUpsertWithoutProcessingActivitiesInput {
  update?: ProcessUpdateWithoutProcessingActivitiesDataInput
  create?: ProcessCreateWithoutProcessingActivitiesInput
}
export type ProcessUpsertWithoutProcessingActivitiesInputInputObject =
  | Extract<keyof ProcessUpsertWithoutProcessingActivitiesInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ProcessingActivityUpsertWithWhereUniqueWithoutApplicationsInput {
  where?: ProcessingActivityWhereUniqueInput
  update?: ProcessingActivityUpdateWithoutApplicationsDataInput
  create?: ProcessingActivityCreateWithoutApplicationsInput
}
export type ProcessingActivityUpsertWithWhereUniqueWithoutApplicationsInputInputObject =
  | Extract<keyof ProcessingActivityUpsertWithWhereUniqueWithoutApplicationsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ProcessingActivityScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  purpose?: string | null
  purpose_not?: string | null
  purpose_in?: string[]
  purpose_not_in?: string[]
  purpose_lt?: string | null
  purpose_lte?: string | null
  purpose_gt?: string | null
  purpose_gte?: string | null
  purpose_contains?: string | null
  purpose_not_contains?: string | null
  purpose_starts_with?: string | null
  purpose_not_starts_with?: string | null
  purpose_ends_with?: string | null
  purpose_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: ProcessingActivityScalarWhereInput[]
  OR?: ProcessingActivityScalarWhereInput[]
  NOT?: ProcessingActivityScalarWhereInput[]
}
export type ProcessingActivityScalarWhereInputInputObject =
  | Extract<keyof ProcessingActivityScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'purpose', alias?: string  } 
  | { name: 'purpose_not', alias?: string  } 
  | { name: 'purpose_in', alias?: string  } 
  | { name: 'purpose_not_in', alias?: string  } 
  | { name: 'purpose_lt', alias?: string  } 
  | { name: 'purpose_lte', alias?: string  } 
  | { name: 'purpose_gt', alias?: string  } 
  | { name: 'purpose_gte', alias?: string  } 
  | { name: 'purpose_contains', alias?: string  } 
  | { name: 'purpose_not_contains', alias?: string  } 
  | { name: 'purpose_starts_with', alias?: string  } 
  | { name: 'purpose_not_starts_with', alias?: string  } 
  | { name: 'purpose_ends_with', alias?: string  } 
  | { name: 'purpose_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ProcessingActivityUpdateManyWithWhereNestedInput {
  where?: ProcessingActivityScalarWhereInput
  data?: ProcessingActivityUpdateManyDataInput
}
export type ProcessingActivityUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof ProcessingActivityUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ProcessingActivityUpdateManyDataInput {
  name?: string | null
  description?: string | null
  purpose?: string | null
}
export type ProcessingActivityUpdateManyDataInputInputObject =
  | Extract<keyof ProcessingActivityUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'purpose', alias?: string  } 
  
export interface ApplicationUpsertWithWhereUniqueWithoutBusinessOwnerInput {
  where?: ApplicationWhereUniqueInput
  update?: ApplicationUpdateWithoutBusinessOwnerDataInput
  create?: ApplicationCreateWithoutBusinessOwnerInput
}
export type ApplicationUpsertWithWhereUniqueWithoutBusinessOwnerInputInputObject =
  | Extract<keyof ApplicationUpsertWithWhereUniqueWithoutBusinessOwnerInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface BusinessRoleUpsertWithWhereUniqueWithoutOrganizationalUnitInput {
  where?: BusinessRoleWhereUniqueInput
  update?: BusinessRoleUpdateWithoutOrganizationalUnitDataInput
  create?: BusinessRoleCreateWithoutOrganizationalUnitInput
}
export type BusinessRoleUpsertWithWhereUniqueWithoutOrganizationalUnitInputInputObject =
  | Extract<keyof BusinessRoleUpsertWithWhereUniqueWithoutOrganizationalUnitInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface BusinessRoleScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  raciPrivacy?: prisma.RACI | null
  raciPrivacy_not?: prisma.RACI | null
  raciPrivacy_in?: prisma.RACI[]
  raciPrivacy_not_in?: prisma.RACI[]
  raciSecurity?: prisma.RACI | null
  raciSecurity_not?: prisma.RACI | null
  raciSecurity_in?: prisma.RACI[]
  raciSecurity_not_in?: prisma.RACI[]
  raciFinancial?: prisma.RACI | null
  raciFinancial_not?: prisma.RACI | null
  raciFinancial_in?: prisma.RACI[]
  raciFinancial_not_in?: prisma.RACI[]
  raciExecutive?: prisma.RACI | null
  raciExecutive_not?: prisma.RACI | null
  raciExecutive_in?: prisma.RACI[]
  raciExecutive_not_in?: prisma.RACI[]
  AND?: BusinessRoleScalarWhereInput[]
  OR?: BusinessRoleScalarWhereInput[]
  NOT?: BusinessRoleScalarWhereInput[]
}
export type BusinessRoleScalarWhereInputInputObject =
  | Extract<keyof BusinessRoleScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'raciPrivacy', alias?: string  } 
  | { name: 'raciPrivacy_not', alias?: string  } 
  | { name: 'raciPrivacy_in', alias?: string  } 
  | { name: 'raciPrivacy_not_in', alias?: string  } 
  | { name: 'raciSecurity', alias?: string  } 
  | { name: 'raciSecurity_not', alias?: string  } 
  | { name: 'raciSecurity_in', alias?: string  } 
  | { name: 'raciSecurity_not_in', alias?: string  } 
  | { name: 'raciFinancial', alias?: string  } 
  | { name: 'raciFinancial_not', alias?: string  } 
  | { name: 'raciFinancial_in', alias?: string  } 
  | { name: 'raciFinancial_not_in', alias?: string  } 
  | { name: 'raciExecutive', alias?: string  } 
  | { name: 'raciExecutive_not', alias?: string  } 
  | { name: 'raciExecutive_in', alias?: string  } 
  | { name: 'raciExecutive_not_in', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface BusinessRoleUpdateManyWithWhereNestedInput {
  where?: BusinessRoleScalarWhereInput
  data?: BusinessRoleUpdateManyDataInput
}
export type BusinessRoleUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof BusinessRoleUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface BusinessRoleUpdateManyDataInput {
  name?: string | null
  description?: string | null
  raciPrivacy?: prisma.RACI | null
  raciSecurity?: prisma.RACI | null
  raciFinancial?: prisma.RACI | null
  raciExecutive?: prisma.RACI | null
}
export type BusinessRoleUpdateManyDataInputInputObject =
  | Extract<keyof BusinessRoleUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'raciPrivacy', alias?: string  } 
  | { name: 'raciSecurity', alias?: string  } 
  | { name: 'raciFinancial', alias?: string  } 
  | { name: 'raciExecutive', alias?: string  } 
  
export interface OrganizationalUnitTypeUpdateOneWithoutOrganizationalUnitInput {
  create?: OrganizationalUnitTypeCreateWithoutOrganizationalUnitInput | null
  update?: OrganizationalUnitTypeUpdateWithoutOrganizationalUnitDataInput | null
  upsert?: OrganizationalUnitTypeUpsertWithoutOrganizationalUnitInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: OrganizationalUnitTypeWhereUniqueInput | null
}
export type OrganizationalUnitTypeUpdateOneWithoutOrganizationalUnitInputInputObject =
  | Extract<keyof OrganizationalUnitTypeUpdateOneWithoutOrganizationalUnitInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrganizationalUnitTypeUpdateWithoutOrganizationalUnitDataInput {
  name?: string | null
  description?: string | null
  reportingUnit?: boolean | null
}
export type OrganizationalUnitTypeUpdateWithoutOrganizationalUnitDataInputInputObject =
  | Extract<keyof OrganizationalUnitTypeUpdateWithoutOrganizationalUnitDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'reportingUnit', alias?: string  } 
  
export interface OrganizationalUnitTypeUpsertWithoutOrganizationalUnitInput {
  update?: OrganizationalUnitTypeUpdateWithoutOrganizationalUnitDataInput
  create?: OrganizationalUnitTypeCreateWithoutOrganizationalUnitInput
}
export type OrganizationalUnitTypeUpsertWithoutOrganizationalUnitInputInputObject =
  | Extract<keyof OrganizationalUnitTypeUpsertWithoutOrganizationalUnitInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrganizationalUnitUpsertWithoutChildrenInput {
  update?: OrganizationalUnitUpdateWithoutChildrenDataInput
  create?: OrganizationalUnitCreateWithoutChildrenInput
}
export type OrganizationalUnitUpsertWithoutChildrenInputInputObject =
  | Extract<keyof OrganizationalUnitUpsertWithoutChildrenInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrganizationalUnitUpsertWithoutProcessesInput {
  update?: OrganizationalUnitUpdateWithoutProcessesDataInput
  create?: OrganizationalUnitCreateWithoutProcessesInput
}
export type OrganizationalUnitUpsertWithoutProcessesInputInputObject =
  | Extract<keyof OrganizationalUnitUpsertWithoutProcessesInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ProcessUpsertWithWhereUniqueWithoutProcessOwnerInput {
  where?: ProcessWhereUniqueInput
  update?: ProcessUpdateWithoutProcessOwnerDataInput
  create?: ProcessCreateWithoutProcessOwnerInput
}
export type ProcessUpsertWithWhereUniqueWithoutProcessOwnerInputInputObject =
  | Extract<keyof ProcessUpsertWithWhereUniqueWithoutProcessOwnerInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ProcessScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: ProcessScalarWhereInput[]
  OR?: ProcessScalarWhereInput[]
  NOT?: ProcessScalarWhereInput[]
}
export type ProcessScalarWhereInputInputObject =
  | Extract<keyof ProcessScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ProcessUpdateManyWithWhereNestedInput {
  where?: ProcessScalarWhereInput
  data?: ProcessUpdateManyDataInput
}
export type ProcessUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof ProcessUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ProcessUpdateManyDataInput {
  name?: string | null
  description?: string | null
}
export type ProcessUpdateManyDataInputInputObject =
  | Extract<keyof ProcessUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  
export interface BusinessRoleUpsertWithoutAppBusinessOwnerInput {
  update?: BusinessRoleUpdateWithoutAppBusinessOwnerDataInput
  create?: BusinessRoleCreateWithoutAppBusinessOwnerInput
}
export type BusinessRoleUpsertWithoutAppBusinessOwnerInputInputObject =
  | Extract<keyof BusinessRoleUpsertWithoutAppBusinessOwnerInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ApplicationUpsertWithWhereUniqueWithoutProcessingActivitiesInput {
  where?: ApplicationWhereUniqueInput
  update?: ApplicationUpdateWithoutProcessingActivitiesDataInput
  create?: ApplicationCreateWithoutProcessingActivitiesInput
}
export type ApplicationUpsertWithWhereUniqueWithoutProcessingActivitiesInputInputObject =
  | Extract<keyof ApplicationUpsertWithWhereUniqueWithoutProcessingActivitiesInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ProcessingActivityUpsertWithWhereUniqueWithoutProcessInput {
  where?: ProcessingActivityWhereUniqueInput
  update?: ProcessingActivityUpdateWithoutProcessDataInput
  create?: ProcessingActivityCreateWithoutProcessInput
}
export type ProcessingActivityUpsertWithWhereUniqueWithoutProcessInputInputObject =
  | Extract<keyof ProcessingActivityUpsertWithWhereUniqueWithoutProcessInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ProcessUpsertWithWhereUniqueWithoutOrganizationalUnitInput {
  where?: ProcessWhereUniqueInput
  update?: ProcessUpdateWithoutOrganizationalUnitDataInput
  create?: ProcessCreateWithoutOrganizationalUnitInput
}
export type ProcessUpsertWithWhereUniqueWithoutOrganizationalUnitInputInputObject =
  | Extract<keyof ProcessUpsertWithWhereUniqueWithoutOrganizationalUnitInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrganizationalUnitUpsertWithWhereUniqueWithoutParentInput {
  where?: OrganizationalUnitWhereUniqueInput
  update?: OrganizationalUnitUpdateWithoutParentDataInput
  create?: OrganizationalUnitCreateWithoutParentInput
}
export type OrganizationalUnitUpsertWithWhereUniqueWithoutParentInputInputObject =
  | Extract<keyof OrganizationalUnitUpsertWithWhereUniqueWithoutParentInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrganizationalUnitScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: OrganizationalUnitScalarWhereInput[]
  OR?: OrganizationalUnitScalarWhereInput[]
  NOT?: OrganizationalUnitScalarWhereInput[]
}
export type OrganizationalUnitScalarWhereInputInputObject =
  | Extract<keyof OrganizationalUnitScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrganizationalUnitUpdateManyWithWhereNestedInput {
  where?: OrganizationalUnitScalarWhereInput
  data?: OrganizationalUnitUpdateManyDataInput
}
export type OrganizationalUnitUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof OrganizationalUnitUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrganizationalUnitUpdateManyDataInput {
  name?: string | null
  description?: string | null
}
export type OrganizationalUnitUpdateManyDataInputInputObject =
  | Extract<keyof OrganizationalUnitUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  
export interface OrganizationalUnitUpsertWithoutBusinessRolesInput {
  update?: OrganizationalUnitUpdateWithoutBusinessRolesDataInput
  create?: OrganizationalUnitCreateWithoutBusinessRolesInput
}
export type OrganizationalUnitUpsertWithoutBusinessRolesInputInputObject =
  | Extract<keyof OrganizationalUnitUpsertWithoutBusinessRolesInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface BusinessRoleUpsertWithWhereUniqueWithoutPersonInput {
  where?: BusinessRoleWhereUniqueInput
  update?: BusinessRoleUpdateWithoutPersonDataInput
  create?: BusinessRoleCreateWithoutPersonInput
}
export type BusinessRoleUpsertWithWhereUniqueWithoutPersonInputInputObject =
  | Extract<keyof BusinessRoleUpsertWithWhereUniqueWithoutPersonInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PersonUpsertWithoutUserInput {
  update?: PersonUpdateWithoutUserDataInput
  create?: PersonCreateWithoutUserInput
}
export type PersonUpsertWithoutUserInputInputObject =
  | Extract<keyof PersonUpsertWithoutUserInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface UserUpdateManyMutationInput {
  email?: string | null
  password?: string | null
  active?: boolean | null
  specialPermissions?: UserUpdatespecialPermissionsInput | null
}
export type UserUpdateManyMutationInputInputObject =
  | Extract<keyof UserUpdateManyMutationInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'active', alias?: string  } 
  | { name: 'specialPermissions', alias?: string  } 
  
export interface PersonCreateInput {
  id?: string | null
  name?: string
  surname?: string | null
  user?: UserCreateOneWithoutPersonInput | null
  roles?: BusinessRoleCreateManyWithoutPersonInput | null
}
export type PersonCreateInputInputObject =
  | Extract<keyof PersonCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'surname', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'roles', alias?: string  } 
  
export interface PersonUpdateInput {
  name?: string | null
  surname?: string | null
  user?: UserUpdateOneWithoutPersonInput | null
  roles?: BusinessRoleUpdateManyWithoutPersonInput | null
}
export type PersonUpdateInputInputObject =
  | Extract<keyof PersonUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'surname', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'roles', alias?: string  } 
  
export interface PersonUpdateManyMutationInput {
  name?: string | null
  surname?: string | null
}
export type PersonUpdateManyMutationInputInputObject =
  | Extract<keyof PersonUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'surname', alias?: string  } 
  
export interface BusinessRoleCreateInput {
  id?: string | null
  name?: string
  description?: string | null
  raciPrivacy?: prisma.RACI | null
  raciSecurity?: prisma.RACI | null
  raciFinancial?: prisma.RACI | null
  raciExecutive?: prisma.RACI | null
  person?: PersonCreateOneWithoutRolesInput | null
  organizationalUnit?: OrganizationalUnitCreateOneWithoutBusinessRolesInput
  process?: ProcessCreateManyWithoutProcessOwnerInput | null
  appBusinessOwner?: ApplicationCreateManyWithoutBusinessOwnerInput | null
  appItOwner?: ApplicationCreateManyWithoutItOwnerInput | null
  appSecAdmin?: ApplicationCreateManyWithoutSecurityAdministratorInput | null
}
export type BusinessRoleCreateInputInputObject =
  | Extract<keyof BusinessRoleCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'raciPrivacy', alias?: string  } 
  | { name: 'raciSecurity', alias?: string  } 
  | { name: 'raciFinancial', alias?: string  } 
  | { name: 'raciExecutive', alias?: string  } 
  | { name: 'person', alias?: string  } 
  | { name: 'organizationalUnit', alias?: string  } 
  | { name: 'process', alias?: string  } 
  | { name: 'appBusinessOwner', alias?: string  } 
  | { name: 'appItOwner', alias?: string  } 
  | { name: 'appSecAdmin', alias?: string  } 
  
export interface BusinessRoleUpdateInput {
  name?: string | null
  description?: string | null
  raciPrivacy?: prisma.RACI | null
  raciSecurity?: prisma.RACI | null
  raciFinancial?: prisma.RACI | null
  raciExecutive?: prisma.RACI | null
  person?: PersonUpdateOneWithoutRolesInput | null
  organizationalUnit?: OrganizationalUnitUpdateOneRequiredWithoutBusinessRolesInput | null
  process?: ProcessUpdateManyWithoutProcessOwnerInput | null
  appBusinessOwner?: ApplicationUpdateManyWithoutBusinessOwnerInput | null
  appItOwner?: ApplicationUpdateManyWithoutItOwnerInput | null
  appSecAdmin?: ApplicationUpdateManyWithoutSecurityAdministratorInput | null
}
export type BusinessRoleUpdateInputInputObject =
  | Extract<keyof BusinessRoleUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'raciPrivacy', alias?: string  } 
  | { name: 'raciSecurity', alias?: string  } 
  | { name: 'raciFinancial', alias?: string  } 
  | { name: 'raciExecutive', alias?: string  } 
  | { name: 'person', alias?: string  } 
  | { name: 'organizationalUnit', alias?: string  } 
  | { name: 'process', alias?: string  } 
  | { name: 'appBusinessOwner', alias?: string  } 
  | { name: 'appItOwner', alias?: string  } 
  | { name: 'appSecAdmin', alias?: string  } 
  
export interface BusinessRoleUpdateManyMutationInput {
  name?: string | null
  description?: string | null
  raciPrivacy?: prisma.RACI | null
  raciSecurity?: prisma.RACI | null
  raciFinancial?: prisma.RACI | null
  raciExecutive?: prisma.RACI | null
}
export type BusinessRoleUpdateManyMutationInputInputObject =
  | Extract<keyof BusinessRoleUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'raciPrivacy', alias?: string  } 
  | { name: 'raciSecurity', alias?: string  } 
  | { name: 'raciFinancial', alias?: string  } 
  | { name: 'raciExecutive', alias?: string  } 
  
export interface OrganizationalUnitCreateInput {
  id?: string | null
  name?: string
  description?: string | null
  children?: OrganizationalUnitCreateManyWithoutParentInput | null
  parent?: OrganizationalUnitCreateOneWithoutChildrenInput | null
  processes?: ProcessCreateManyWithoutOrganizationalUnitInput | null
  businessRoles?: BusinessRoleCreateManyWithoutOrganizationalUnitInput | null
  organizationalUnitType?: OrganizationalUnitTypeCreateOneWithoutOrganizationalUnitInput | null
}
export type OrganizationalUnitCreateInputInputObject =
  | Extract<keyof OrganizationalUnitCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'children', alias?: string  } 
  | { name: 'parent', alias?: string  } 
  | { name: 'processes', alias?: string  } 
  | { name: 'businessRoles', alias?: string  } 
  | { name: 'organizationalUnitType', alias?: string  } 
  
export interface OrganizationalUnitUpdateInput {
  name?: string | null
  description?: string | null
  children?: OrganizationalUnitUpdateManyWithoutParentInput | null
  parent?: OrganizationalUnitUpdateOneWithoutChildrenInput | null
  processes?: ProcessUpdateManyWithoutOrganizationalUnitInput | null
  businessRoles?: BusinessRoleUpdateManyWithoutOrganizationalUnitInput | null
  organizationalUnitType?: OrganizationalUnitTypeUpdateOneWithoutOrganizationalUnitInput | null
}
export type OrganizationalUnitUpdateInputInputObject =
  | Extract<keyof OrganizationalUnitUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'children', alias?: string  } 
  | { name: 'parent', alias?: string  } 
  | { name: 'processes', alias?: string  } 
  | { name: 'businessRoles', alias?: string  } 
  | { name: 'organizationalUnitType', alias?: string  } 
  
export interface OrganizationalUnitUpdateManyMutationInput {
  name?: string | null
  description?: string | null
}
export type OrganizationalUnitUpdateManyMutationInputInputObject =
  | Extract<keyof OrganizationalUnitUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  
export interface OrganizationalUnitTypeCreateInput {
  id?: string | null
  name?: string
  description?: string | null
  reportingUnit?: boolean | null
  organizationalUnit?: OrganizationalUnitCreateManyWithoutOrganizationalUnitTypeInput | null
}
export type OrganizationalUnitTypeCreateInputInputObject =
  | Extract<keyof OrganizationalUnitTypeCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'reportingUnit', alias?: string  } 
  | { name: 'organizationalUnit', alias?: string  } 
  
export interface OrganizationalUnitCreateManyWithoutOrganizationalUnitTypeInput {
  create?: OrganizationalUnitCreateWithoutOrganizationalUnitTypeInput[]
  connect?: OrganizationalUnitWhereUniqueInput[]
}
export type OrganizationalUnitCreateManyWithoutOrganizationalUnitTypeInputInputObject =
  | Extract<keyof OrganizationalUnitCreateManyWithoutOrganizationalUnitTypeInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrganizationalUnitCreateWithoutOrganizationalUnitTypeInput {
  id?: string | null
  name?: string
  description?: string | null
  children?: OrganizationalUnitCreateManyWithoutParentInput | null
  parent?: OrganizationalUnitCreateOneWithoutChildrenInput | null
  processes?: ProcessCreateManyWithoutOrganizationalUnitInput | null
  businessRoles?: BusinessRoleCreateManyWithoutOrganizationalUnitInput | null
}
export type OrganizationalUnitCreateWithoutOrganizationalUnitTypeInputInputObject =
  | Extract<keyof OrganizationalUnitCreateWithoutOrganizationalUnitTypeInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'children', alias?: string  } 
  | { name: 'parent', alias?: string  } 
  | { name: 'processes', alias?: string  } 
  | { name: 'businessRoles', alias?: string  } 
  
export interface OrganizationalUnitTypeUpdateInput {
  name?: string | null
  description?: string | null
  reportingUnit?: boolean | null
  organizationalUnit?: OrganizationalUnitUpdateManyWithoutOrganizationalUnitTypeInput | null
}
export type OrganizationalUnitTypeUpdateInputInputObject =
  | Extract<keyof OrganizationalUnitTypeUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'reportingUnit', alias?: string  } 
  | { name: 'organizationalUnit', alias?: string  } 
  
export interface OrganizationalUnitUpdateManyWithoutOrganizationalUnitTypeInput {
  create?: OrganizationalUnitCreateWithoutOrganizationalUnitTypeInput[]
  delete?: OrganizationalUnitWhereUniqueInput[]
  connect?: OrganizationalUnitWhereUniqueInput[]
  set?: OrganizationalUnitWhereUniqueInput[]
  disconnect?: OrganizationalUnitWhereUniqueInput[]
  update?: OrganizationalUnitUpdateWithWhereUniqueWithoutOrganizationalUnitTypeInput[]
  upsert?: OrganizationalUnitUpsertWithWhereUniqueWithoutOrganizationalUnitTypeInput[]
  deleteMany?: OrganizationalUnitScalarWhereInput[]
  updateMany?: OrganizationalUnitUpdateManyWithWhereNestedInput[]
}
export type OrganizationalUnitUpdateManyWithoutOrganizationalUnitTypeInputInputObject =
  | Extract<keyof OrganizationalUnitUpdateManyWithoutOrganizationalUnitTypeInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface OrganizationalUnitUpdateWithWhereUniqueWithoutOrganizationalUnitTypeInput {
  where?: OrganizationalUnitWhereUniqueInput
  data?: OrganizationalUnitUpdateWithoutOrganizationalUnitTypeDataInput
}
export type OrganizationalUnitUpdateWithWhereUniqueWithoutOrganizationalUnitTypeInputInputObject =
  | Extract<keyof OrganizationalUnitUpdateWithWhereUniqueWithoutOrganizationalUnitTypeInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrganizationalUnitUpdateWithoutOrganizationalUnitTypeDataInput {
  name?: string | null
  description?: string | null
  children?: OrganizationalUnitUpdateManyWithoutParentInput | null
  parent?: OrganizationalUnitUpdateOneWithoutChildrenInput | null
  processes?: ProcessUpdateManyWithoutOrganizationalUnitInput | null
  businessRoles?: BusinessRoleUpdateManyWithoutOrganizationalUnitInput | null
}
export type OrganizationalUnitUpdateWithoutOrganizationalUnitTypeDataInputInputObject =
  | Extract<keyof OrganizationalUnitUpdateWithoutOrganizationalUnitTypeDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'children', alias?: string  } 
  | { name: 'parent', alias?: string  } 
  | { name: 'processes', alias?: string  } 
  | { name: 'businessRoles', alias?: string  } 
  
export interface OrganizationalUnitUpsertWithWhereUniqueWithoutOrganizationalUnitTypeInput {
  where?: OrganizationalUnitWhereUniqueInput
  update?: OrganizationalUnitUpdateWithoutOrganizationalUnitTypeDataInput
  create?: OrganizationalUnitCreateWithoutOrganizationalUnitTypeInput
}
export type OrganizationalUnitUpsertWithWhereUniqueWithoutOrganizationalUnitTypeInputInputObject =
  | Extract<keyof OrganizationalUnitUpsertWithWhereUniqueWithoutOrganizationalUnitTypeInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrganizationalUnitTypeUpdateManyMutationInput {
  name?: string | null
  description?: string | null
  reportingUnit?: boolean | null
}
export type OrganizationalUnitTypeUpdateManyMutationInputInputObject =
  | Extract<keyof OrganizationalUnitTypeUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'reportingUnit', alias?: string  } 
  
export interface ProcessCreateInput {
  id?: string | null
  name?: string
  description?: string | null
  organizationalUnit?: OrganizationalUnitCreateOneWithoutProcessesInput | null
  processingActivities?: ProcessingActivityCreateManyWithoutProcessInput | null
  processOwner?: BusinessRoleCreateOneWithoutProcessInput | null
}
export type ProcessCreateInputInputObject =
  | Extract<keyof ProcessCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'organizationalUnit', alias?: string  } 
  | { name: 'processingActivities', alias?: string  } 
  | { name: 'processOwner', alias?: string  } 
  
export interface ProcessUpdateInput {
  name?: string | null
  description?: string | null
  organizationalUnit?: OrganizationalUnitUpdateOneWithoutProcessesInput | null
  processingActivities?: ProcessingActivityUpdateManyWithoutProcessInput | null
  processOwner?: BusinessRoleUpdateOneWithoutProcessInput | null
}
export type ProcessUpdateInputInputObject =
  | Extract<keyof ProcessUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'organizationalUnit', alias?: string  } 
  | { name: 'processingActivities', alias?: string  } 
  | { name: 'processOwner', alias?: string  } 
  
export interface ProcessUpdateManyMutationInput {
  name?: string | null
  description?: string | null
}
export type ProcessUpdateManyMutationInputInputObject =
  | Extract<keyof ProcessUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  
export interface ProcessingActivityCreateInput {
  id?: string | null
  name?: string
  description?: string | null
  purpose?: string | null
  process?: ProcessCreateOneWithoutProcessingActivitiesInput | null
  applications?: ApplicationCreateManyWithoutProcessingActivitiesInput | null
}
export type ProcessingActivityCreateInputInputObject =
  | Extract<keyof ProcessingActivityCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'purpose', alias?: string  } 
  | { name: 'process', alias?: string  } 
  | { name: 'applications', alias?: string  } 
  
export interface ProcessingActivityUpdateInput {
  name?: string | null
  description?: string | null
  purpose?: string | null
  process?: ProcessUpdateOneWithoutProcessingActivitiesInput | null
  applications?: ApplicationUpdateManyWithoutProcessingActivitiesInput | null
}
export type ProcessingActivityUpdateInputInputObject =
  | Extract<keyof ProcessingActivityUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'purpose', alias?: string  } 
  | { name: 'process', alias?: string  } 
  | { name: 'applications', alias?: string  } 
  
export interface ProcessingActivityUpdateManyMutationInput {
  name?: string | null
  description?: string | null
  purpose?: string | null
}
export type ProcessingActivityUpdateManyMutationInputInputObject =
  | Extract<keyof ProcessingActivityUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'purpose', alias?: string  } 
  
export interface ApplicationCreateInput {
  id?: string | null
  name?: string
  alias?: undefined | null
  description?: string | null
  processingActivities?: ProcessingActivityCreateManyWithoutApplicationsInput | null
  dataTypes?: DataTypeCreateManyWithoutApplicationInput | null
  businessOwner?: BusinessRoleCreateOneWithoutAppBusinessOwnerInput | null
  itOwner?: BusinessRoleCreateOneWithoutAppItOwnerInput | null
  securityAdministrator?: BusinessRoleCreateOneWithoutAppSecAdminInput | null
}
export type ApplicationCreateInputInputObject =
  | Extract<keyof ApplicationCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'alias', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'processingActivities', alias?: string  } 
  | { name: 'dataTypes', alias?: string  } 
  | { name: 'businessOwner', alias?: string  } 
  | { name: 'itOwner', alias?: string  } 
  | { name: 'securityAdministrator', alias?: string  } 
  
export interface ApplicationUpdateInput {
  name?: string | null
  alias?: undefined | null
  description?: string | null
  processingActivities?: ProcessingActivityUpdateManyWithoutApplicationsInput | null
  dataTypes?: DataTypeUpdateManyWithoutApplicationInput | null
  businessOwner?: BusinessRoleUpdateOneWithoutAppBusinessOwnerInput | null
  itOwner?: BusinessRoleUpdateOneWithoutAppItOwnerInput | null
  securityAdministrator?: BusinessRoleUpdateOneWithoutAppSecAdminInput | null
}
export type ApplicationUpdateInputInputObject =
  | Extract<keyof ApplicationUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'alias', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'processingActivities', alias?: string  } 
  | { name: 'dataTypes', alias?: string  } 
  | { name: 'businessOwner', alias?: string  } 
  | { name: 'itOwner', alias?: string  } 
  | { name: 'securityAdministrator', alias?: string  } 
  
export interface ApplicationUpdateManyMutationInput {
  name?: string | null
  alias?: undefined | null
  description?: string | null
}
export type ApplicationUpdateManyMutationInputInputObject =
  | Extract<keyof ApplicationUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'alias', alias?: string  } 
  | { name: 'description', alias?: string  } 
  
export interface DataTypeCreateInput {
  id?: string | null
  name?: string
  description?: string | null
  application?: ApplicationCreateManyWithoutDataTypesInput | null
  classificationLabels?: ClassificationLabelCreateManyWithoutDataTypeInput | null
}
export type DataTypeCreateInputInputObject =
  | Extract<keyof DataTypeCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'application', alias?: string  } 
  | { name: 'classificationLabels', alias?: string  } 
  
export interface ApplicationCreateManyWithoutDataTypesInput {
  create?: ApplicationCreateWithoutDataTypesInput[]
  connect?: ApplicationWhereUniqueInput[]
}
export type ApplicationCreateManyWithoutDataTypesInputInputObject =
  | Extract<keyof ApplicationCreateManyWithoutDataTypesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ApplicationCreateWithoutDataTypesInput {
  id?: string | null
  name?: string
  alias?: undefined | null
  description?: string | null
  processingActivities?: ProcessingActivityCreateManyWithoutApplicationsInput | null
  businessOwner?: BusinessRoleCreateOneWithoutAppBusinessOwnerInput | null
  itOwner?: BusinessRoleCreateOneWithoutAppItOwnerInput | null
  securityAdministrator?: BusinessRoleCreateOneWithoutAppSecAdminInput | null
}
export type ApplicationCreateWithoutDataTypesInputInputObject =
  | Extract<keyof ApplicationCreateWithoutDataTypesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'alias', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'processingActivities', alias?: string  } 
  | { name: 'businessOwner', alias?: string  } 
  | { name: 'itOwner', alias?: string  } 
  | { name: 'securityAdministrator', alias?: string  } 
  
export interface DataTypeUpdateInput {
  name?: string | null
  description?: string | null
  application?: ApplicationUpdateManyWithoutDataTypesInput | null
  classificationLabels?: ClassificationLabelUpdateManyWithoutDataTypeInput | null
}
export type DataTypeUpdateInputInputObject =
  | Extract<keyof DataTypeUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'application', alias?: string  } 
  | { name: 'classificationLabels', alias?: string  } 
  
export interface ApplicationUpdateManyWithoutDataTypesInput {
  create?: ApplicationCreateWithoutDataTypesInput[]
  delete?: ApplicationWhereUniqueInput[]
  connect?: ApplicationWhereUniqueInput[]
  set?: ApplicationWhereUniqueInput[]
  disconnect?: ApplicationWhereUniqueInput[]
  update?: ApplicationUpdateWithWhereUniqueWithoutDataTypesInput[]
  upsert?: ApplicationUpsertWithWhereUniqueWithoutDataTypesInput[]
  deleteMany?: ApplicationScalarWhereInput[]
  updateMany?: ApplicationUpdateManyWithWhereNestedInput[]
}
export type ApplicationUpdateManyWithoutDataTypesInputInputObject =
  | Extract<keyof ApplicationUpdateManyWithoutDataTypesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ApplicationUpdateWithWhereUniqueWithoutDataTypesInput {
  where?: ApplicationWhereUniqueInput
  data?: ApplicationUpdateWithoutDataTypesDataInput
}
export type ApplicationUpdateWithWhereUniqueWithoutDataTypesInputInputObject =
  | Extract<keyof ApplicationUpdateWithWhereUniqueWithoutDataTypesInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ApplicationUpdateWithoutDataTypesDataInput {
  name?: string | null
  alias?: undefined | null
  description?: string | null
  processingActivities?: ProcessingActivityUpdateManyWithoutApplicationsInput | null
  businessOwner?: BusinessRoleUpdateOneWithoutAppBusinessOwnerInput | null
  itOwner?: BusinessRoleUpdateOneWithoutAppItOwnerInput | null
  securityAdministrator?: BusinessRoleUpdateOneWithoutAppSecAdminInput | null
}
export type ApplicationUpdateWithoutDataTypesDataInputInputObject =
  | Extract<keyof ApplicationUpdateWithoutDataTypesDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'alias', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'processingActivities', alias?: string  } 
  | { name: 'businessOwner', alias?: string  } 
  | { name: 'itOwner', alias?: string  } 
  | { name: 'securityAdministrator', alias?: string  } 
  
export interface ApplicationUpsertWithWhereUniqueWithoutDataTypesInput {
  where?: ApplicationWhereUniqueInput
  update?: ApplicationUpdateWithoutDataTypesDataInput
  create?: ApplicationCreateWithoutDataTypesInput
}
export type ApplicationUpsertWithWhereUniqueWithoutDataTypesInputInputObject =
  | Extract<keyof ApplicationUpsertWithWhereUniqueWithoutDataTypesInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface DataTypeUpdateManyMutationInput {
  name?: string | null
  description?: string | null
}
export type DataTypeUpdateManyMutationInputInputObject =
  | Extract<keyof DataTypeUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  
export interface QualityAttributeCreateInput {
  id?: string | null
  name?: string
  description?: string | null
  appliesToObject?: prisma.CLASSIFICATIONOBJECT
  classificationLabels?: ClassificationLabelCreateManyWithoutQualityAttributeInput | null
}
export type QualityAttributeCreateInputInputObject =
  | Extract<keyof QualityAttributeCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'appliesToObject', alias?: string  } 
  | { name: 'classificationLabels', alias?: string  } 
  
export interface ClassificationLabelCreateManyWithoutQualityAttributeInput {
  create?: ClassificationLabelCreateWithoutQualityAttributeInput[]
  connect?: ClassificationLabelWhereUniqueInput[]
}
export type ClassificationLabelCreateManyWithoutQualityAttributeInputInputObject =
  | Extract<keyof ClassificationLabelCreateManyWithoutQualityAttributeInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ClassificationLabelCreateWithoutQualityAttributeInput {
  id?: string | null
  score?: number
  label?: string
  criteria?: string | null
  dataType?: DataTypeCreateManyWithoutClassificationLabelsInput | null
}
export type ClassificationLabelCreateWithoutQualityAttributeInputInputObject =
  | Extract<keyof ClassificationLabelCreateWithoutQualityAttributeInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'score', alias?: string  } 
  | { name: 'label', alias?: string  } 
  | { name: 'criteria', alias?: string  } 
  | { name: 'dataType', alias?: string  } 
  
export interface DataTypeCreateManyWithoutClassificationLabelsInput {
  create?: DataTypeCreateWithoutClassificationLabelsInput[]
  connect?: DataTypeWhereUniqueInput[]
}
export type DataTypeCreateManyWithoutClassificationLabelsInputInputObject =
  | Extract<keyof DataTypeCreateManyWithoutClassificationLabelsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface DataTypeCreateWithoutClassificationLabelsInput {
  id?: string | null
  name?: string
  description?: string | null
  application?: ApplicationCreateManyWithoutDataTypesInput | null
}
export type DataTypeCreateWithoutClassificationLabelsInputInputObject =
  | Extract<keyof DataTypeCreateWithoutClassificationLabelsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'application', alias?: string  } 
  
export interface QualityAttributeUpdateInput {
  name?: string | null
  description?: string | null
  appliesToObject?: prisma.CLASSIFICATIONOBJECT | null
  classificationLabels?: ClassificationLabelUpdateManyWithoutQualityAttributeInput | null
}
export type QualityAttributeUpdateInputInputObject =
  | Extract<keyof QualityAttributeUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'appliesToObject', alias?: string  } 
  | { name: 'classificationLabels', alias?: string  } 
  
export interface ClassificationLabelUpdateManyWithoutQualityAttributeInput {
  create?: ClassificationLabelCreateWithoutQualityAttributeInput[]
  delete?: ClassificationLabelWhereUniqueInput[]
  connect?: ClassificationLabelWhereUniqueInput[]
  set?: ClassificationLabelWhereUniqueInput[]
  disconnect?: ClassificationLabelWhereUniqueInput[]
  update?: ClassificationLabelUpdateWithWhereUniqueWithoutQualityAttributeInput[]
  upsert?: ClassificationLabelUpsertWithWhereUniqueWithoutQualityAttributeInput[]
  deleteMany?: ClassificationLabelScalarWhereInput[]
  updateMany?: ClassificationLabelUpdateManyWithWhereNestedInput[]
}
export type ClassificationLabelUpdateManyWithoutQualityAttributeInputInputObject =
  | Extract<keyof ClassificationLabelUpdateManyWithoutQualityAttributeInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ClassificationLabelUpdateWithWhereUniqueWithoutQualityAttributeInput {
  where?: ClassificationLabelWhereUniqueInput
  data?: ClassificationLabelUpdateWithoutQualityAttributeDataInput
}
export type ClassificationLabelUpdateWithWhereUniqueWithoutQualityAttributeInputInputObject =
  | Extract<keyof ClassificationLabelUpdateWithWhereUniqueWithoutQualityAttributeInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ClassificationLabelUpdateWithoutQualityAttributeDataInput {
  score?: number | null
  label?: string | null
  criteria?: string | null
  dataType?: DataTypeUpdateManyWithoutClassificationLabelsInput | null
}
export type ClassificationLabelUpdateWithoutQualityAttributeDataInputInputObject =
  | Extract<keyof ClassificationLabelUpdateWithoutQualityAttributeDataInput, string>
  | { name: 'score', alias?: string  } 
  | { name: 'label', alias?: string  } 
  | { name: 'criteria', alias?: string  } 
  | { name: 'dataType', alias?: string  } 
  
export interface DataTypeUpdateManyWithoutClassificationLabelsInput {
  create?: DataTypeCreateWithoutClassificationLabelsInput[]
  delete?: DataTypeWhereUniqueInput[]
  connect?: DataTypeWhereUniqueInput[]
  set?: DataTypeWhereUniqueInput[]
  disconnect?: DataTypeWhereUniqueInput[]
  update?: DataTypeUpdateWithWhereUniqueWithoutClassificationLabelsInput[]
  upsert?: DataTypeUpsertWithWhereUniqueWithoutClassificationLabelsInput[]
  deleteMany?: DataTypeScalarWhereInput[]
  updateMany?: DataTypeUpdateManyWithWhereNestedInput[]
}
export type DataTypeUpdateManyWithoutClassificationLabelsInputInputObject =
  | Extract<keyof DataTypeUpdateManyWithoutClassificationLabelsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface DataTypeUpdateWithWhereUniqueWithoutClassificationLabelsInput {
  where?: DataTypeWhereUniqueInput
  data?: DataTypeUpdateWithoutClassificationLabelsDataInput
}
export type DataTypeUpdateWithWhereUniqueWithoutClassificationLabelsInputInputObject =
  | Extract<keyof DataTypeUpdateWithWhereUniqueWithoutClassificationLabelsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface DataTypeUpdateWithoutClassificationLabelsDataInput {
  name?: string | null
  description?: string | null
  application?: ApplicationUpdateManyWithoutDataTypesInput | null
}
export type DataTypeUpdateWithoutClassificationLabelsDataInputInputObject =
  | Extract<keyof DataTypeUpdateWithoutClassificationLabelsDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'application', alias?: string  } 
  
export interface DataTypeUpsertWithWhereUniqueWithoutClassificationLabelsInput {
  where?: DataTypeWhereUniqueInput
  update?: DataTypeUpdateWithoutClassificationLabelsDataInput
  create?: DataTypeCreateWithoutClassificationLabelsInput
}
export type DataTypeUpsertWithWhereUniqueWithoutClassificationLabelsInputInputObject =
  | Extract<keyof DataTypeUpsertWithWhereUniqueWithoutClassificationLabelsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ClassificationLabelUpsertWithWhereUniqueWithoutQualityAttributeInput {
  where?: ClassificationLabelWhereUniqueInput
  update?: ClassificationLabelUpdateWithoutQualityAttributeDataInput
  create?: ClassificationLabelCreateWithoutQualityAttributeInput
}
export type ClassificationLabelUpsertWithWhereUniqueWithoutQualityAttributeInputInputObject =
  | Extract<keyof ClassificationLabelUpsertWithWhereUniqueWithoutQualityAttributeInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface QualityAttributeUpdateManyMutationInput {
  name?: string | null
  description?: string | null
  appliesToObject?: prisma.CLASSIFICATIONOBJECT | null
}
export type QualityAttributeUpdateManyMutationInputInputObject =
  | Extract<keyof QualityAttributeUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'appliesToObject', alias?: string  } 
  
export interface ClassificationLabelCreateInput {
  id?: string | null
  score?: number
  label?: string
  criteria?: string | null
  qualityAttribute?: QualityAttributeCreateOneWithoutClassificationLabelsInput | null
  dataType?: DataTypeCreateManyWithoutClassificationLabelsInput | null
}
export type ClassificationLabelCreateInputInputObject =
  | Extract<keyof ClassificationLabelCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'score', alias?: string  } 
  | { name: 'label', alias?: string  } 
  | { name: 'criteria', alias?: string  } 
  | { name: 'qualityAttribute', alias?: string  } 
  | { name: 'dataType', alias?: string  } 
  
export interface ClassificationLabelUpdateInput {
  score?: number | null
  label?: string | null
  criteria?: string | null
  qualityAttribute?: QualityAttributeUpdateOneWithoutClassificationLabelsInput | null
  dataType?: DataTypeUpdateManyWithoutClassificationLabelsInput | null
}
export type ClassificationLabelUpdateInputInputObject =
  | Extract<keyof ClassificationLabelUpdateInput, string>
  | { name: 'score', alias?: string  } 
  | { name: 'label', alias?: string  } 
  | { name: 'criteria', alias?: string  } 
  | { name: 'qualityAttribute', alias?: string  } 
  | { name: 'dataType', alias?: string  } 
  
export interface ClassificationLabelUpdateManyMutationInput {
  score?: number | null
  label?: string | null
  criteria?: string | null
}
export type ClassificationLabelUpdateManyMutationInputInputObject =
  | Extract<keyof ClassificationLabelUpdateManyMutationInput, string>
  | { name: 'score', alias?: string  } 
  | { name: 'label', alias?: string  } 
  | { name: 'criteria', alias?: string  } 
  
export interface OrganizationCreateInput {
  id?: string | null
  name?: string
  description?: string | null
  contactDetails?: string
  dpo?: string
  representative?: string
  headOffice?: LocationCreateOneWithoutOrganizationInput
}
export type OrganizationCreateInputInputObject =
  | Extract<keyof OrganizationCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'contactDetails', alias?: string  } 
  | { name: 'dpo', alias?: string  } 
  | { name: 'representative', alias?: string  } 
  | { name: 'headOffice', alias?: string  } 
  
export interface LocationCreateOneWithoutOrganizationInput {
  create?: LocationCreateWithoutOrganizationInput | null
  connect?: LocationWhereUniqueInput | null
}
export type LocationCreateOneWithoutOrganizationInputInputObject =
  | Extract<keyof LocationCreateOneWithoutOrganizationInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface LocationCreateWithoutOrganizationInput {
  id?: string | null
  name?: string
  description?: string | null
  address?: string
}
export type LocationCreateWithoutOrganizationInputInputObject =
  | Extract<keyof LocationCreateWithoutOrganizationInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'address', alias?: string  } 
  
export interface OrganizationUpdateInput {
  name?: string | null
  description?: string | null
  contactDetails?: string | null
  dpo?: string | null
  representative?: string | null
  headOffice?: LocationUpdateOneRequiredWithoutOrganizationInput | null
}
export type OrganizationUpdateInputInputObject =
  | Extract<keyof OrganizationUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'contactDetails', alias?: string  } 
  | { name: 'dpo', alias?: string  } 
  | { name: 'representative', alias?: string  } 
  | { name: 'headOffice', alias?: string  } 
  
export interface LocationUpdateOneRequiredWithoutOrganizationInput {
  create?: LocationCreateWithoutOrganizationInput | null
  update?: LocationUpdateWithoutOrganizationDataInput | null
  upsert?: LocationUpsertWithoutOrganizationInput | null
  connect?: LocationWhereUniqueInput | null
}
export type LocationUpdateOneRequiredWithoutOrganizationInputInputObject =
  | Extract<keyof LocationUpdateOneRequiredWithoutOrganizationInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface LocationUpdateWithoutOrganizationDataInput {
  name?: string | null
  description?: string | null
  address?: string | null
}
export type LocationUpdateWithoutOrganizationDataInputInputObject =
  | Extract<keyof LocationUpdateWithoutOrganizationDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'address', alias?: string  } 
  
export interface LocationUpsertWithoutOrganizationInput {
  update?: LocationUpdateWithoutOrganizationDataInput
  create?: LocationCreateWithoutOrganizationInput
}
export type LocationUpsertWithoutOrganizationInputInputObject =
  | Extract<keyof LocationUpsertWithoutOrganizationInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrganizationUpdateManyMutationInput {
  name?: string | null
  description?: string | null
  contactDetails?: string | null
  dpo?: string | null
  representative?: string | null
}
export type OrganizationUpdateManyMutationInputInputObject =
  | Extract<keyof OrganizationUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'contactDetails', alias?: string  } 
  | { name: 'dpo', alias?: string  } 
  | { name: 'representative', alias?: string  } 
  
export interface LocationCreateInput {
  id?: string | null
  name?: string
  description?: string | null
  address?: string
  organization?: OrganizationCreateOneWithoutHeadOfficeInput | null
}
export type LocationCreateInputInputObject =
  | Extract<keyof LocationCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'organization', alias?: string  } 
  
export interface OrganizationCreateOneWithoutHeadOfficeInput {
  create?: OrganizationCreateWithoutHeadOfficeInput | null
  connect?: OrganizationWhereUniqueInput | null
}
export type OrganizationCreateOneWithoutHeadOfficeInputInputObject =
  | Extract<keyof OrganizationCreateOneWithoutHeadOfficeInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrganizationCreateWithoutHeadOfficeInput {
  id?: string | null
  name?: string
  description?: string | null
  contactDetails?: string
  dpo?: string
  representative?: string
}
export type OrganizationCreateWithoutHeadOfficeInputInputObject =
  | Extract<keyof OrganizationCreateWithoutHeadOfficeInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'contactDetails', alias?: string  } 
  | { name: 'dpo', alias?: string  } 
  | { name: 'representative', alias?: string  } 
  
export interface LocationUpdateInput {
  name?: string | null
  description?: string | null
  address?: string | null
  organization?: OrganizationUpdateOneWithoutHeadOfficeInput | null
}
export type LocationUpdateInputInputObject =
  | Extract<keyof LocationUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'organization', alias?: string  } 
  
export interface OrganizationUpdateOneWithoutHeadOfficeInput {
  create?: OrganizationCreateWithoutHeadOfficeInput | null
  update?: OrganizationUpdateWithoutHeadOfficeDataInput | null
  upsert?: OrganizationUpsertWithoutHeadOfficeInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: OrganizationWhereUniqueInput | null
}
export type OrganizationUpdateOneWithoutHeadOfficeInputInputObject =
  | Extract<keyof OrganizationUpdateOneWithoutHeadOfficeInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrganizationUpdateWithoutHeadOfficeDataInput {
  name?: string | null
  description?: string | null
  contactDetails?: string | null
  dpo?: string | null
  representative?: string | null
}
export type OrganizationUpdateWithoutHeadOfficeDataInputInputObject =
  | Extract<keyof OrganizationUpdateWithoutHeadOfficeDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'contactDetails', alias?: string  } 
  | { name: 'dpo', alias?: string  } 
  | { name: 'representative', alias?: string  } 
  
export interface OrganizationUpsertWithoutHeadOfficeInput {
  update?: OrganizationUpdateWithoutHeadOfficeDataInput
  create?: OrganizationCreateWithoutHeadOfficeInput
}
export type OrganizationUpsertWithoutHeadOfficeInputInputObject =
  | Extract<keyof OrganizationUpsertWithoutHeadOfficeInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface LocationUpdateManyMutationInput {
  name?: string | null
  description?: string | null
  address?: string | null
}
export type LocationUpdateManyMutationInputInputObject =
  | Extract<keyof LocationUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'address', alias?: string  } 
  
export interface UserSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: UserWhereInput | null
  AND?: UserSubscriptionWhereInput[]
  OR?: UserSubscriptionWhereInput[]
  NOT?: UserSubscriptionWhereInput[]
}
export type UserSubscriptionWhereInputInputObject =
  | Extract<keyof UserSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PersonSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: PersonWhereInput | null
  AND?: PersonSubscriptionWhereInput[]
  OR?: PersonSubscriptionWhereInput[]
  NOT?: PersonSubscriptionWhereInput[]
}
export type PersonSubscriptionWhereInputInputObject =
  | Extract<keyof PersonSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface BusinessRoleSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: BusinessRoleWhereInput | null
  AND?: BusinessRoleSubscriptionWhereInput[]
  OR?: BusinessRoleSubscriptionWhereInput[]
  NOT?: BusinessRoleSubscriptionWhereInput[]
}
export type BusinessRoleSubscriptionWhereInputInputObject =
  | Extract<keyof BusinessRoleSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrganizationalUnitSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OrganizationalUnitWhereInput | null
  AND?: OrganizationalUnitSubscriptionWhereInput[]
  OR?: OrganizationalUnitSubscriptionWhereInput[]
  NOT?: OrganizationalUnitSubscriptionWhereInput[]
}
export type OrganizationalUnitSubscriptionWhereInputInputObject =
  | Extract<keyof OrganizationalUnitSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrganizationalUnitTypeSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OrganizationalUnitTypeWhereInput | null
  AND?: OrganizationalUnitTypeSubscriptionWhereInput[]
  OR?: OrganizationalUnitTypeSubscriptionWhereInput[]
  NOT?: OrganizationalUnitTypeSubscriptionWhereInput[]
}
export type OrganizationalUnitTypeSubscriptionWhereInputInputObject =
  | Extract<keyof OrganizationalUnitTypeSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ProcessSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ProcessWhereInput | null
  AND?: ProcessSubscriptionWhereInput[]
  OR?: ProcessSubscriptionWhereInput[]
  NOT?: ProcessSubscriptionWhereInput[]
}
export type ProcessSubscriptionWhereInputInputObject =
  | Extract<keyof ProcessSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ProcessingActivitySubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ProcessingActivityWhereInput | null
  AND?: ProcessingActivitySubscriptionWhereInput[]
  OR?: ProcessingActivitySubscriptionWhereInput[]
  NOT?: ProcessingActivitySubscriptionWhereInput[]
}
export type ProcessingActivitySubscriptionWhereInputInputObject =
  | Extract<keyof ProcessingActivitySubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ApplicationSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ApplicationWhereInput | null
  AND?: ApplicationSubscriptionWhereInput[]
  OR?: ApplicationSubscriptionWhereInput[]
  NOT?: ApplicationSubscriptionWhereInput[]
}
export type ApplicationSubscriptionWhereInputInputObject =
  | Extract<keyof ApplicationSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DataTypeSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: DataTypeWhereInput | null
  AND?: DataTypeSubscriptionWhereInput[]
  OR?: DataTypeSubscriptionWhereInput[]
  NOT?: DataTypeSubscriptionWhereInput[]
}
export type DataTypeSubscriptionWhereInputInputObject =
  | Extract<keyof DataTypeSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface QualityAttributeSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: QualityAttributeWhereInput | null
  AND?: QualityAttributeSubscriptionWhereInput[]
  OR?: QualityAttributeSubscriptionWhereInput[]
  NOT?: QualityAttributeSubscriptionWhereInput[]
}
export type QualityAttributeSubscriptionWhereInputInputObject =
  | Extract<keyof QualityAttributeSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ClassificationLabelSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ClassificationLabelWhereInput | null
  AND?: ClassificationLabelSubscriptionWhereInput[]
  OR?: ClassificationLabelSubscriptionWhereInput[]
  NOT?: ClassificationLabelSubscriptionWhereInput[]
}
export type ClassificationLabelSubscriptionWhereInputInputObject =
  | Extract<keyof ClassificationLabelSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrganizationSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OrganizationWhereInput | null
  AND?: OrganizationSubscriptionWhereInput[]
  OR?: OrganizationSubscriptionWhereInput[]
  NOT?: OrganizationSubscriptionWhereInput[]
}
export type OrganizationSubscriptionWhereInputInputObject =
  | Extract<keyof OrganizationSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface LocationSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: LocationWhereInput | null
  AND?: LocationSubscriptionWhereInput[]
  OR?: LocationSubscriptionWhereInput[]
  NOT?: LocationSubscriptionWhereInput[]
}
export type LocationSubscriptionWhereInputInputObject =
  | Extract<keyof LocationSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  

export type PERMISSIONValues =
  | 'ADMIN'
  | 'AUDIT'
  
export type RACIValues =
  | 'RESPONDSABLE'
  | 'ACCOUNTABLE'
  | 'CONSULTED'
  | 'INFORMED'
  
export type CLASSIFICATIONOBJECTValues =
  | 'DATA'
  | 'APPLICATION'
  
export type BusinessRoleOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'raciPrivacy_ASC'
  | 'raciPrivacy_DESC'
  | 'raciSecurity_ASC'
  | 'raciSecurity_DESC'
  | 'raciFinancial_ASC'
  | 'raciFinancial_DESC'
  | 'raciExecutive_ASC'
  | 'raciExecutive_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type OrganizationalUnitOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type ProcessOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type ProcessingActivityOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'purpose_ASC'
  | 'purpose_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type ApplicationOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'alias_ASC'
  | 'alias_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type DataTypeOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type ClassificationLabelOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'score_ASC'
  | 'score_DESC'
  | 'label_ASC'
  | 'label_DESC'
  | 'criteria_ASC'
  | 'criteria_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type UserOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'password_ASC'
  | 'password_DESC'
  | 'active_ASC'
  | 'active_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type PersonOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'surname_ASC'
  | 'surname_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type OrganizationalUnitTypeOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'reportingUnit_ASC'
  | 'reportingUnit_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type QualityAttributeOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'appliesToObject_ASC'
  | 'appliesToObject_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type OrganizationOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'contactDetails_ASC'
  | 'contactDetails_DESC'
  | 'dpo_ASC'
  | 'dpo_DESC'
  | 'representative_ASC'
  | 'representative_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type LocationOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'address_ASC'
  | 'address_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MutationTypeValues =
  | 'CREATED'
  | 'UPDATED'
  | 'DELETED'
  
  